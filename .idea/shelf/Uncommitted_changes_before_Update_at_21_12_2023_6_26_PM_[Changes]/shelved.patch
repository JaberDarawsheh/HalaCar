Index: src/main/java/CarAccessiores/CustomLogFormatter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/CarAccessiores/CustomLogFormatter.java b/src/main/java/CarAccessiores/CustomLogFormatter.java
new file mode 100644
--- /dev/null	(date 1703174050843)
+++ b/src/main/java/CarAccessiores/CustomLogFormatter.java	(date 1703174050843)
@@ -0,0 +1,23 @@
+package CarAccessiores;
+
+
+
+import java.util.logging.Formatter;
+
+import java.util.logging.LogRecord;
+
+
+
+public class CustomLogFormatter extends Formatter {
+
+    @Override
+
+    public String format(LogRecord record) {
+
+        // TODO Auto-generated method stub
+
+        return record.getMessage() + System.lineSeparator();
+
+    }
+
+}
\ No newline at end of file
Index: src/test/java/CarAccessiores/Test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\nimport org.junit.runner.RunWith;\r\nimport cucumber.api.CucumberOptions;\r\nimport cucumber.api.junit.Cucumber;\r\n\r\n@RunWith(Cucumber.class)\r\n@CucumberOptions(\r\n\t\tplugin= {\"html: target/cucumber.html\"},\r\n\t\tfeatures=\"use_cases\",\r\n\t\tglue=\"CarAccessories\")\r\npublic class Test {\r\n  \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/CarAccessiores/Test.java b/src/test/java/CarAccessiores/Test.java
--- a/src/test/java/CarAccessiores/Test.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/test/java/CarAccessiores/Test.java	(date 1703174743291)
@@ -4,11 +4,16 @@
 import cucumber.api.CucumberOptions;
 import cucumber.api.junit.Cucumber;
 
+
+
 @RunWith(Cucumber.class)
 @CucumberOptions(
 		plugin= {"html: target/cucumber.html"},
 		features="use_cases",
-		glue="CarAccessories")
+		glue="")
 public class Test {
-  
+
 }
+
+
+
Index: src/test/java/CarAccessiores/ProductCatalog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\nimport java.sql.SQLException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\nimport io.cucumber.java.en.Given;\r\nimport io.cucumber.java.en.Then;\r\nimport io.cucumber.java.en.When;\r\n\r\n\r\npublic class ProductCatalog {\r\n    \r\n\tprivate static final Logger logger = Logger.getLogger(ProductCatalog.class.getName());\r\n\tUserLoginPage userLogin;\r\n\tProductCat proCat;\r\n\t\r\n\tpublic ProductCatalog(ProductCat proCat)\r\n\t{\r\n\t\tuserLogin = new UserLoginPage(\"sam@najah.edu\",\"123541\");\r\n\t\tthis.proCat= proCat;\r\n\t}\r\n\t\r\n\t@Given(\"the user is login to the system\")\r\n\tpublic void the_user_is_login_to_the_system() {\r\n\t    try {\r\n\t    \tuserLogin.is_valid_credentials(\"sam@najah.edu\", \"123541\");\r\n\t    }\r\n\t    catch(SQLException exp)\r\n\t    {\r\n\t    \texp.printStackTrace();\r\n\t    }\r\n\t}\r\n\r\n\t@When(\"they request the product categories\")\r\n\tpublic void they_request_the_product_categories() {\r\n\t   try {\r\n\t\t   proCat.system_is_found_catalog();\r\n\t   }\r\n\t   catch(SQLException expe)\r\n\t   {\r\n\t\t   expe.printStackTrace();\r\n\t   }\r\n\t}\r\n\r\n\t@Then(\"they should see detailed product information including description, images, price, and availability\")\r\n\tpublic void they_should_see_detailed_product_information_including_description_images_price_and_availability() {\r\n\t    try\r\n\t    {\r\n\t    \tproCat.show_products_catalog_toUser(userLogin);\r\n\t    }\r\n\t    catch(SQLException e)\r\n\t    {\r\n\t    \te.printStackTrace();\r\n\t    }\r\n\t}\r\n\r\n\t@When(\"the user search for a product \\\\(e.g., {string} and set filters for {string} to {string} and {string} to {string}\")\r\n\tpublic void the_user_search_for_a_product_e_g_and_set_filters_for_to_and_to(String someProdct, String price, String amountOfMoney) {\r\n\t       try\r\n\t       {\r\n\t    \t    proCat.search_and_show_filtered_result(someProdct,price,amountOfMoney);\r\n\t       }\r\n\t       catch(SQLException excption)\r\n\t       {\r\n\t    \t   excption.printStackTrace();\r\n\t       }\r\n\t}\r\n\r\n\t@When(\"the user search for product \\\\(ex: {strangeProduct}) does not found in out company\")\r\n\tpublic void the_user_search_for_product_ex_does_not_found_in_out_company(String strangeProduct) {\r\n\t   try\r\n\t   {\r\n\t\t   proCat.search_about_some_product(strangeProduct);\r\n\t   }\r\n\t   catch(SQLException ee)\r\n\t   {\r\n\t\t   ee.printStackTrace();\r\n\t   }\r\n\t   \r\n\t}\r\n\r\n\t@Then(\"the user should have error message\")\r\n\tpublic void the_user_should_have_error_message()\r\n\t{\r\n\t logger.log(Level.INFO,\"You are search about product does not fount in Car Accessories Compamy\");\r\n\t}\r\n\r\n\t@Given(\"the user with out login\")\r\n\tpublic void the_user_with_out_login() {\r\n\t   try\r\n\t   {\r\n\t\t   userLogin.is_valid_credentials(\"smm@najah.edu\", \"123451\");\r\n\t   }\r\n\t   catch(SQLException e)\r\n\t   {\r\n\t\t   e.printStackTrace();\r\n\t   }\r\n\t}\r\n\r\n\t@When(\"the user want to see product catalog\")\r\n\tpublic void the_user_want_to_see_product_catalog() {\r\n\t    try\r\n\t    {\r\n\t    \tproCat.show_products_catalog_toUser(userLogin);\r\n\t    }\r\n\t    catch(SQLException expc)\r\n\t    {\r\n\t    \texpc.printStackTrace();\r\n\t    }\r\n\t}\r\n\r\n\t@Then(\"the user should have waning message\")\r\n\tpublic void the_user_should_have_waning_message() {\r\n\t    logger.log(Level.INFO,\"You are not login to the system !\");\r\n\t}\r\n\r\n\t\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/CarAccessiores/ProductCatalog.java b/src/test/java/CarAccessiores/ProductCatalog.java
--- a/src/test/java/CarAccessiores/ProductCatalog.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/test/java/CarAccessiores/ProductCatalog.java	(date 1703174190791)
@@ -59,7 +59,7 @@
 	public void the_user_search_for_a_product_e_g_and_set_filters_for_to_and_to(String someProdct, String price, String amountOfMoney) {
 	       try
 	       {
-	    	    proCat.search_and_show_filtered_result(someProdct,price,amountOfMoney);
+	    	    proCat.search_and_show_filtered_result(someProdct,price);
 	       }
 	       catch(SQLException excption)
 	       {
Index: src/test/java/CarAccessiores/UserRegisteration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\n\r\nimport java.sql.SQLException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\nimport io.cucumber.java.en.Given;\r\nimport io.cucumber.java.en.Then;\r\nimport io.cucumber.java.en.When;\r\n\r\npublic class UserRegisteration {\r\n\tprivate static final Logger logger = Logger.getLogger(UserRegisteration.class.getName());\r\n\tString user_email, user_password;\r\n\tregisteration regObj;\r\n\tpublic UserRegisteration() // initilazation this class\r\n\t{\r\n\t\tregObj=new registeration();\r\n\t}\r\n\t\r\n\t@Given(\"a user is on the registration page\")\r\n\tpublic void a_user_is_on_the_registration_page() \r\n\t{\r\n\t\t\r\n\t}\r\n\r\n\t@When(\"they provide valid registration details, including {string} and {string}\")\r\n\tpublic void they_provide_valid_registration_details_including_and(String user_email, String user_password) {\r\n\t   this.user_email=user_email;\r\n\t   this.user_password=user_password;\r\n\t}\r\n\t@Then(\"the enterd details should be sored to DB\")\r\n\tpublic void the_enterd_details_should_be_sored_to_db() {\r\n\t    try {\r\n\t\t\tregObj.setData(user_email,user_password);\r\n\t\t} catch (SQLException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\t@Then(\"should be see registration confirm message\")\r\n\tpublic void should_be_see_registration_confirm_message()\r\n\t{\r\n\t    logger.log(Level.INFO,\"Sign up Done Successfully\");\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/CarAccessiores/UserRegisteration.java b/src/test/java/CarAccessiores/UserRegisteration.java
--- a/src/test/java/CarAccessiores/UserRegisteration.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/test/java/CarAccessiores/UserRegisteration.java	(date 1703174192969)
@@ -11,7 +11,7 @@
 
 public class UserRegisteration {
 	private static final Logger logger = Logger.getLogger(UserRegisteration.class.getName());
-	String user_email, user_password;
+	String user_email, user_password , user_type;
 	registeration regObj;
 	public UserRegisteration() // initilazation this class
 	{
@@ -28,11 +28,12 @@
 	public void they_provide_valid_registration_details_including_and(String user_email, String user_password) {
 	   this.user_email=user_email;
 	   this.user_password=user_password;
+	   this.user_type = user_type;
 	}
 	@Then("the enterd details should be sored to DB")
 	public void the_enterd_details_should_be_sored_to_db() {
 	    try {
-			regObj.setData(user_email,user_password);
+			regObj.setData(user_email , user_password , user_type);
 		} catch (SQLException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
Index: src/test/java/CarAccessiores/UserProfile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/CarAccessiores/UserProfile.java b/src/test/java/CarAccessiores/UserProfile.java
new file mode 100644
--- /dev/null	(date 1703174050856)
+++ b/src/test/java/CarAccessiores/UserProfile.java	(date 1703174050856)
@@ -0,0 +1,110 @@
+package CarAccessiores;
+
+import io.cucumber.java.en.Given;
+import io.cucumber.java.en.Then;
+import io.cucumber.java.en.When;
+
+import java.sql.SQLException;
+import java.util.logging.Logger;
+
+import static org.junit.Assert.fail;
+
+public class UserProfile {
+
+    private static final Logger logger = Logger.getLogger(UserRoles.class.getName());
+    String user_email , user_password;
+    int rid;
+    customer Customer;
+    String new_email;
+
+    @Given("the user is logged in")
+    public void the_user_is_logged_in() {
+        user_email= "fathi@gmail.com";
+        user_password="0000";
+        Customer=new customer(user_email,user_password);
+    }
+
+    @When("the user navigates to their profile")
+    public void the_user_navigates_to_their_profile() {
+
+
+    }
+
+    @Then("they should see their personal information")
+    public void they_should_see_their_personal_information() {
+        Customer.ShowPersonalInfo();
+
+
+    }
+
+    @Then("they should see their order history")
+    public void they_should_see_their_order_history() {
+        try {
+            Customer.showHistory();
+        } catch (SQLException e) {
+            fail("some thing wrong in the showHistory method 1");
+        }
+    }
+
+    @Then("they should see their installation requests")
+    public void they_should_see_their_installation_requests() {
+        try {
+            Customer.showAllRequests();
+        } catch (SQLException e) {
+            fail("some thing wrong with showAllRequests method");
+        }
+    }
+
+    @When("the user selects the edit profile option")
+    public void the_user_selects_the_edit_profile_option() {
+
+    }
+
+    @When("updates their contact information")
+    public void updates_their_contact_information() {
+        new_email="faredzamano@gmail.com";
+    }
+
+    @Then("the changes should be saved successfully")
+    public void the_changes_should_be_saved_successfully() {
+        try {
+            Customer.changeEmail(new_email);
+        } catch (SQLException e) {
+            fail("some thing wrong with changeEmail method");
+        }
+    }
+
+    @Then("the updated information should be visible in the profile")
+    public void the_updated_information_should_be_visible_in_the_profile() {
+        Customer.ShowPersonalInfo();
+    }
+
+    @When("the user accesses their profile's order history")
+    public void the_user_accesses_their_profile_s_order_history() {
+
+    }
+
+    @Then("they should see a list of their past orders in details")
+    public void they_should_see_a_list_of_their_past_orders_in_details() {
+        try {
+            Customer.showHistory();
+        } catch (SQLException e) {
+            fail("some thing wrong in the showHistory method 2");
+        }
+    }
+
+    @When("the user checks their profile's installation requests")
+    public void the_user_checks_their_profile_s_installation_requests() {
+
+    }
+
+    @Then("they should see a list of their previous installation requests in details")
+    public void they_should_see_a_list_of_their_previous_installation_requests() {
+        try {
+            Customer.showCompleted();
+        } catch (SQLException e) {
+            fail("some thing wrong in the showCompleted method");
+        }
+    }
+
+}
Index: src/test/java/CarAccessiores/UserLoginToSystem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\nimport static org.junit.Assert.assertEquals;\r\n\r\nimport java.sql.SQLException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\nimport io.cucumber.java.en.Given;\r\nimport io.cucumber.java.en.Then;\r\nimport io.cucumber.java.en.When;\r\n\r\npublic class UserLoginToSystem {\r\n\t private static final Logger logger = Logger.getLogger(UserLoginToSystem.class.getName());\r\n     String user_email , user_password;\r\n     UserLoginPage loginObj;\r\n     public UserLoginToSystem()  \r\n        {\r\n    \t loginObj=new UserLoginPage(\"Darawsheh@najah.edu\",\"123455\");\r\n     \t}\r\n\t@Given(\"the user_email is {string}\")\r\n\tpublic void the_user_email_is(String user_email) {\r\n\t   this.user_email=user_email;\r\n\t}\r\n\r\n\t@Given(\"the user_password is {string}\")\r\n\tpublic void the_user_password_is(String user_password) {\r\n\t   this.user_password=user_password;\r\n\t}\r\n\r\n\t@When(\"the user enters valid credentials \\\\(useremail and password)\")\r\n\tpublic void the_user_enters_valid_credentials_useremail_and_password() {\r\n\t   \r\n\t\t\ttry {\r\n\t\t\t\tloginObj.is_valid_credentials(user_email,user_password);\r\n\t\t\t} catch (SQLException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t}\r\n\r\n\t@Then(\"user login successfully\")\r\n\tpublic void user_login_successfully() {\r\n\t\t assertEquals(true,is_user_logged());\r\n\t}\r\n\r\n\tprivate Object is_user_logged() {\r\n\t\r\n\t\treturn null;\r\n\t}\r\n\t@Then(\"should see a welcome to the car accessories company\")\r\n\tpublic void should_see_a_welcome_to_the_car_accessories_company() {\r\n\t    \r\n\t\tlogger.log(Level.INFO,\"Welcome to the car accessories company\");\r\n\t}\r\n\r\n\t@When(\"the user enters an invalid useremail\")\r\n\tpublic void the_user_enters_an_invalid_useremail() {\r\n\t\tuser_email=\"mohammed@najah.edu\";\r\n\t    user_password=\"123455\";\r\n       \r\n\t\t\ttry {\r\n\t\t\t\tloginObj.is_valid_credentials(user_email, user_password);\r\n\t\t\t} catch (SQLException ex) {\r\n\t\t\t\tex.printStackTrace();\r\n\t\t\t}\r\n\t}\r\n\r\n\t@Then(\"the user should see an Incorrect userEmail\")\r\n\tpublic void the_user_should_see_an_incorrect_user_email() {\r\n\t\tassertEquals(false,loginObj.is_user_logged());\r\n\t    logger.log(Level.INFO,\"Incorrect user email!\");\r\n\t}\r\n\r\n\t@Then(\"login faild\")\r\n\tpublic void login_faild() {\r\n\t   assertEquals(false,is_user_logged());\r\n\t}\r\n\r\n\t@When(\"the user enters an invalid userpassword\")\r\n\tpublic void the_user_enters_an_invalid_userpassword() {\r\n\t   user_email=\"jaber@najah.edu\";\r\n\t   user_password=\"000000\";\r\n\t   try {\r\n\t\t   loginObj.is_valid_credentials(user_email,user_password);\r\n\t   }catch(SQLException e) {\r\n\t\t   e.printStackTrace();\r\n\t   }\r\n\t}\r\n\r\n\t@Then(\"the user should see an Incorrect Password\")\r\n\tpublic void the_user_should_see_an_incorrect_password() {\r\n\t     assertEquals(false,loginObj.is_user_logged());\r\n\t     logger.log(Level.INFO,\"Incorrect user password!\");\r\n\t}\r\n\r\n\t@When(\"the user enters an invalid userEmail\")\r\n\tpublic void the_user_enters_an_invalid_user_email() {\r\n\t\tuser_email=\"\";\r\n\t\tuser_password=\"123455\";\r\n\t\ttry {\r\n\t\t\tloginObj.is_valid_credentials(user_email, user_password);\r\n\t\t} catch (SQLException ex) {\r\n\t\t\tex.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\t@Then(\"the user should see an userEmail is empty\")\r\n\tpublic void the_user_should_see_an_user_email_is_empty() {\r\n\t    assertEquals(false,loginObj.is_user_logged());\r\n\t    logger.log(Level.INFO,\"user email is empty!\");\r\n\t}\r\n\r\n\t@When(\"the user enters an invalid user_pawword\")\r\n\tpublic void the_user_enters_an_invalid_user_pawword() {\r\n\t\tuser_email=\"jaber@najah.edu\";\r\n\t\tuser_password=\"\";\r\n\t\ttry {\r\n\t\t\tloginObj.is_valid_credentials(user_email, user_password);\r\n\t\t} catch (SQLException ex) {\r\n\t\t\tex.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\t@Then(\"the user should see an password is empty\")\r\n\tpublic void the_user_should_see_an_password_is_empty() {\r\n\t   assertEquals(false,loginObj.is_user_logged());\r\n\t   logger.log(Level.INFO,\"user password is empty!\");\r\n\t}\r\n\r\n\t@When(\"the user enters an invalid userEmail and userPassword\")\r\n\tpublic void the_user_enters_an_invalid_user_email_and_user_password(){\r\n\t    user_email=\"\"; \r\n\t    user_password=\"\"; \r\n\t    try {\r\n\t    \tloginObj.is_valid_credentials(user_email,user_password);\r\n\t    }catch(SQLException e) {\r\n\t    \te.printStackTrace();\r\n\t    }\r\n\t}\r\n\r\n\t@Then(\"the user should see an userEmail and password is empty\")\r\n\tpublic void the_user_should_see_an_user_email_and_password_is_empty() {\r\n\t   assertEquals(false,loginObj.is_user_logged());\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/CarAccessiores/UserLoginToSystem.java b/src/test/java/CarAccessiores/UserLoginToSystem.java
--- a/src/test/java/CarAccessiores/UserLoginToSystem.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/test/java/CarAccessiores/UserLoginToSystem.java	(date 1703174192338)
@@ -1,5 +1,7 @@
 package CarAccessiores;
 
+
+
 import static org.junit.Assert.assertEquals;
 
 import java.sql.SQLException;
@@ -10,6 +12,7 @@
 import io.cucumber.java.en.Then;
 import io.cucumber.java.en.When;
 
+
 public class UserLoginToSystem {
 	 private static final Logger logger = Logger.getLogger(UserLoginToSystem.class.getName());
      String user_email , user_password;
Index: src/main/java/CarAccessiores/SendNotificationViaEmail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/CarAccessiores/SendNotificationViaEmail.java b/src/main/java/CarAccessiores/SendNotificationViaEmail.java
new file mode 100644
--- /dev/null	(date 1703174050846)
+++ b/src/main/java/CarAccessiores/SendNotificationViaEmail.java	(date 1703174050846)
@@ -0,0 +1,73 @@
+package CarAccessiores;
+
+import java.sql.SQLException;
+import java.util.Properties;
+import java.util.logging.Logger;
+
+import javax.mail.Message;
+import javax.mail.MessagingException;
+import javax.mail.PasswordAuthentication;
+import javax.mail.Session;
+import javax.mail.Transport;
+import javax.mail.internet.InternetAddress;
+import javax.mail.internet.MimeMessage;
+
+public class SendNotificationViaEmail 
+{
+	static final Logger logger = Logger.getLogger(SendNotificationViaEmail.class.getName());
+	public void sendNotificationToCustomer(String customerEmail, String messageContent)throws SQLException
+	{
+        final String fromEmail = "caraccessioescompany@gmail.com";
+        final String password = "eujm kiyn xfjv kjfq";
+        Properties properties = new Properties();
+        properties.put("mail.smtp.auth", "true");
+        properties.put("mail.smtp.starttls.enable", "true");
+        properties.put("mail.smtp.host", "smtp.gmail.com");
+        properties.put("mail.smtp.port", "587");
+
+        Session session = Session.getInstance(properties, new javax.mail.Authenticator() {
+            protected PasswordAuthentication getPasswordAuthentication() {
+                return new PasswordAuthentication(fromEmail, password);
+            }
+        });
+        try {
+            Message message = new MimeMessage(session);
+            message.setFrom(new InternetAddress(fromEmail));
+            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(customerEmail));
+            message.setSubject("Test Email");
+            message.setText(messageContent);
+            Transport.send(message);
+            System.out.println("Verification email sent successfully!");
+        } catch (MessagingException e) {
+            e.printStackTrace();
+        }
+    }
+	public void sendNotificationToInstaller(String installerEmail, String InstallermessageContent)throws SQLException 
+	{
+		final String fromEmail = "caraccessioescompany@gmail.com";
+        final String password = "eujm kiyn xfjv kjfq";
+        Properties properties = new Properties();
+        properties.put("mail.smtp.auth", "true");
+        properties.put("mail.smtp.starttls.enable", "true");
+        properties.put("mail.smtp.host", "smtp.gmail.com");
+        properties.put("mail.smtp.port", "587");
+
+        Session session = Session.getInstance(properties, new javax.mail.Authenticator() {
+            protected PasswordAuthentication getPasswordAuthentication() {
+                return new PasswordAuthentication(fromEmail, password);
+            }
+        });
+        try {
+            Message message = new MimeMessage(session);
+            message.setFrom(new InternetAddress(fromEmail));
+            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(InstallermessageContent));
+            message.setSubject("Test Email");
+            message.setText(InstallermessageContent);
+            Transport.send(message);
+            System.out.println("Verification email sent successfully!");
+        } catch (MessagingException e) {
+            e.printStackTrace();
+        }
+	}
+   
+}
Index: use_cases/AdminDashboard.feature
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nFeature: Admin Dashboard\r\n\r\n  Scenario: Manage product categories\r\n  Given Admin is login to the system\r\n  When the admin want to add  categorie\r\n  Then the categorie addedd successfully\r\n  \r\n  Scenario: Manage product categories\r\n  Given Admin is login to the system\r\n  When the admin want to edit certaine categorie\r\n  Then the categorie edited successfully\r\n  \r\n  Scenario: Manage product categories\r\n  Given Admin is login to the system\r\n  When the admin want to delete a certaing categorie\r\n  Then the categorie deleted successfully\r\n  \r\n  Scenario: Manage product categories\r\n  Given Admin is not login\r\n  When the admin want to add  categorie\r\n  Then show error message  \"Sorry! You cann't delete a categorie because the admin is not login\"\r\n    \r\n  Scenario: Manage product categories\r\n  Given Admin is not login\r\n  When the admin want to edit  categorie\r\n  Then show error message  \"Sorry! You cann't delete a categorie because the admin is not login\"\r\n  \r\n  Scenario: Manage product categories\r\n  Given Admin is not login\r\n  When the admin want to delete categorie\r\n  Then show error message  \"Sorry! You cann't delete a categorie because the admin is not login\"\r\n  \r\n  Scenario: Add and update product listings\r\n  Given Admin is login to the system\r\n  When the admin want to add product listing\r\n  Then the product listing added successfully\r\n  \r\n  Scenario: Add and update product listings\r\n  Given Admin is login to the system\r\n  When the admin want to edit product listing\r\n  Then the product listing edited successfully\r\n  \r\n  Scenario: Add and update product listings\r\n  Given Admin is login to the system\r\n  When the admin want to delete product listing\r\n  Then the product listing deleted successfully\r\n \r\n  Scenario: Add and update product listings\r\n  Given Admin is not login\r\n  When the admin want to add product listing\r\n  Then show error message  \"Sorry! You cann't add a product listing because the admin is not login\"\r\n  \r\n  Scenario: Add and update product listings\r\n  Given Admin is not login\r\n  When the admin want to edit product listing\r\n  Then show error message  \"Sorry! You cann't edit a product listing because the admin is not login\"\r\n  \r\n  Scenario: Add and update product listings\r\n  Given Admin is not login\r\n  When the admin want to delete product listing\r\n  Then show error message  \"Sorry! You cann't delete a product listing because the admin is not login\"\r\n  \r\n  Scenario: View and manage customer accounts\r\n  Given Admin is login to the system\r\n  When the admin want to view the customer accounts\r\n  Then showing customer account Done\r\n  \r\n  Scenario: View and manage customer accounts\r\n  Given Admin is not login\r\n  When the admin want to view the customer accounts\r\n  Then show error message  \"Sorry! You cann't see the customers account because the admin is not login\"\r\n  \r\n  Scenario: Schedule and manage installation appointments\r\n  Given Admin is login to the system\r\n  When the admin want to Schedule installation appointments\r\n  Then Scheduling installation appointments Done\r\n  \r\n  Scenario: Schedule and manage installation appointments\r\n  Given Admin is not login\r\n  When the admin want to Schedule installation appointments\r\n  Then show error message  \"Sorry! You cann't Schedule installation appointments because the admin is not login\"\r\n  \r\n  \r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/use_cases/AdminDashboard.feature b/use_cases/AdminDashboard.feature
--- a/use_cases/AdminDashboard.feature	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/use_cases/AdminDashboard.feature	(date 1703174177196)
@@ -1,84 +1,23 @@
+Feature: Admin Dashboard Management
 
-Feature: Admin Dashboard
+  Scenario: Admin Adds and Updates Product listing
+    Given the admin is logged in and on the dashboard
+    When the admin selects the option to manage product listing
+    Then the admin should see a list of current products
+    And should be able to add a new product
+    And should be able to edit details of existing products
+    And should be able to delete a product
 
-  Scenario: Manage product categories
-  Given Admin is login to the system
-  When the admin want to add  categorie
-  Then the categorie addedd successfully
-  
-  Scenario: Manage product categories
-  Given Admin is login to the system
-  When the admin want to edit certaine categorie
-  Then the categorie edited successfully
-  
-  Scenario: Manage product categories
-  Given Admin is login to the system
-  When the admin want to delete a certaing categorie
-  Then the categorie deleted successfully
-  
-  Scenario: Manage product categories
-  Given Admin is not login
-  When the admin want to add  categorie
-  Then show error message  "Sorry! You cann't delete a categorie because the admin is not login"
-    
-  Scenario: Manage product categories
-  Given Admin is not login
-  When the admin want to edit  categorie
-  Then show error message  "Sorry! You cann't delete a categorie because the admin is not login"
-  
-  Scenario: Manage product categories
-  Given Admin is not login
-  When the admin want to delete categorie
-  Then show error message  "Sorry! You cann't delete a categorie because the admin is not login"
-  
-  Scenario: Add and update product listings
-  Given Admin is login to the system
-  When the admin want to add product listing
-  Then the product listing added successfully
-  
-  Scenario: Add and update product listings
-  Given Admin is login to the system
-  When the admin want to edit product listing
-  Then the product listing edited successfully
-  
-  Scenario: Add and update product listings
-  Given Admin is login to the system
-  When the admin want to delete product listing
-  Then the product listing deleted successfully
- 
-  Scenario: Add and update product listings
-  Given Admin is not login
-  When the admin want to add product listing
-  Then show error message  "Sorry! You cann't add a product listing because the admin is not login"
-  
-  Scenario: Add and update product listings
-  Given Admin is not login
-  When the admin want to edit product listing
-  Then show error message  "Sorry! You cann't edit a product listing because the admin is not login"
-  
-  Scenario: Add and update product listings
-  Given Admin is not login
-  When the admin want to delete product listing
-  Then show error message  "Sorry! You cann't delete a product listing because the admin is not login"
-  
-  Scenario: View and manage customer accounts
-  Given Admin is login to the system
-  When the admin want to view the customer accounts
-  Then showing customer account Done
-  
-  Scenario: View and manage customer accounts
-  Given Admin is not login
-  When the admin want to view the customer accounts
-  Then show error message  "Sorry! You cann't see the customers account because the admin is not login"
-  
-  Scenario: Schedule and manage installation appointments
-  Given Admin is login to the system
-  When the admin want to Schedule installation appointments
-  Then Scheduling installation appointments Done
-  
-  Scenario: Schedule and manage installation appointments
-  Given Admin is not login
-  When the admin want to Schedule installation appointments
-  Then show error message  "Sorry! You cann't Schedule installation appointments because the admin is not login"
-  
-  
+  Scenario: Admin Manages Customer Accounts
+    Given the admin is logged in and on the dashboard
+    When the admin selects the option to manage customer accounts
+    Then the admin should see a list of registered customers with detailes
+    And should be able to edit customer information
+    And should be able to delete a customer account
+
+  Scenario: Admin Manages Installation Appointments
+    Given the admin is logged in and on the dashboard
+    When the admin accesses the installation management section
+    Then the admin should see a list of scheduled installation appointments
+    And should be able to reschedule appointments
+    And should be able to mark appointments as completed or canceled
\ No newline at end of file
Index: src/test/java/CarAccessiores/UserRoles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\n\r\n\r\n\r\nimport io.cucumber.java.en.Given;\r\nimport io.cucumber.java.en.Then;\r\nimport io.cucumber.java.en.When;\r\n\r\n\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.util.logging.Logger;\r\nimport java.sql.SQLException;\r\nimport java.util.logging.Level;\r\nimport static org.junit.Assert.assertEquals;\r\nimport static org.junit.Assert.assertTrue;\r\nimport static org.junit.Assert.fail;\r\n\r\n\r\n\r\npublic class UserRoles {\r\n\r\n    private static final Logger logger = Logger.getLogger(UserRoles.class.getName());\r\n\r\n\r\n    String user_email , user_password;\r\n    String installer_email;\r\n    String installer_password;\r\n    int rid;\r\n    admin user;\r\n    customer Customer;\r\n    CarAccessiores.installer installer;\r\n    boolean Admin_logged;\r\n    boolean Customer_logged;\r\n    boolean installer_logged;\r\n    UserLoginPage loginObj;\r\n    int choice=0;\r\n    public UserRoles()  // initialization of class\r\n    {\r\n        //assume these credentials used as admin,customer and installer\r\n        this.user_email=\"jaberDar@najah.edu\";\r\n        this.user_password=\"123455\";\r\n        loginObj=new UserLoginPage(this.user_email,this.user_password);\r\n    }\r\n    @Given(\"an Admin is logged into the system\")\r\n    public void an_admin_is_logged_into_the_system() {\r\n        try {\r\n            loginObj.is_valid_credentials(this.user_email,this.user_password);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        Admin_logged =loginObj.is_Admin_logged();\r\n        if(Admin_logged) {\r\n            user=new admin(this.user_email,this.user_password);\r\n        }else {\r\n            fail(\"this is not admin credentials\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    @When(\"the Admin navigates to the user role management section\")\r\n    public void the_admin_navigates_to_the_user_role_management_section() {\r\n        logger.log(Level.INFO,\"The Admin is in the user management screen\");\r\n\r\n    }\r\n\r\n    @Then(\"the Admin should be able to add a new user\")\r\n    public void the_admin_should_be_able_to_add_a_new_user() {\r\n        String user_mail=\"\";\r\n        // Write code here that turns the phrase above into concrete actions\r\n        try {\r\n            user.add(\"subhi@outlook.com\",\"subhi1234\");\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        connectDB conDB = new connectDB();\r\n\r\n        //check if the new user is added successfully\r\n        String sql2=\"SELECT * FROM systemusers WHERE userEmail = ?\";\r\n        try {\r\n            conDB.testConn();\r\n            try(PreparedStatement stmt = conDB.getConnection().prepareStatement(sql2)){\r\n                stmt.setString(1, \"subhi@outlook.com\");\r\n                ResultSet resultSet = stmt.executeQuery();\r\n                if(resultSet.next()) {\r\n                    user_mail = resultSet.getString(\"userEmail\");\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        assertEquals(\"subhi@outlook.com\",user_mail);\r\n\r\n\r\n    }\r\n\r\n    @Then(\"the Admin should be able to edit an existing user\")\r\n    public void the_admin_should_be_able_to_edit_an_existing_user() {\r\n        // Write code here that turns the phrase above into concrete actions\r\n        String user_pass=\"\";\r\n        // Write code here that turns the phrase above into concrete actions\r\n        try {\r\n            user.UpdatePass(\"subhi@outlook.com\",\"subhi123456\");\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        connectDB conDB = new connectDB();\r\n\r\n        String sql2=\"SELECT * FROM systemusers WHERE user_email = ?\";\r\n        try {\r\n            conDB.testConn();\r\n            try(PreparedStatement stmt = conDB.getConnection().prepareStatement(sql2)){\r\n                stmt.setString(1, \"subhi@outlook.com\");\r\n                ResultSet resultSet = stmt.executeQuery();\r\n                if(resultSet.next()) {\r\n                    user_pass = resultSet.getString(\"user_password\");\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        assertEquals(\"subhi123456\",user_pass);\r\n    }\r\n\r\n    @Then(\"the Admin should be able to delete a user\")\r\n    public void the_admin_should_be_able_to_delete_a_user() {\r\n        // Write code here that turns the phrase above into concrete actions\r\n        boolean deleted=false;\r\n        try {\r\n            user.DeleteUser(\"subhi@outlook.com\");\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        connectDB conDB = new connectDB();\r\n        String sql2=\"SELECT * FROM systemusers WHERE user_email = ?\";\r\n        try {\r\n            conDB.testConn();\r\n            try(PreparedStatement stmt = conDB.getConnection().prepareStatement(sql2)){\r\n                stmt.setString(1, \"subhi@outlook.com\");\r\n                ResultSet resultSet = stmt.executeQuery();\r\n                if (!resultSet.next())\r\n                    deleted=true;\r\n            }\r\n\r\n\r\n\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        assertTrue( deleted);\r\n    }\r\n\r\n    @Given(\"a Customer is logged into the system\")\r\n    public void a_customer_is_logged_into_the_system() {\r\n        try {\r\n            loginObj.is_valid_credentials(this.user_email,this.user_password);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        Customer_logged =loginObj.is_Customer_logged();\r\n        if(Customer_logged) {\r\n            Customer =new customer(this.user_email,this.user_password);\r\n        }else {\r\n            throw new io.cucumber.java.PendingException();//the test case will not pass if the customer login failed\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @When(\"the Customer browses the product catalog\")\r\n    public void the_customer_browses_the_product_catalog() {\r\n        if(!Customer.calatogAvailable()){\r\n            fail(\"Catalog isn't available\");//if the catalog is not available the test case will fail\r\n        }\r\n\r\n    }\r\n\r\n    @Then(\"the Customer should be able to view detailed product information\")\r\n    public void the_customer_should_be_able_to_view_detailed_product_information() {\r\n        try {\r\n            Customer.ShowCatalogToCustomer();\r\n            //the test will pass if there is no unhandled exception occurred\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail(\"Exception occurred: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    @Then(\"the Customer should be able to add the product to the cart\")\r\n    public void the_customer_should_be_able_to_add_the_product_to_the_cart() {\r\n        // the customer will enter the id of the product that want to be added to the cart and the quantity\r\n        //the id & quantity should be entered as integers\r\n        //assume the id of the product is 1 and the quantity the customer wants to add to the cart is 10\r\n        int id=1;\r\n        int quantity=10;\r\n        try {\r\n            Customer.AddToCart(id,quantity);\r\n            //the test will pass if there is no unhandled exception occurred\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail(\"Exception occurred: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    @Then(\"the Customer should be able to proceed to checkout\")\r\n    public void the_customer_should_be_able_to_proceed_to_checkout() {\r\n        try {\r\n            Customer.viewCart();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail(\"Exception occurred: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    @Then(\"the Customer should be able to complete the purchase\")\r\n    public void the_customer_should_be_able_to_complete_the_purchase() {\r\n        try {\r\n            Customer.checkOut();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail(\"Exception occurred: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    @When(\"the Customer accesses their user profile\")\r\n    public void the_customer_accesses_their_user_profile() {\r\n        choice=Customer.showProfile();\r\n        //the method will ask the user to enter a number to choose an action to perform (change Email or password,view history ,etc.....)\r\n        if(choice<=0||choice>5)\r\n            fail(\"The user entered an in valid number that perform no action\");\r\n    }\r\n\r\n    @When(\"views their order history\")\r\n    public void views_their_order_history() {\r\n        if(choice!=3)\r\n            fail(\"The user has entered a number that performs another operation different from viewing the history  \");\r\n    }\r\n\r\n    @Then(\"the Customer should see a list of their past orders\")\r\n    public void the_customer_should_see_a_list_of_their_past_orders() {\r\n        try {\r\n            Customer.showHistory();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail(\"Exception occurred: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    @Given(\"an Installer is logged into the system\")\r\n    public void an_installer_is_logged_into_the_system() {\r\n        installer_email=\"fathi@gmail.com\";\r\n        installer_password=\"1234567\";\r\n        try {\r\n            loginObj.is_valid_credentials(this.installer_email,this.installer_password);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        installer_logged =loginObj.is_Installer_logged();\r\n        if(installer_logged) {\r\n            installer =new installer(this.user_email,this.user_password);\r\n        }else {\r\n            fail(\"there is no available installer\");//the test case will not pass if the installer login failed\r\n\r\n        }\r\n    }\r\n\r\n    @When(\"the Installer navigates to the installation request section\")\r\n    public void the_installer_navigates_to_the_installation_request_section() {\r\n        try {\r\n            installer.showPending();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n        rid=1;//assume this is the request id the installer want to accept\r\n\r\n    }\r\n\r\n    @Then(\"the Installer should be able to view a list of installation requests\")\r\n    public void the_installer_should_be_able_to_view_a_list_of_installation_requests() {\r\n        try {\r\n            installer.showPending();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n    }\r\n\r\n    @Then(\"the Installer should be able to accept or reject installation requests\")\r\n    public void the_installer_should_be_able_to_accept_or_reject_installation_requests() {\r\n        try {\r\n            installer.assign(rid);//this function will assign the request to the installer\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n    }\r\n\r\n    @Then(\"the Installer should be able to schedule appointments for accepted requests\")\r\n    public void the_installer_should_be_able_to_schedule_appointments_for_accepted_requests() {\r\n        try {\r\n            installer.schedule(rid,\"15:30:00\");\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/CarAccessiores/UserRoles.java b/src/test/java/CarAccessiores/UserRoles.java
--- a/src/test/java/CarAccessiores/UserRoles.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/test/java/CarAccessiores/UserRoles.java	(date 1703174193728)
@@ -71,7 +71,7 @@
         String user_mail="";
         // Write code here that turns the phrase above into concrete actions
         try {
-            user.add("subhi@outlook.com","subhi1234");
+            user.addCustomer("subhi@outlook.com","subhi1234");
         } catch (SQLException e) {
             e.printStackTrace();
         }
Index: src/test/java/CarAccessiores/sendEmail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/CarAccessiores/sendEmail.java b/src/test/java/CarAccessiores/sendEmail.java
new file mode 100644
--- /dev/null	(date 1703174050858)
+++ b/src/test/java/CarAccessiores/sendEmail.java	(date 1703174050858)
@@ -0,0 +1,60 @@
+package CarAccessiores;
+
+import java.sql.SQLException;
+
+import io.cucumber.java.en.Given;
+import io.cucumber.java.en.Then;
+import io.cucumber.java.en.When;
+
+public class sendEmail 
+{
+	SendNotificationViaEmail  email = new SendNotificationViaEmail();
+	@Given("The customer request some instllation")
+	public void the_customer_request_some_instllation()
+	{
+		
+	}
+
+	@When("the request is complete")
+	public void the_request_is_complete() 
+	{
+	   
+	}
+
+	@Then("send notification to the customer via email")
+	public void send_notification_to_the_customer_via_email() 
+	{
+	  try
+	  {
+		  String CustomerEmail="ahmad@gmail.com";
+		  String Message ="Your installation request is complete. Thank you for choosing us.";
+		  email.sendNotificationToCustomer(CustomerEmail, Message);
+	  }
+	  catch(SQLException e)
+	  {
+		  e.printStackTrace();
+	  }
+	}
+
+	@Given("The installer receives customer instllation")
+	public void the_installer_receives_customer_instllation() 
+	{
+	    
+	}
+
+	@Then("send notification to the installer via email")
+	public void send_notification_to_the_installer_via_email() 
+	{
+	   try
+	   {
+		   String InstallerEmail="mohammed@gmail.com";
+		   String Message="You have a new installation request.";
+		   email.sendNotificationToInstaller(InstallerEmail, Message);
+	   }
+	   catch(SQLException e)
+	   {
+		   e.printStackTrace();
+	   }
+	}
+
+}
Index: use_cases/InstallationRequest.feature
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Given a customer is logged in\r\n#And there are available installers\r\nFeature: installation request\r\n\r\n\r\n\r\n\r\nScenario: Customer submits an installation request\r\nGiven a customer is logged in\r\nAnd there are available installers\r\nWhen the customer requests installation for a specific product\r\nAnd provides installation details:\r\nThen the installation request is submitted successfully\r\n\r\n\r\nScenario: Installer schedules an appointment\r\nGiven an installation request is Pending\r\nWhen an installer schedules an appointment for the request\r\nThen the appointment is scheduled successfully\r\nAnd the request status is Scheduled\r\n\r\nScenario: Customer views the installation request status\r\nWhen the customer checks the status of their installation request\r\nThen the request status is displayed as Scheduled\r\n\r\nScenario: Installer marks the installation as complete\r\nGiven an appointment is Scheduled\r\nWhen the installer completes the installation\r\nThen the installation request status is updated to completed\r\n\r\nScenario: Customer views the completed installation request\r\nWhen the customer checks the status of their installation request\r\nThen the request status is displayed as completed\r\n\r\nScenario: Installer marks the installation as canceled\r\nGiven an appointment is scheduled\r\nWhen the installer cancels the installation\r\nThen the installation request status is updated to canceled\r\n\r\nScenario: Customer views the canceled installation request\r\nWhen the customer checks the status of their installation request\r\nThen the request status is displayed as canceled
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/use_cases/InstallationRequest.feature b/use_cases/InstallationRequest.feature
--- a/use_cases/InstallationRequest.feature	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/use_cases/InstallationRequest.feature	(date 1703174196616)
@@ -29,7 +29,7 @@
 Then the installation request status is updated to completed
 
 Scenario: Customer views the completed installation request
-When the customer checks the status of their installation request
+
 Then the request status is displayed as completed
 
 Scenario: Installer marks the installation as canceled
@@ -38,5 +38,5 @@
 Then the installation request status is updated to canceled
 
 Scenario: Customer views the canceled installation request
-When the customer checks the status of their installation request
+
 Then the request status is displayed as canceled
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1703175974873)
+++ b/.idea/workspace.xml	(date 1703175974873)
@@ -0,0 +1,470 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="6749a787-147b-4762-88a9-bf9f02945c47" name="Changes" comment="updated pom file">
+      <change afterPath="$PROJECT_DIR$/ target/cucumber.html/formatter.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/ target/cucumber.html/index.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/ target/cucumber.html/jquery-1.8.2.min.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/ target/cucumber.html/report.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/ target/cucumber.html/style.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.github/workflows/main.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/caraccessories.3Lbd6A.meta" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/information_schema.FNRwLQ.meta" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/mysql.osA4Bg.meta" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/performance_schema.kIw0nw.meta" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/CarAccessiores/CustomLogFormatter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/CarAccessiores/SendNotificationViaEmail.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/CarAccessiores/UserProfile.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/CarAccessiores/sendEmail.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/CustomLogFormatter.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/Main.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/ProductCat.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/SendNotificationViaEmail$1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/SendNotificationViaEmail$2.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/SendNotificationViaEmail.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/User.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/UserLoginPage.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/admin.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/connectDB.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/customer.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/installer.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/CarAccessiores/registeration.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/use_cases/Notifications.feature" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/use_cases/UserProfile.feature" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.classpath" beforeDir="false" afterPath="$PROJECT_DIR$/.classpath" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.project" beforeDir="false" afterPath="$PROJECT_DIR$/.project" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/CarAccessiores/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CarAccessiores/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/CarAccessiores/ProductCat.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CarAccessiores/ProductCat.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/CarAccessiores/UserLoginPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CarAccessiores/UserLoginPage.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/CarAccessiores/admin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CarAccessiores/admin.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/CarAccessiores/connectDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CarAccessiores/connectDB.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/CarAccessiores/customer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CarAccessiores/customer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/CarAccessiores/installer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CarAccessiores/installer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/CarAccessiores/registeration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CarAccessiores/registeration.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/CarAccessiores/AdminDashboard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/CarAccessiores/AdminDashboard.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/CarAccessiores/InstallationRequest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/CarAccessiores/InstallationRequest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/CarAccessiores/ProductCatalog.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/CarAccessiores/ProductCatalog.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/CarAccessiores/Test.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/CarAccessiores/Test.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/CarAccessiores/UserLoginToSystem.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/CarAccessiores/UserLoginToSystem.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/CarAccessiores/UserRegisteration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/CarAccessiores/UserRegisteration.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/CarAccessiores/UserRoles.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/CarAccessiores/UserRoles.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/use_cases/AdminDashboard.feature" beforeDir="false" afterPath="$PROJECT_DIR$/use_cases/AdminDashboard.feature" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/use_cases/InstallationRequest.feature" beforeDir="false" afterPath="$PROJECT_DIR$/use_cases/InstallationRequest.feature" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="CompilerWorkspaceConfiguration">
+    <option name="MAKE_PROJECT_ON_SAVE" value="true" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="JUnit4 Test Class" />
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Merge.Settings">
+    <option name="BRANCH" value="origin/master" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 6
+}</component>
+  <component name="ProjectId" id="2XUXyoKDGhexXJd42GhLQEboba4" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit4&quot;,
+    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4&quot;: &quot;junit.framework.TestCase&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;Merging main&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/hamoo/Desktop/mysql-connector-j-8.2.0/mysql-connector-j-8.2.0/mysql-connector-j-8.2.0.jar&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.build&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  },
+  &quot;keyToStringList&quot;: {
+    &quot;DatabaseDriversLRU&quot;: [
+      &quot;mysql&quot;
+    ]
+  }
+}</component>
+  <component name="RecentsManager">
+    <key name="CreateTestDialog.Recents.Supers">
+      <recent name="junit.framework.TestCase" />
+    </key>
+    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
+      <recent name="CarAccessiores" />
+    </key>
+    <key name="CreateTestDialog.RecentsKey">
+      <recent name="CarAccessiores" />
+    </key>
+  </component>
+  <component name="RunManager" selected="Cucumber Java.All Features in: use_cases">
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="CarAccessiores.Main" />
+      <module name="CarAccessioresCompany" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="CarAccessiores.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="All Features in: use_cases" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
+      <option name="CUCUMBER_CORE_VERSION" value="5" />
+      <option name="FILE_PATH" value="$PROJECT_DIR$/use_cases" />
+      <option name="GLUE" value="CarAccessiores" />
+      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
+      <module name="CarAccessioresCompany" />
+      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter" />
+      <option name="SUGGESTED_NAME" value="All Features in: use_cases" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="io.cucumber.core.cli.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Feature: AdminDashboard" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
+      <option name="CUCUMBER_CORE_VERSION" value="5" />
+      <option name="FILE_PATH" value="$PROJECT_DIR$/use_cases/AdminDashboard.feature" />
+      <option name="GLUE" value="test.java.CarAccessiores" />
+      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
+      <module name="CarAccessioresCompany" />
+      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter" />
+      <shortenClasspath name="NONE" />
+      <option name="SUGGESTED_NAME" value="Feature: AdminDashboard" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="io.cucumber.core.cli.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Feature: InstallationRequest" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
+      <option name="CUCUMBER_CORE_VERSION" value="5" />
+      <option name="FILE_PATH" value="$PROJECT_DIR$/use_cases/InstallationRequest.feature" />
+      <option name="GLUE" value="CarAccessiores" />
+      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
+      <module name="CarAccessioresCompany" />
+      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter" />
+      <option name="SUGGESTED_NAME" value="Feature: InstallationRequest" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="io.cucumber.core.cli.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Feature: UserRoles" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
+      <option name="CUCUMBER_CORE_VERSION" value="5" />
+      <option name="FILE_PATH" value="$PROJECT_DIR$/use_cases/UserRoles.feature" />
+      <option name="GLUE" value="CarAccessiores" />
+      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
+      <module name="CarAccessioresCompany" />
+      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter" />
+      <option name="SUGGESTED_NAME" value="Feature: UserRoles" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="io.cucumber.core.cli.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <list>
+      <item itemvalue="Application.Main" />
+      <item itemvalue="Cucumber Java.Feature: InstallationRequest" />
+      <item itemvalue="Cucumber Java.Feature: UserRoles" />
+      <item itemvalue="Cucumber Java.All Features in: use_cases" />
+      <item itemvalue="Cucumber Java.Feature: AdminDashboard" />
+    </list>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Cucumber Java.All Features in: use_cases" />
+        <item itemvalue="Cucumber Java.Feature: InstallationRequest" />
+        <item itemvalue="Application.Main" />
+        <item itemvalue="Cucumber Java.Feature: AdminDashboard" />
+        <item itemvalue="Cucumber Java.Feature: UserRoles" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="6749a787-147b-4762-88a9-bf9f02945c47" name="Changes" comment="" />
+      <created>1698684889126</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1698684889126</updated>
+      <workItem from="1698684890274" duration="31000" />
+      <workItem from="1698864112289" duration="12030000" />
+      <workItem from="1698876668767" duration="16661000" />
+      <workItem from="1698939804178" duration="454000" />
+      <workItem from="1698940900789" duration="11941000" />
+      <workItem from="1700663136594" duration="492000" />
+      <workItem from="1700663646543" duration="3247000" />
+      <workItem from="1700759398318" duration="14767000" />
+      <workItem from="1700944728655" duration="55499000" />
+      <workItem from="1702046486696" duration="684000" />
+      <workItem from="1703104038639" duration="2567000" />
+      <workItem from="1703106632394" duration="3036000" />
+      <workItem from="1703175219238" duration="37000" />
+      <workItem from="1703175354840" duration="618000" />
+    </task>
+    <task id="LOCAL-00001" summary="some of the main">
+      <option name="closed" value="true" />
+      <created>1698876297076</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1698876297076</updated>
+    </task>
+    <task id="LOCAL-00002" summary="some of the main">
+      <option name="closed" value="true" />
+      <created>1698876446880</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1698876446880</updated>
+    </task>
+    <task id="LOCAL-00003" summary="some of the main">
+      <option name="closed" value="true" />
+      <created>1698908711436</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1698908711436</updated>
+    </task>
+    <task id="LOCAL-00004" summary="some of the main">
+      <option name="closed" value="true" />
+      <created>1698908754428</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1698908754428</updated>
+    </task>
+    <task id="LOCAL-00005" summary="full main">
+      <option name="closed" value="true" />
+      <created>1698937619799</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1698937619799</updated>
+    </task>
+    <task id="LOCAL-00006" summary="l3yon alsha3eb">
+      <option name="closed" value="true" />
+      <created>1698942204892</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1698942204892</updated>
+    </task>
+    <task id="LOCAL-00007" summary="l3yon alsha3eb">
+      <option name="closed" value="true" />
+      <created>1698943066230</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1698943066230</updated>
+    </task>
+    <task id="LOCAL-00008" summary="4 feature ready">
+      <option name="closed" value="true" />
+      <created>1698955944419</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1698955944419</updated>
+    </task>
+    <task id="LOCAL-00009" summary="admin dashboard and user profile ready">
+      <option name="closed" value="true" />
+      <created>1701012723989</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1701012723989</updated>
+    </task>
+    <task id="LOCAL-00010" summary="admin dashboard and user profile ready">
+      <option name="closed" value="true" />
+      <created>1701012790629</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1701012790630</updated>
+    </task>
+    <task id="LOCAL-00011" summary="admin dashboard and user profile ready">
+      <option name="closed" value="true" />
+      <created>1701118409227</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1701118409227</updated>
+    </task>
+    <task id="LOCAL-00012" summary="admin dashboard and user profile ready">
+      <option name="closed" value="true" />
+      <created>1701118430024</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1701118430024</updated>
+    </task>
+    <task id="LOCAL-00013" summary="admin dashboard and user profile ready">
+      <option name="closed" value="true" />
+      <created>1701381540769</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1701381540769</updated>
+    </task>
+    <task id="LOCAL-00014" summary="admin dashboard and user profile ready">
+      <option name="closed" value="true" />
+      <created>1701381545848</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1701381545848</updated>
+    </task>
+    <task id="LOCAL-00015" summary="admin dashboard and user profile ready">
+      <option name="closed" value="true" />
+      <created>1701381557354</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1701381557354</updated>
+    </task>
+    <task id="LOCAL-00016" summary="updated pom file">
+      <option name="closed" value="true" />
+      <created>1703109506968</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1703109506968</updated>
+    </task>
+    <option name="localTasksCounter" value="17" />
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="OPEN_GENERIC_TABS">
+      <map>
+        <entry key="4f686ae9-f3aa-40e2-959a-a7ffd25acfca" value="TOOL_WINDOW" />
+      </map>
+    </option>
+    <option name="TAB_STATES">
+      <map>
+        <entry key="4f686ae9-f3aa-40e2-959a-a7ffd25acfca">
+          <value>
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="HEAD" />
+                      </list>
+                    </value>
+                  </entry>
+                  <entry key="roots">
+                    <value>
+                      <list>
+                        <option value="$PROJECT_DIR$" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+              <option name="SHOW_ONLY_AFFECTED_CHANGES" value="true" />
+            </State>
+          </value>
+        </entry>
+        <entry key="MAIN">
+          <value>
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="origin/main" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="user roles feature and installation request feature" />
+    <MESSAGE value="Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;src/main/java/CarAccessiores/CustomLogFormatter.java&#10;#&#9;src/main/java/CarAccessiores/Dashboard.java&#10;#&#9;src/main/java/CarAccessiores/Main.java&#10;#&#9;src/main/java/CarAccessiores/UserLoginPage.java&#10;#&#9;src/main/java/CarAccessiores/connectDB.java&#10;#&#9;src/test/java/CarAccessiores/AdminDashboard.java" />
+    <MESSAGE value="some of the main" />
+    <MESSAGE value="full main" />
+    <MESSAGE value="l3yon alsha3eb" />
+    <MESSAGE value="4 feature ready" />
+    <MESSAGE value="notifications section" />
+    <MESSAGE value="admin dashboard and user profile ready" />
+    <MESSAGE value="updated pom file" />
+    <option name="LAST_COMMIT_MESSAGE" value="updated pom file" />
+    <option name="GROUP_MULTIFILE_MERGE_BY_DIRECTORY" value="true" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <breakpoint enabled="true" type="java-exception">
+          <properties class="java.util.MissingFormatArgumentException" package="java.util" />
+          <option name="timeStamp" value="8" />
+        </breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
+</project>
\ No newline at end of file
Index: .github/workflows/main.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml
new file mode 100644
--- /dev/null	(date 1703174050833)
+++ b/.github/workflows/main.yml	(date 1703174050833)
@@ -0,0 +1,26 @@
+name: github action by mohammad and jaber
+
+on:
+  push:
+    branches: [main]
+jobs:
+
+  build-on-ubuntu:
+    runs-on: ubuntu-latest
+
+    steps:
+     
+      - name: step1 checkout the main branch from Github repo.
+        uses: actions/checkout@v2
+
+      - name: step2 setup jdk version
+        uses: actions/setup-java@v1
+        with:
+          java-version: 1.11
+          
+      - name: step3 build the maven project
+        run: mvn --batch-mode clean -DskipTests 
+
+      - name: step4 run the test cases
+        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test
+
Index:  target/cucumber.html/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ target/cucumber.html/index.html b/ target/cucumber.html/index.html
new file mode 100644
--- /dev/null	(date 1703174050828)
+++ b/ target/cucumber.html/index.html	(date 1703174050828)
@@ -0,0 +1,14 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <meta charset="utf-8">
+    <title>Cucumber Features</title>
+    <link href="style.css" rel="stylesheet">
+    <script src="jquery-1.8.2.min.js"></script>
+    <script src="formatter.js"></script>
+    <script src="report.js"></script>
+  </head>
+  <body>
+    <div class="cucumber-report"></div>
+  </body>
+</html>
Index:  target/cucumber.html/formatter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ target/cucumber.html/formatter.js b/ target/cucumber.html/formatter.js
new file mode 100644
--- /dev/null	(date 1703174050827)
+++ b/ target/cucumber.html/formatter.js	(date 1703174050827)
@@ -0,0 +1,228 @@
+var CucumberHTML = {};
+
+CucumberHTML.DOMFormatter = function(rootNode) {
+  var currentUri;
+  var currentFeature;
+  var currentElement;
+  var currentSteps;
+
+  var currentStepIndex;
+  var currentStep;
+  var $templates = $(CucumberHTML.templates);
+
+  this.uri = function(uri) {
+    currentUri = uri;
+  };
+
+  this.feature = function(feature) {
+    currentFeature = blockElement(rootNode, feature, 'feature');
+  };
+
+  this.background = function(background) {
+    currentElement = featureElement(background, 'background');
+    currentStepIndex = 1;
+  };
+
+  this.scenario = function(scenario) {
+    currentElement = featureElement(scenario, 'scenario');
+    currentStepIndex = 1;
+  };
+
+  this.scenarioOutline = function(scenarioOutline) {
+    currentElement = featureElement(scenarioOutline, 'scenario_outline');
+    currentStepIndex = 1;
+  };
+
+  this.step = function(step) {
+    var stepElement = $('.step', $templates).clone();
+    stepElement.appendTo(currentSteps);
+    populate(stepElement, step, 'step');
+
+    if (step.doc_string) {
+      docString = $('.doc_string', $templates).clone();
+      docString.appendTo(stepElement);
+      // TODO: use a syntax highlighter based on the content_type
+      docString.text(step.doc_string.value);
+    }
+    if (step.rows) {
+      dataTable = $('.data_table', $templates).clone();
+      dataTable.appendTo(stepElement);
+      var tBody = dataTable.find('tbody');
+      $.each(step.rows, function(index, row) {
+        var tr = $('<tr></tr>').appendTo(tBody);
+        $.each(row.cells, function(index, cell) {
+          var td = $('<td>' + cell + '</td>').appendTo(tBody);
+        });
+      });
+    }
+  };
+
+  this.examples = function(examples) {
+    var examplesElement = blockElement(currentElement.children('details'), examples, 'examples');
+    var examplesTable = $('.examples_table', $templates).clone();
+    examplesTable.appendTo(examplesElement.children('details'));
+
+    $.each(examples.rows, function(index, row) {
+      var parent = index == 0 ? examplesTable.find('thead') : examplesTable.find('tbody');
+      var tr = $('<tr></tr>').appendTo(parent);
+      $.each(row.cells, function(index, cell) {
+        var td = $('<td>' + cell + '</td>').appendTo(tr);
+      });
+    });
+  };
+
+  this.match = function(match) {
+    currentStep = currentSteps.find('li:nth-child(' + currentStepIndex + ')');
+    currentStepIndex++;
+  };
+
+  this.result = function(result) {
+    currentStep.addClass(result.status);
+    if (result.status == 'failed') {
+      populateStepError(currentStep, result.error_message);
+    }
+    currentElement.addClass(result.status);
+    var isLastStep = currentSteps.find('li:nth-child(' + currentStepIndex + ')').length == 0;
+    if (isLastStep) {
+      if (currentSteps.find('.failed').length == 0) {
+        // No failed steps. Collapse it.
+        currentElement.find('details').removeAttr('open');
+      } else {
+        currentElement.find('details').attr('open', 'open');
+      }
+    }
+  };
+
+  this.embedding = function(mimeType, data) {
+    if (mimeType.match(/^image\//)) 
+    {
+      currentStep.append('<img src="' + data + '">');
+    }
+    else if (mimeType.match(/^video\//)) 
+    {
+      currentStep.append('<video src="' + data + '" type="' + mimeType + '" autobuffer controls>Your browser doesn\'t support video.</video>');
+    }
+    else if (mimeType.match(/^text\//)) 
+    {
+      this.write(data);
+    }
+  };
+
+  this.write = function(text) {
+    currentStep.append('<pre class="embedded-text">' + text + '</pre>');
+  };
+
+  this.before = function(before) {
+    if(before.status != 'passed') {
+      currentElement = featureElement({keyword: 'Before', name: '', description: ''}, 'before');
+      currentStepIndex = 1;
+      populateStepError($('details', currentElement), before.error_message);
+    }
+  };
+
+  this.after = function(after) {
+    if(after.status != 'passed') {
+      currentElement = featureElement({keyword: 'After', name: '', description: ''}, 'after');
+      currentStepIndex++;
+      populateStepError($('details', currentElement), after.error_message);
+    }
+  };
+
+  function featureElement(statement, itemtype) {
+    var e = blockElement(currentFeature.children('details'), statement, itemtype);
+
+    currentSteps = $('.steps', $templates).clone();
+    currentSteps.appendTo(e.children('details'));
+
+    return e;
+  }
+
+  function blockElement(parent, statement, itemtype) {
+    var e = $('.blockelement', $templates).clone();
+    e.appendTo(parent);
+    return populate(e, statement, itemtype);
+  }
+
+  function populate(e, statement, itemtype) {
+    populateTags(e, statement.tags);
+    populateComments(e, statement.comments);
+    e.find('.keyword').text(statement.keyword);
+    e.find('.name').text(statement.name);
+    e.find('.description').text(statement.description);
+    e.attr('itemtype', 'http://cukes.info/microformat/' + itemtype);
+    e.addClass(itemtype);
+    return e;
+  }
+
+  function populateComments(e, comments) {
+    if (comments !== undefined) {
+      var commentsNode = $('.comments', $templates).clone().prependTo(e.find('.header'));
+      $.each(comments, function(index, comment) {
+        var commentNode = $('.comment', $templates).clone().appendTo(commentsNode);
+        commentNode.text(comment.value);
+      });
+    }
+  }
+
+  function populateTags(e, tags) {
+    if (tags !== undefined) {
+      var tagsNode = $('.tags', $templates).clone().prependTo(e.find('.header'));
+      $.each(tags, function(index, tag) {
+        var tagNode = $('.tag', $templates).clone().appendTo(tagsNode);
+        tagNode.text(tag.name);
+      });
+    }
+  }
+
+  function populateStepError(e, error) {
+    if (error !== undefined) {
+      errorNode = $('.error', $templates).clone().appendTo(e);
+      errorNode.text(error);
+    }
+  }
+};
+
+CucumberHTML.templates = '<div>\
+  <section class="blockelement" itemscope>\
+    <details open>\
+      <summary class="header">\
+        <span class="keyword" itemprop="keyword">Keyword</span>: <span itemprop="name" class="name">This is the block name</span>\
+      </summary>\
+      <div itemprop="description" class="description">The description goes here</div>\
+    </details>\
+  </section>\
+\
+  <ol class="steps"></ol>\
+\
+  <ol>\
+    <li class="step"><span class="keyword" itemprop="keyword">Keyword</span><span class="name" itemprop="name">Name</span></li>\
+  </ol>\
+\
+  <pre class="doc_string"></pre>\
+\
+  <pre class="error"></pre>\
+\
+  <table class="data_table">\
+    <tbody>\
+    </tbody>\
+  </table>\
+\
+  <table class="examples_table">\
+    <thead></thead>\
+    <tbody></tbody>\
+  </table>\
+\
+  <section class="embed">\
+    <img itemprop="screenshot" class="screenshot" />\
+  </section>\
+  <div class="tags"></div>\
+  <span class="tag"></span>\
+  <div class="comments"></div>\
+  <div class="comment"></div>\
+<div>';
+
+if (typeof module !== 'undefined') {
+  module.exports = CucumberHTML;
+} else if (typeof define !== 'undefined') {
+  define([], function() { return CucumberHTML; });
+}
Index: .classpath
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<classpath>\r\n\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"java\">\r\n\t\t<attributes>\r\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\r\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\r\n\t\t</attributes>\r\n\t</classpathentry>\r\n\t<classpathentry excluding=\"**\" kind=\"src\" output=\"target/classes\" path=\"src/main/resources\">\r\n\t\t<attributes>\r\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\r\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\r\n\t\t</attributes>\r\n\t</classpathentry>\r\n\t<classpathentry kind=\"src\" output=\"target/test-classes\" path=\"src/test/java\">\r\n\t\t<attributes>\r\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\r\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\r\n\t\t\t<attribute name=\"test\" value=\"true\"/>\r\n\t\t</attributes>\r\n\t</classpathentry>\r\n\t<classpathentry excluding=\"**\" kind=\"src\" output=\"target/test-classes\" path=\"src/test/resources\">\r\n\t\t<attributes>\r\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\r\n\t\t\t<attribute name=\"test\" value=\"true\"/>\r\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\r\n\t\t</attributes>\r\n\t</classpathentry>\r\n\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8\">\r\n\t\t<attributes>\r\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\r\n\t\t</attributes>\r\n\t</classpathentry>\r\n\t<classpathentry kind=\"con\" path=\"org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER\">\r\n\t\t<attributes>\r\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\r\n\t\t</attributes>\r\n\t</classpathentry>\r\n\t<classpathentry kind=\"output\" path=\"target/classes\"/>\r\n</classpath>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.classpath b/.classpath
--- a/.classpath	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/.classpath	(date 1703174171200)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" output="target/classes" path="java">
+	<classpathentry kind="src" output="target/classes" path="src/main/java">
 		<attributes>
 			<attribute name="optional" value="true"/>
 			<attribute name="maven.pomderived" value="true"/>
@@ -14,20 +14,21 @@
 	</classpathentry>
 	<classpathentry kind="src" output="target/test-classes" path="src/test/java">
 		<attributes>
+			<attribute name="test" value="true"/>
 			<attribute name="optional" value="true"/>
 			<attribute name="maven.pomderived" value="true"/>
-			<attribute name="test" value="true"/>
 		</attributes>
 	</classpathentry>
 	<classpathentry excluding="**" kind="src" output="target/test-classes" path="src/test/resources">
 		<attributes>
-			<attribute name="maven.pomderived" value="true"/>
 			<attribute name="test" value="true"/>
+			<attribute name="maven.pomderived" value="true"/>
 			<attribute name="optional" value="true"/>
 		</attributes>
 	</classpathentry>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8">
 		<attributes>
+			<attribute name="module" value="true"/>
 			<attribute name="maven.pomderived" value="true"/>
 		</attributes>
 	</classpathentry>
@@ -36,5 +37,6 @@
 			<attribute name="maven.pomderived" value="true"/>
 		</attributes>
 	</classpathentry>
+	<classpathentry kind="lib" path="C:/Users/abuza/Downloads/mysql-connector-j-8.1.0/mysql-connector-j-8.1.0/mysql-connector-j-8.1.0.jar"/>
 	<classpathentry kind="output" path="target/classes"/>
 </classpath>
Index:  target/cucumber.html/report.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ target/cucumber.html/report.js b/ target/cucumber.html/report.js
new file mode 100644
--- /dev/null	(date 1703174050830)
+++ b/ target/cucumber.html/report.js	(date 1703174050830)
@@ -0,0 +1,1070 @@
+$(document).ready(function() {var formatter = new CucumberHTML.DOMFormatter($('.cucumber-report'));formatter.uri("InstallationRequest.feature");
+formatter.feature({
+  "comments": [
+    {
+      "line": 1,
+      "value": "#Given a customer is logged in"
+    },
+    {
+      "line": 2,
+      "value": "#And there are available installers"
+    }
+  ],
+  "line": 3,
+  "name": "installation request",
+  "description": "",
+  "id": "installation-request",
+  "keyword": "Feature"
+});
+formatter.scenario({
+  "line": 8,
+  "name": "Customer submits an installation request",
+  "description": "",
+  "id": "installation-request;customer-submits-an-installation-request",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 9,
+  "name": "a customer is logged in",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 10,
+  "name": "there are available installers",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 11,
+  "name": "the customer requests installation for a specific product",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 12,
+  "name": "provides installation details:",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 13,
+  "name": "the installation request is submitted successfully",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 16,
+  "name": "Installer schedules an appointment",
+  "description": "",
+  "id": "installation-request;installer-schedules-an-appointment",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 17,
+  "name": "an installation request is Pending",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 18,
+  "name": "an installer schedules an appointment for the request",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 19,
+  "name": "the appointment is scheduled successfully",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 20,
+  "name": "the request status is Scheduled",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 22,
+  "name": "Customer views the installation request status",
+  "description": "",
+  "id": "installation-request;customer-views-the-installation-request-status",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 23,
+  "name": "the customer checks the status of their installation request",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 24,
+  "name": "the request status is displayed as Scheduled",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 26,
+  "name": "Installer marks the installation as complete",
+  "description": "",
+  "id": "installation-request;installer-marks-the-installation-as-complete",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 27,
+  "name": "an appointment is Scheduled",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 28,
+  "name": "the installer completes the installation",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 29,
+  "name": "the installation request status is updated to completed",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 31,
+  "name": "Customer views the completed installation request",
+  "description": "",
+  "id": "installation-request;customer-views-the-completed-installation-request",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 33,
+  "name": "the request status is displayed as completed",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 35,
+  "name": "Installer marks the installation as canceled",
+  "description": "",
+  "id": "installation-request;installer-marks-the-installation-as-canceled",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 36,
+  "name": "an appointment is scheduled",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 37,
+  "name": "the installer cancels the installation",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 38,
+  "name": "the installation request status is updated to canceled",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 40,
+  "name": "Customer views the canceled installation request",
+  "description": "",
+  "id": "installation-request;customer-views-the-canceled-installation-request",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 42,
+  "name": "the request status is displayed as canceled",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.uri("Notifications.feature");
+formatter.feature({
+  "line": 2,
+  "name": "Notifications",
+  "description": "",
+  "id": "notifications",
+  "keyword": "Feature"
+});
+formatter.scenario({
+  "line": 4,
+  "name": "Send Notificatios to customer via email",
+  "description": "",
+  "id": "notifications;send-notificatios-to-customer-via-email",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 5,
+  "name": "The customer request some instllation",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 6,
+  "name": "the request is complete",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 7,
+  "name": "send notification to the customer via email",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 10,
+  "name": "Send Notification to installer via email",
+  "description": "",
+  "id": "notifications;send-notification-to-installer-via-email",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 11,
+  "name": "The installer receives customer instllation",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 12,
+  "name": "the request is complete",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 13,
+  "name": "send notification to the installer via email",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.uri("ProductCatalog.feature");
+formatter.feature({
+  "line": 2,
+  "name": "Product Catalog",
+  "description": "",
+  "id": "product-catalog",
+  "keyword": "Feature"
+});
+formatter.scenario({
+  "line": 4,
+  "name": "View Product Categories",
+  "description": "",
+  "id": "product-catalog;view-product-categories",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 5,
+  "name": "the user is login to the system",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 6,
+  "name": "they request the product categories",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 7,
+  "name": "they should see detailed product information including description, images, price, and availability",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 9,
+  "name": "Product Catalog Search and Filters",
+  "description": "",
+  "id": "product-catalog;product-catalog-search-and-filters",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 10,
+  "name": "the user is login to the system",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 11,
+  "name": "the user serrch for a product (e.g., \"Matur\" and set filters for \"Price\" to \"5000\"",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 12,
+  "name": "should see all product  that in price equal to 5000 and category to electronics",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 14,
+  "name": "Product Catalog Search and Filters",
+  "description": "",
+  "id": "product-catalog;product-catalog-search-and-filters",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 15,
+  "name": "the user is login to the system",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 16,
+  "name": "the user serrch for product (ex: \"banana\") does not found in out company",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 17,
+  "name": "the user should have error message",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 19,
+  "name": "User does not login to the system",
+  "description": "",
+  "id": "product-catalog;user-does-not-login-to-the-system",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 20,
+  "name": "the user with out login",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 21,
+  "name": "the user want to see product catalog",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 22,
+  "name": "the user should have waning message",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.uri("UserLogin.feature");
+formatter.feature({
+  "line": 2,
+  "name": "User Login",
+  "description": "",
+  "id": "user-login",
+  "keyword": "Feature"
+});
+formatter.scenario({
+  "line": 4,
+  "name": "User successfully login",
+  "description": "",
+  "id": "user-login;user-successfully-login",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 5,
+  "name": "the user_email is \"jaberDar@najah.edu\"",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 6,
+  "name": "the user_password is \"123455\"",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 7,
+  "name": "the user enters valid credentials (useremail and password)",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 8,
+  "name": "user login successfully",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 9,
+  "name": "should see a welcome to the car accessories company",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 11,
+  "name": "User enters invalid user_email",
+  "description": "",
+  "id": "user-login;user-enters-invalid-user-email",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 12,
+  "name": "the user_email is \"Mohammed@najah.edu\"",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 13,
+  "name": "the user_password is \"123455\"",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 14,
+  "name": "the user enters an invalid useremail",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 15,
+  "name": "the user should see an Incorrect userEmail",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 16,
+  "name": "login faild",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 18,
+  "name": "User enters vaild user_email invalid user_password",
+  "description": "",
+  "id": "user-login;user-enters-vaild-user-email-invalid-user-password",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 19,
+  "name": "the user_email is \"jaberDar@najah.edu\"",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 20,
+  "name": "the user_password is \"000000\"",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 21,
+  "name": "the user enters an invalid userpassword",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 22,
+  "name": "the user should see an Incorrect Password",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 23,
+  "name": "login faild",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 25,
+  "name": "User leaves user_email is empty",
+  "description": "",
+  "id": "user-login;user-leaves-user-email-is-empty",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 26,
+  "name": "the user_email is \"\"",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 27,
+  "name": "the user_password is \"123455\"",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 28,
+  "name": "the user enters an invalid userEmail",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 29,
+  "name": "the user should see an userEmail is empty",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 30,
+  "name": "login faild",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 32,
+  "name": "User leaves user_password is empty",
+  "description": "",
+  "id": "user-login;user-leaves-user-password-is-empty",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 33,
+  "name": "the user_email is \"jaber@najah.edu\"",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 34,
+  "name": "the user_password is \"\"",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 35,
+  "name": "the user enters an invalid user_pawword",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 36,
+  "name": "the user should see an password is empty",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 37,
+  "name": "login faild",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 39,
+  "name": "User leaves user_email and user_password is empty",
+  "description": "",
+  "id": "user-login;user-leaves-user-email-and-user-password-is-empty",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 40,
+  "name": "the user_email is \"\"",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 41,
+  "name": "the user_password is \"\"",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 42,
+  "name": "the user enters an invalid userEmail and userPassword",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 43,
+  "name": "the user should see an userEmail and password is empty",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 44,
+  "name": "login faild",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.uri("UserRoles.feature");
+formatter.feature({
+  "line": 1,
+  "name": "User Roles",
+  "description": "",
+  "id": "user-roles",
+  "keyword": "Feature"
+});
+formatter.scenario({
+  "line": 3,
+  "name": "Admin Manages Users",
+  "description": "",
+  "id": "user-roles;admin-manages-users",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 4,
+  "name": "an Admin is logged into the system",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 5,
+  "name": "the Admin navigates to the user role management section",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 6,
+  "name": "the Admin should be able to add a new user",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 7,
+  "name": "the Admin should be able to edit an existing user",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 8,
+  "name": "the Admin should be able to delete a user",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 10,
+  "name": "Customer Browses Products and Makes Purchases",
+  "description": "",
+  "id": "user-roles;customer-browses-products-and-makes-purchases",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 11,
+  "name": "a Customer is logged into the system",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 12,
+  "name": "the Customer browses the product catalog",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 13,
+  "name": "the Customer should be able to view detailed product information",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 14,
+  "name": "the Customer should be able to add the product to the cart",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 15,
+  "name": "the Customer should be able to proceed to checkout",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 16,
+  "name": "the Customer should be able to complete the purchase",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 18,
+  "name": "Customer Views Order History",
+  "description": "",
+  "id": "user-roles;customer-views-order-history",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 19,
+  "name": "a Customer is logged into the system",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 20,
+  "name": "the Customer accesses their user profile",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 21,
+  "name": "views their order history",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 22,
+  "name": "the Customer should see a list of their past orders",
+  "keyword": "Then "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.scenario({
+  "line": 24,
+  "name": "Installer Views Installation Requests and Schedules Appointments",
+  "description": "",
+  "id": "user-roles;installer-views-installation-requests-and-schedules-appointments",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 25,
+  "name": "an Installer is logged into the system",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 26,
+  "name": "the Installer navigates to the installation request section",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 27,
+  "name": "the Installer should be able to view a list of installation requests",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 28,
+  "name": "the Installer should be able to accept or reject installation requests",
+  "keyword": "And "
+});
+formatter.step({
+  "line": 29,
+  "name": "the Installer should be able to schedule appointments for accepted requests",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.uri("userRegisteration.feature");
+formatter.feature({
+  "line": 2,
+  "name": "User Registeration via Email and Password",
+  "description": "",
+  "id": "user-registeration-via-email-and-password",
+  "keyword": "Feature"
+});
+formatter.scenario({
+  "line": 4,
+  "name": "Successful User Registration",
+  "description": "",
+  "id": "user-registeration-via-email-and-password;successful-user-registration",
+  "type": "scenario",
+  "keyword": "Scenario"
+});
+formatter.step({
+  "line": 5,
+  "name": "a user is on the registration page",
+  "keyword": "Given "
+});
+formatter.step({
+  "line": 6,
+  "name": "they provide valid registration details, including \"jaber@najah.edu\" and \"123455\"",
+  "keyword": "When "
+});
+formatter.step({
+  "line": 7,
+  "name": "the enterd details should be sored to DB",
+  "keyword": "Then "
+});
+formatter.step({
+  "line": 8,
+  "name": "should be see registration confirm message",
+  "keyword": "And "
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+formatter.match({});
+formatter.result({
+  "status": "undefined"
+});
+});
\ No newline at end of file
Index:  target/cucumber.html/jquery-1.8.2.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ target/cucumber.html/jquery-1.8.2.min.js b/ target/cucumber.html/jquery-1.8.2.min.js
new file mode 100644
--- /dev/null	(date 1703174050829)
+++ b/ target/cucumber.html/jquery-1.8.2.min.js	(date 1703174050829)
@@ -0,0 +1,2 @@
+/*! jQuery v1.8.2 jquery.com | jquery.org/license */
+(function(a,b){function G(a){var b=F[a]={};return p.each(a.split(s),function(a,c){b[c]=!0}),b}function J(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(I,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:+d+""===d?+d:H.test(d)?p.parseJSON(d):d}catch(f){}p.data(a,c,d)}else d=b}return d}function K(a){var b;for(b in a){if(b==="data"&&p.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function ba(){return!1}function bb(){return!0}function bh(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function bi(a,b){do a=a[b];while(a&&a.nodeType!==1);return a}function bj(a,b,c){b=b||0;if(p.isFunction(b))return p.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return p.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=p.grep(a,function(a){return a.nodeType===1});if(be.test(b))return p.filter(b,d,!c);b=p.filter(b,d)}return p.grep(a,function(a,d){return p.inArray(a,b)>=0===c})}function bk(a){var b=bl.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function bC(a,b){return a.getElementsByTagName(b)[0]||a.appendChild(a.ownerDocument.createElement(b))}function bD(a,b){if(b.nodeType!==1||!p.hasData(a))return;var c,d,e,f=p._data(a),g=p._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;d<e;d++)p.event.add(b,c,h[c][d])}g.data&&(g.data=p.extend({},g.data))}function bE(a,b){var c;if(b.nodeType!==1)return;b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?(b.parentNode&&(b.outerHTML=a.outerHTML),p.support.html5Clone&&a.innerHTML&&!p.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):c==="input"&&bv.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text),b.removeAttribute(p.expando)}function bF(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bG(a){bv.test(a.type)&&(a.defaultChecked=a.checked)}function bY(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=bW.length;while(e--){b=bW[e]+c;if(b in a)return b}return d}function bZ(a,b){return a=b||a,p.css(a,"display")==="none"||!p.contains(a.ownerDocument,a)}function b$(a,b){var c,d,e=[],f=0,g=a.length;for(;f<g;f++){c=a[f];if(!c.style)continue;e[f]=p._data(c,"olddisplay"),b?(!e[f]&&c.style.display==="none"&&(c.style.display=""),c.style.display===""&&bZ(c)&&(e[f]=p._data(c,"olddisplay",cc(c.nodeName)))):(d=bH(c,"display"),!e[f]&&d!=="none"&&p._data(c,"olddisplay",d))}for(f=0;f<g;f++){c=a[f];if(!c.style)continue;if(!b||c.style.display==="none"||c.style.display==="")c.style.display=b?e[f]||"":"none"}return a}function b_(a,b,c){var d=bP.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function ca(a,b,c,d){var e=c===(d?"border":"content")?4:b==="width"?1:0,f=0;for(;e<4;e+=2)c==="margin"&&(f+=p.css(a,c+bV[e],!0)),d?(c==="content"&&(f-=parseFloat(bH(a,"padding"+bV[e]))||0),c!=="margin"&&(f-=parseFloat(bH(a,"border"+bV[e]+"Width"))||0)):(f+=parseFloat(bH(a,"padding"+bV[e]))||0,c!=="padding"&&(f+=parseFloat(bH(a,"border"+bV[e]+"Width"))||0));return f}function cb(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=!0,f=p.support.boxSizing&&p.css(a,"boxSizing")==="border-box";if(d<=0||d==null){d=bH(a,b);if(d<0||d==null)d=a.style[b];if(bQ.test(d))return d;e=f&&(p.support.boxSizingReliable||d===a.style[b]),d=parseFloat(d)||0}return d+ca(a,b,c||(f?"border":"content"),e)+"px"}function cc(a){if(bS[a])return bS[a];var b=p("<"+a+">").appendTo(e.body),c=b.css("display");b.remove();if(c==="none"||c===""){bI=e.body.appendChild(bI||p.extend(e.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!bJ||!bI.createElement)bJ=(bI.contentWindow||bI.contentDocument).document,bJ.write("<!doctype html><html><body>"),bJ.close();b=bJ.body.appendChild(bJ.createElement(a)),c=bH(b,"display"),e.body.removeChild(bI)}return bS[a]=c,c}function ci(a,b,c,d){var e;if(p.isArray(b))p.each(b,function(b,e){c||ce.test(a)?d(a,e):ci(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&p.type(b)==="object")for(e in b)ci(a+"["+e+"]",b[e],c,d);else d(a,b)}function cz(a){return function(b,c){typeof b!="string"&&(c=b,b="*");var d,e,f,g=b.toLowerCase().split(s),h=0,i=g.length;if(p.isFunction(c))for(;h<i;h++)d=g[h],f=/^\+/.test(d),f&&(d=d.substr(1)||"*"),e=a[d]=a[d]||[],e[f?"unshift":"push"](c)}}function cA(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h,i=a[f],j=0,k=i?i.length:0,l=a===cv;for(;j<k&&(l||!h);j++)h=i[j](c,d,e),typeof h=="string"&&(!l||g[h]?h=b:(c.dataTypes.unshift(h),h=cA(a,c,d,e,h,g)));return(l||!h)&&!g["*"]&&(h=cA(a,c,d,e,"*",g)),h}function cB(a,c){var d,e,f=p.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((f[d]?a:e||(e={}))[d]=c[d]);e&&p.extend(!0,a,e)}function cC(a,c,d){var e,f,g,h,i=a.contents,j=a.dataTypes,k=a.responseFields;for(f in k)f in d&&(c[k[f]]=d[f]);while(j[0]==="*")j.shift(),e===b&&(e=a.mimeType||c.getResponseHeader("content-type"));if(e)for(f in i)if(i[f]&&i[f].test(e)){j.unshift(f);break}if(j[0]in d)g=j[0];else{for(f in d){if(!j[0]||a.converters[f+" "+j[0]]){g=f;break}h||(h=f)}g=g||h}if(g)return g!==j[0]&&j.unshift(g),d[g]}function cD(a,b){var c,d,e,f,g=a.dataTypes.slice(),h=g[0],i={},j=0;a.dataFilter&&(b=a.dataFilter(b,a.dataType));if(g[1])for(c in a.converters)i[c.toLowerCase()]=a.converters[c];for(;e=g[++j];)if(e!=="*"){if(h!=="*"&&h!==e){c=i[h+" "+e]||i["* "+e];if(!c)for(d in i){f=d.split(" ");if(f[1]===e){c=i[h+" "+f[0]]||i["* "+f[0]];if(c){c===!0?c=i[d]:i[d]!==!0&&(e=f[0],g.splice(j--,0,e));break}}}if(c!==!0)if(c&&a["throws"])b=c(b);else try{b=c(b)}catch(k){return{state:"parsererror",error:c?k:"No conversion from "+h+" to "+e}}}h=e}return{state:"success",data:b}}function cL(){try{return new a.XMLHttpRequest}catch(b){}}function cM(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function cU(){return setTimeout(function(){cN=b},0),cN=p.now()}function cV(a,b){p.each(b,function(b,c){var d=(cT[b]||[]).concat(cT["*"]),e=0,f=d.length;for(;e<f;e++)if(d[e].call(a,b,c))return})}function cW(a,b,c){var d,e=0,f=0,g=cS.length,h=p.Deferred().always(function(){delete i.elem}),i=function(){var b=cN||cU(),c=Math.max(0,j.startTime+j.duration-b),d=1-(c/j.duration||0),e=0,f=j.tweens.length;for(;e<f;e++)j.tweens[e].run(d);return h.notifyWith(a,[j,d,c]),d<1&&f?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:p.extend({},b),opts:p.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:cN||cU(),duration:c.duration,tweens:[],createTween:function(b,c,d){var e=p.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(e),e},stop:function(b){var c=0,d=b?j.tweens.length:0;for(;c<d;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;cX(k,j.opts.specialEasing);for(;e<g;e++){d=cS[e].call(j,a,k,j.opts);if(d)return d}return cV(j,k),p.isFunction(j.opts.start)&&j.opts.start.call(a,j),p.fx.timer(p.extend(i,{anim:j,queue:j.opts.queue,elem:a})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}function cX(a,b){var c,d,e,f,g;for(c in a){d=p.camelCase(c),e=b[d],f=a[c],p.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=p.cssHooks[d];if(g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}}function cY(a,b,c){var d,e,f,g,h,i,j,k,l=this,m=a.style,n={},o=[],q=a.nodeType&&bZ(a);c.queue||(j=p._queueHooks(a,"fx"),j.unqueued==null&&(j.unqueued=0,k=j.empty.fire,j.empty.fire=function(){j.unqueued||k()}),j.unqueued++,l.always(function(){l.always(function(){j.unqueued--,p.queue(a,"fx").length||j.empty.fire()})})),a.nodeType===1&&("height"in b||"width"in b)&&(c.overflow=[m.overflow,m.overflowX,m.overflowY],p.css(a,"display")==="inline"&&p.css(a,"float")==="none"&&(!p.support.inlineBlockNeedsLayout||cc(a.nodeName)==="inline"?m.display="inline-block":m.zoom=1)),c.overflow&&(m.overflow="hidden",p.support.shrinkWrapBlocks||l.done(function(){m.overflow=c.overflow[0],m.overflowX=c.overflow[1],m.overflowY=c.overflow[2]}));for(d in b){f=b[d];if(cP.exec(f)){delete b[d];if(f===(q?"hide":"show"))continue;o.push(d)}}g=o.length;if(g){h=p._data(a,"fxshow")||p._data(a,"fxshow",{}),q?p(a).show():l.done(function(){p(a).hide()}),l.done(function(){var b;p.removeData(a,"fxshow",!0);for(b in n)p.style(a,b,n[b])});for(d=0;d<g;d++)e=o[d],i=l.createTween(e,q?h[e]:0),n[e]=h[e]||p.style(a,e),e in h||(h[e]=i.start,q&&(i.end=i.start,i.start=e==="width"||e==="height"?1:0))}}function cZ(a,b,c,d,e){return new cZ.prototype.init(a,b,c,d,e)}function c$(a,b){var c,d={height:a},e=0;b=b?1:0;for(;e<4;e+=2-b)c=bV[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function da(a){return p.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}var c,d,e=a.document,f=a.location,g=a.navigator,h=a.jQuery,i=a.$,j=Array.prototype.push,k=Array.prototype.slice,l=Array.prototype.indexOf,m=Object.prototype.toString,n=Object.prototype.hasOwnProperty,o=String.prototype.trim,p=function(a,b){return new p.fn.init(a,b,c)},q=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,r=/\S/,s=/\s+/,t=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,u=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,y=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,z=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,A=/^-ms-/,B=/-([\da-z])/gi,C=function(a,b){return(b+"").toUpperCase()},D=function(){e.addEventListener?(e.removeEventListener("DOMContentLoaded",D,!1),p.ready()):e.readyState==="complete"&&(e.detachEvent("onreadystatechange",D),p.ready())},E={};p.fn=p.prototype={constructor:p,init:function(a,c,d){var f,g,h,i;if(!a)return this;if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if(typeof a=="string"){a.charAt(0)==="<"&&a.charAt(a.length-1)===">"&&a.length>=3?f=[null,a,null]:f=u.exec(a);if(f&&(f[1]||!c)){if(f[1])return c=c instanceof p?c[0]:c,i=c&&c.nodeType?c.ownerDocument||c:e,a=p.parseHTML(f[1],i,!0),v.test(f[1])&&p.isPlainObject(c)&&this.attr.call(a,c,!0),p.merge(this,a);g=e.getElementById(f[2]);if(g&&g.parentNode){if(g.id!==f[2])return d.find(a);this.length=1,this[0]=g}return this.context=e,this.selector=a,this}return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)}return p.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),p.makeArray(a,this))},selector:"",jquery:"1.8.2",length:0,size:function(){return this.length},toArray:function(){return k.call(this)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=p.merge(this.constructor(),a);return d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")"),d},each:function(a,b){return p.each(this,a,b)},ready:function(a){return p.ready.promise().done(a),this},eq:function(a){return a=+a,a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(k.apply(this,arguments),"slice",k.call(arguments).join(","))},map:function(a){return this.pushStack(p.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:j,sort:[].sort,splice:[].splice},p.fn.init.prototype=p.fn,p.extend=p.fn.extend=function(){var a,c,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;typeof h=="boolean"&&(k=h,h=arguments[1]||{},i=2),typeof h!="object"&&!p.isFunction(h)&&(h={}),j===i&&(h=this,--i);for(;i<j;i++)if((a=arguments[i])!=null)for(c in a){d=h[c],e=a[c];if(h===e)continue;k&&e&&(p.isPlainObject(e)||(f=p.isArray(e)))?(f?(f=!1,g=d&&p.isArray(d)?d:[]):g=d&&p.isPlainObject(d)?d:{},h[c]=p.extend(k,g,e)):e!==b&&(h[c]=e)}return h},p.extend({noConflict:function(b){return a.$===p&&(a.$=i),b&&a.jQuery===p&&(a.jQuery=h),p},isReady:!1,readyWait:1,holdReady:function(a){a?p.readyWait++:p.ready(!0)},ready:function(a){if(a===!0?--p.readyWait:p.isReady)return;if(!e.body)return setTimeout(p.ready,1);p.isReady=!0;if(a!==!0&&--p.readyWait>0)return;d.resolveWith(e,[p]),p.fn.trigger&&p(e).trigger("ready").off("ready")},isFunction:function(a){return p.type(a)==="function"},isArray:Array.isArray||function(a){return p.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):E[m.call(a)]||"object"},isPlainObject:function(a){if(!a||p.type(a)!=="object"||a.nodeType||p.isWindow(a))return!1;try{if(a.constructor&&!n.call(a,"constructor")&&!n.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||n.call(a,d)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},error:function(a){throw new Error(a)},parseHTML:function(a,b,c){var d;return!a||typeof a!="string"?null:(typeof b=="boolean"&&(c=b,b=0),b=b||e,(d=v.exec(a))?[b.createElement(d[1])]:(d=p.buildFragment([a],b,c?null:[]),p.merge([],(d.cacheable?p.clone(d.fragment):d.fragment).childNodes)))},parseJSON:function(b){if(!b||typeof b!="string")return null;b=p.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(w.test(b.replace(y,"@").replace(z,"]").replace(x,"")))return(new Function("return "+b))();p.error("Invalid JSON: "+b)},parseXML:function(c){var d,e;if(!c||typeof c!="string")return null;try{a.DOMParser?(e=new DOMParser,d=e.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(f){d=b}return(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&p.error("Invalid XML: "+c),d},noop:function(){},globalEval:function(b){b&&r.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(A,"ms-").replace(B,C)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,c,d){var e,f=0,g=a.length,h=g===b||p.isFunction(a);if(d){if(h){for(e in a)if(c.apply(a[e],d)===!1)break}else for(;f<g;)if(c.apply(a[f++],d)===!1)break}else if(h){for(e in a)if(c.call(a[e],e,a[e])===!1)break}else for(;f<g;)if(c.call(a[f],f,a[f++])===!1)break;return a},trim:o&&!o.call("﻿ ")?function(a){return a==null?"":o.call(a)}:function(a){return a==null?"":(a+"").replace(t,"")},makeArray:function(a,b){var c,d=b||[];return a!=null&&(c=p.type(a),a.length==null||c==="string"||c==="function"||c==="regexp"||p.isWindow(a)?j.call(d,a):p.merge(d,a)),d},inArray:function(a,b,c){var d;if(b){if(l)return l.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=c.length,e=a.length,f=0;if(typeof d=="number")for(;f<d;f++)a[e++]=c[f];else while(c[f]!==b)a[e++]=c[f++];return a.length=e,a},grep:function(a,b,c){var d,e=[],f=0,g=a.length;c=!!c;for(;f<g;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);return e},map:function(a,c,d){var e,f,g=[],h=0,i=a.length,j=a instanceof p||i!==b&&typeof i=="number"&&(i>0&&a[0]&&a[i-1]||i===0||p.isArray(a));if(j)for(;h<i;h++)e=c(a[h],h,d),e!=null&&(g[g.length]=e);else for(f in a)e=c(a[f],f,d),e!=null&&(g[g.length]=e);return g.concat.apply([],g)},guid:1,proxy:function(a,c){var d,e,f;return typeof c=="string"&&(d=a[c],c=a,a=d),p.isFunction(a)?(e=k.call(arguments,2),f=function(){return a.apply(c,e.concat(k.call(arguments)))},f.guid=a.guid=a.guid||p.guid++,f):b},access:function(a,c,d,e,f,g,h){var i,j=d==null,k=0,l=a.length;if(d&&typeof d=="object"){for(k in d)p.access(a,c,k,d[k],1,g,e);f=1}else if(e!==b){i=h===b&&p.isFunction(e),j&&(i?(i=c,c=function(a,b,c){return i.call(p(a),c)}):(c.call(a,e),c=null));if(c)for(;k<l;k++)c(a[k],d,i?e.call(a[k],k,c(a[k],d)):e,h);f=1}return f?a:j?c.call(a):l?c(a[0],d):g},now:function(){return(new Date).getTime()}}),p.ready.promise=function(b){if(!d){d=p.Deferred();if(e.readyState==="complete")setTimeout(p.ready,1);else if(e.addEventListener)e.addEventListener("DOMContentLoaded",D,!1),a.addEventListener("load",p.ready,!1);else{e.attachEvent("onreadystatechange",D),a.attachEvent("onload",p.ready);var c=!1;try{c=a.frameElement==null&&e.documentElement}catch(f){}c&&c.doScroll&&function g(){if(!p.isReady){try{c.doScroll("left")}catch(a){return setTimeout(g,50)}p.ready()}}()}}return d.promise(b)},p.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){E["[object "+b+"]"]=b.toLowerCase()}),c=p(e);var F={};p.Callbacks=function(a){a=typeof a=="string"?F[a]||G(a):p.extend({},a);var c,d,e,f,g,h,i=[],j=!a.once&&[],k=function(b){c=a.memory&&b,d=!0,h=f||0,f=0,g=i.length,e=!0;for(;i&&h<g;h++)if(i[h].apply(b[0],b[1])===!1&&a.stopOnFalse){c=!1;break}e=!1,i&&(j?j.length&&k(j.shift()):c?i=[]:l.disable())},l={add:function(){if(i){var b=i.length;(function d(b){p.each(b,function(b,c){var e=p.type(c);e==="function"&&(!a.unique||!l.has(c))?i.push(c):c&&c.length&&e!=="string"&&d(c)})})(arguments),e?g=i.length:c&&(f=b,k(c))}return this},remove:function(){return i&&p.each(arguments,function(a,b){var c;while((c=p.inArray(b,i,c))>-1)i.splice(c,1),e&&(c<=g&&g--,c<=h&&h--)}),this},has:function(a){return p.inArray(a,i)>-1},empty:function(){return i=[],this},disable:function(){return i=j=c=b,this},disabled:function(){return!i},lock:function(){return j=b,c||l.disable(),this},locked:function(){return!j},fireWith:function(a,b){return b=b||[],b=[a,b.slice?b.slice():b],i&&(!d||j)&&(e?j.push(b):k(b)),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!d}};return l},p.extend({Deferred:function(a){var b=[["resolve","done",p.Callbacks("once memory"),"resolved"],["reject","fail",p.Callbacks("once memory"),"rejected"],["notify","progress",p.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return p.Deferred(function(c){p.each(b,function(b,d){var f=d[0],g=a[b];e[d[1]](p.isFunction(g)?function(){var a=g.apply(this,arguments);a&&p.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f+"With"](this===e?c:this,[a])}:c[f])}),a=null}).promise()},promise:function(a){return a!=null?p.extend(a,d):d}},e={};return d.pipe=d.then,p.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[a^1][2].disable,b[2][2].lock),e[f[0]]=g.fire,e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=k.call(arguments),d=c.length,e=d!==1||a&&p.isFunction(a.promise)?d:0,f=e===1?a:p.Deferred(),g=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?k.call(arguments):d,c===h?f.notifyWith(b,c):--e||f.resolveWith(b,c)}},h,i,j;if(d>1){h=new Array(d),i=new Array(d),j=new Array(d);for(;b<d;b++)c[b]&&p.isFunction(c[b].promise)?c[b].promise().done(g(b,j,c)).fail(f.reject).progress(g(b,i,h)):--e}return e||f.resolveWith(j,c),f.promise()}}),p.support=function(){var b,c,d,f,g,h,i,j,k,l,m,n=e.createElement("div");n.setAttribute("className","t"),n.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",c=n.getElementsByTagName("*"),d=n.getElementsByTagName("a")[0],d.style.cssText="top:1px;float:left;opacity:.5";if(!c||!c.length)return{};f=e.createElement("select"),g=f.appendChild(e.createElement("option")),h=n.getElementsByTagName("input")[0],b={leadingWhitespace:n.firstChild.nodeType===3,tbody:!n.getElementsByTagName("tbody").length,htmlSerialize:!!n.getElementsByTagName("link").length,style:/top/.test(d.getAttribute("style")),hrefNormalized:d.getAttribute("href")==="/a",opacity:/^0.5/.test(d.style.opacity),cssFloat:!!d.style.cssFloat,checkOn:h.value==="on",optSelected:g.selected,getSetAttribute:n.className!=="t",enctype:!!e.createElement("form").enctype,html5Clone:e.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:e.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},h.checked=!0,b.noCloneChecked=h.cloneNode(!0).checked,f.disabled=!0,b.optDisabled=!g.disabled;try{delete n.test}catch(o){b.deleteExpando=!1}!n.addEventListener&&n.attachEvent&&n.fireEvent&&(n.attachEvent("onclick",m=function(){b.noCloneEvent=!1}),n.cloneNode(!0).fireEvent("onclick"),n.detachEvent("onclick",m)),h=e.createElement("input"),h.value="t",h.setAttribute("type","radio"),b.radioValue=h.value==="t",h.setAttribute("checked","checked"),h.setAttribute("name","t"),n.appendChild(h),i=e.createDocumentFragment(),i.appendChild(n.lastChild),b.checkClone=i.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=h.checked,i.removeChild(h),i.appendChild(n);if(n.attachEvent)for(k in{submit:!0,change:!0,focusin:!0})j="on"+k,l=j in n,l||(n.setAttribute(j,"return;"),l=typeof n[j]=="function"),b[k+"Bubbles"]=l;return p(function(){var c,d,f,g,h="padding:0;margin:0;border:0;display:block;overflow:hidden;",i=e.getElementsByTagName("body")[0];if(!i)return;c=e.createElement("div"),c.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",i.insertBefore(c,i.firstChild),d=e.createElement("div"),c.appendChild(d),d.innerHTML="<table><tr><td></td><td>t</td></tr></table>",f=d.getElementsByTagName("td"),f[0].style.cssText="padding:0;margin:0;border:0;display:none",l=f[0].offsetHeight===0,f[0].style.display="",f[1].style.display="none",b.reliableHiddenOffsets=l&&f[0].offsetHeight===0,d.innerHTML="",d.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",b.boxSizing=d.offsetWidth===4,b.doesNotIncludeMarginInBodyOffset=i.offsetTop!==1,a.getComputedStyle&&(b.pixelPosition=(a.getComputedStyle(d,null)||{}).top!=="1%",b.boxSizingReliable=(a.getComputedStyle(d,null)||{width:"4px"}).width==="4px",g=e.createElement("div"),g.style.cssText=d.style.cssText=h,g.style.marginRight=g.style.width="0",d.style.width="1px",d.appendChild(g),b.reliableMarginRight=!parseFloat((a.getComputedStyle(g,null)||{}).marginRight)),typeof d.style.zoom!="undefined"&&(d.innerHTML="",d.style.cssText=h+"width:1px;padding:1px;display:inline;zoom:1",b.inlineBlockNeedsLayout=d.offsetWidth===3,d.style.display="block",d.style.overflow="visible",d.innerHTML="<div></div>",d.firstChild.style.width="5px",b.shrinkWrapBlocks=d.offsetWidth!==3,c.style.zoom=1),i.removeChild(c),c=d=f=g=null}),i.removeChild(n),c=d=f=g=h=i=n=null,b}();var H=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,I=/([A-Z])/g;p.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(p.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){return a=a.nodeType?p.cache[a[p.expando]]:a[p.expando],!!a&&!K(a)},data:function(a,c,d,e){if(!p.acceptData(a))return;var f,g,h=p.expando,i=typeof c=="string",j=a.nodeType,k=j?p.cache:a,l=j?a[h]:a[h]&&h;if((!l||!k[l]||!e&&!k[l].data)&&i&&d===b)return;l||(j?a[h]=l=p.deletedIds.pop()||p.guid++:l=h),k[l]||(k[l]={},j||(k[l].toJSON=p.noop));if(typeof c=="object"||typeof c=="function")e?k[l]=p.extend(k[l],c):k[l].data=p.extend(k[l].data,c);return f=k[l],e||(f.data||(f.data={}),f=f.data),d!==b&&(f[p.camelCase(c)]=d),i?(g=f[c],g==null&&(g=f[p.camelCase(c)])):g=f,g},removeData:function(a,b,c){if(!p.acceptData(a))return;var d,e,f,g=a.nodeType,h=g?p.cache:a,i=g?a[p.expando]:p.expando;if(!h[i])return;if(b){d=c?h[i]:h[i].data;if(d){p.isArray(b)||(b in d?b=[b]:(b=p.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,f=b.length;e<f;e++)delete d[b[e]];if(!(c?K:p.isEmptyObject)(d))return}}if(!c){delete h[i].data;if(!K(h[i]))return}g?p.cleanData([a],!0):p.support.deleteExpando||h!=h.window?delete h[i]:h[i]=null},_data:function(a,b,c){return p.data(a,b,c,!0)},acceptData:function(a){var b=a.nodeName&&p.noData[a.nodeName.toLowerCase()];return!b||b!==!0&&a.getAttribute("classid")===b}}),p.fn.extend({data:function(a,c){var d,e,f,g,h,i=this[0],j=0,k=null;if(a===b){if(this.length){k=p.data(i);if(i.nodeType===1&&!p._data(i,"parsedAttrs")){f=i.attributes;for(h=f.length;j<h;j++)g=f[j].name,g.indexOf("data-")||(g=p.camelCase(g.substring(5)),J(i,g,k[g]));p._data(i,"parsedAttrs",!0)}}return k}return typeof a=="object"?this.each(function(){p.data(this,a)}):(d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!",p.access(this,function(c){if(c===b)return k=this.triggerHandler("getData"+e,[d[0]]),k===b&&i&&(k=p.data(i,a),k=J(i,a,k)),k===b&&d[1]?this.data(d[0]):k;d[1]=c,this.each(function(){var b=p(this);b.triggerHandler("setData"+e,d),p.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1))},removeData:function(a){return this.each(function(){p.removeData(this,a)})}}),p.extend({queue:function(a,b,c){var d;if(a)return b=(b||"fx")+"queue",d=p._data(a,b),c&&(!d||p.isArray(c)?d=p._data(a,b,p.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||"fx";var c=p.queue(a,b),d=c.length,e=c.shift(),f=p._queueHooks(a,b),g=function(){p.dequeue(a,b)};e==="inprogress"&&(e=c.shift(),d--),e&&(b==="fx"&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return p._data(a,c)||p._data(a,c,{empty:p.Callbacks("once memory").add(function(){p.removeData(a,b+"queue",!0),p.removeData(a,c,!0)})})}}),p.fn.extend({queue:function(a,c){var d=2;return typeof a!="string"&&(c=a,a="fx",d--),arguments.length<d?p.queue(this[0],a):c===b?this:this.each(function(){var b=p.queue(this,a,c);p._queueHooks(this,a),a==="fx"&&b[0]!=="inprogress"&&p.dequeue(this,a)})},dequeue:function(a){return this.each(function(){p.dequeue(this,a)})},delay:function(a,b){return a=p.fx?p.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){var d,e=1,f=p.Deferred(),g=this,h=this.length,i=function(){--e||f.resolveWith(g,[g])};typeof a!="string"&&(c=a,a=b),a=a||"fx";while(h--)d=p._data(g[h],a+"queueHooks"),d&&d.empty&&(e++,d.empty.add(i));return i(),f.promise(c)}});var L,M,N,O=/[\t\r\n]/g,P=/\r/g,Q=/^(?:button|input)$/i,R=/^(?:button|input|object|select|textarea)$/i,S=/^a(?:rea|)$/i,T=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,U=p.support.getSetAttribute;p.fn.extend({attr:function(a,b){return p.access(this,p.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){p.removeAttr(this,a)})},prop:function(a,b){return p.access(this,p.prop,a,b,arguments.length>1)},removeProp:function(a){return a=p.propFix[a]||a,this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,f,g,h;if(p.isFunction(a))return this.each(function(b){p(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(s);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{f=" "+e.className+" ";for(g=0,h=b.length;g<h;g++)f.indexOf(" "+b[g]+" ")<0&&(f+=b[g]+" ");e.className=p.trim(f)}}}return this},removeClass:function(a){var c,d,e,f,g,h,i;if(p.isFunction(a))return this.each(function(b){p(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(s);for(h=0,i=this.length;h<i;h++){e=this[h];if(e.nodeType===1&&e.className){d=(" "+e.className+" ").replace(O," ");for(f=0,g=c.length;f<g;f++)while(d.indexOf(" "+c[f]+" ")>=0)d=d.replace(" "+c[f]+" "," ");e.className=a?p.trim(d):""}}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";return p.isFunction(a)?this.each(function(c){p(this).toggleClass(a.call(this,c,this.className,b),b)}):this.each(function(){if(c==="string"){var e,f=0,g=p(this),h=b,i=a.split(s);while(e=i[f++])h=d?h:!g.hasClass(e),g[h?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&p._data(this,"__className__",this.className),this.className=this.className||a===!1?"":p._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(O," ").indexOf(b)>=0)return!0;return!1},val:function(a){var c,d,e,f=this[0];if(!arguments.length){if(f)return c=p.valHooks[f.type]||p.valHooks[f.nodeName.toLowerCase()],c&&"get"in c&&(d=c.get(f,"value"))!==b?d:(d=f.value,typeof d=="string"?d.replace(P,""):d==null?"":d);return}return e=p.isFunction(a),this.each(function(d){var f,g=p(this);if(this.nodeType!==1)return;e?f=a.call(this,d,g.val()):f=a,f==null?f="":typeof f=="number"?f+="":p.isArray(f)&&(f=p.map(f,function(a){return a==null?"":a+""})),c=p.valHooks[this.type]||p.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,f,"value")===b)this.value=f})}}),p.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,f=a.selectedIndex,g=[],h=a.options,i=a.type==="select-one";if(f<0)return null;c=i?f:0,d=i?f+1:h.length;for(;c<d;c++){e=h[c];if(e.selected&&(p.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!p.nodeName(e.parentNode,"optgroup"))){b=p(e).val();if(i)return b;g.push(b)}}return i&&!g.length&&h.length?p(h[f]).val():g},set:function(a,b){var c=p.makeArray(b);return p(a).find("option").each(function(){this.selected=p.inArray(p(this).val(),c)>=0}),c.length||(a.selectedIndex=-1),c}}},attrFn:{},attr:function(a,c,d,e){var f,g,h,i=a.nodeType;if(!a||i===3||i===8||i===2)return;if(e&&p.isFunction(p.fn[c]))return p(a)[c](d);if(typeof a.getAttribute=="undefined")return p.prop(a,c,d);h=i!==1||!p.isXMLDoc(a),h&&(c=c.toLowerCase(),g=p.attrHooks[c]||(T.test(c)?M:L));if(d!==b){if(d===null){p.removeAttr(a,c);return}return g&&"set"in g&&h&&(f=g.set(a,d,c))!==b?f:(a.setAttribute(c,d+""),d)}return g&&"get"in g&&h&&(f=g.get(a,c))!==null?f:(f=a.getAttribute(c),f===null?b:f)},removeAttr:function(a,b){var c,d,e,f,g=0;if(b&&a.nodeType===1){d=b.split(s);for(;g<d.length;g++)e=d[g],e&&(c=p.propFix[e]||e,f=T.test(e),f||p.attr(a,e,""),a.removeAttribute(U?e:c),f&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(Q.test(a.nodeName)&&a.parentNode)p.error("type property can't be changed");else if(!p.support.radioValue&&b==="radio"&&p.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}},value:{get:function(a,b){return L&&p.nodeName(a,"button")?L.get(a,b):b in a?a.value:null},set:function(a,b,c){if(L&&p.nodeName(a,"button"))return L.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,f,g,h=a.nodeType;if(!a||h===3||h===8||h===2)return;return g=h!==1||!p.isXMLDoc(a),g&&(c=p.propFix[c]||c,f=p.propHooks[c]),d!==b?f&&"set"in f&&(e=f.set(a,d,c))!==b?e:a[c]=d:f&&"get"in f&&(e=f.get(a,c))!==null?e:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):R.test(a.nodeName)||S.test(a.nodeName)&&a.href?0:b}}}}),M={get:function(a,c){var d,e=p.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;return b===!1?p.removeAttr(a,c):(d=p.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase())),c}},U||(N={name:!0,id:!0,coords:!0},L=p.valHooks.button={get:function(a,c){var d;return d=a.getAttributeNode(c),d&&(N[c]?d.value!=="":d.specified)?d.value:b},set:function(a,b,c){var d=a.getAttributeNode(c);return d||(d=e.createAttribute(c),a.setAttributeNode(d)),d.value=b+""}},p.each(["width","height"],function(a,b){p.attrHooks[b]=p.extend(p.attrHooks[b],{set:function(a,c){if(c==="")return a.setAttribute(b,"auto"),c}})}),p.attrHooks.contenteditable={get:L.get,set:function(a,b,c){b===""&&(b="false"),L.set(a,b,c)}}),p.support.hrefNormalized||p.each(["href","src","width","height"],function(a,c){p.attrHooks[c]=p.extend(p.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),p.support.style||(p.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=b+""}}),p.support.optSelected||(p.propHooks.selected=p.extend(p.propHooks.selected,{get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}})),p.support.enctype||(p.propFix.enctype="encoding"),p.support.checkOn||p.each(["radio","checkbox"],function(){p.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),p.each(["radio","checkbox"],function(){p.valHooks[this]=p.extend(p.valHooks[this],{set:function(a,b){if(p.isArray(b))return a.checked=p.inArray(p(a).val(),b)>=0}})});var V=/^(?:textarea|input|select)$/i,W=/^([^\.]*|)(?:\.(.+)|)$/,X=/(?:^|\s)hover(\.\S+|)\b/,Y=/^key/,Z=/^(?:mouse|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=function(a){return p.event.special.hover?a:a.replace(X,"mouseenter$1 mouseleave$1")};p.event={add:function(a,c,d,e,f){var g,h,i,j,k,l,m,n,o,q,r;if(a.nodeType===3||a.nodeType===8||!c||!d||!(g=p._data(a)))return;d.handler&&(o=d,d=o.handler,f=o.selector),d.guid||(d.guid=p.guid++),i=g.events,i||(g.events=i={}),h=g.handle,h||(g.handle=h=function(a){return typeof p!="undefined"&&(!a||p.event.triggered!==a.type)?p.event.dispatch.apply(h.elem,arguments):b},h.elem=a),c=p.trim(_(c)).split(" ");for(j=0;j<c.length;j++){k=W.exec(c[j])||[],l=k[1],m=(k[2]||"").split(".").sort(),r=p.event.special[l]||{},l=(f?r.delegateType:r.bindType)||l,r=p.event.special[l]||{},n=p.extend({type:l,origType:k[1],data:e,handler:d,guid:d.guid,selector:f,needsContext:f&&p.expr.match.needsContext.test(f),namespace:m.join(".")},o),q=i[l];if(!q){q=i[l]=[],q.delegateCount=0;if(!r.setup||r.setup.call(a,e,m,h)===!1)a.addEventListener?a.addEventListener(l,h,!1):a.attachEvent&&a.attachEvent("on"+l,h)}r.add&&(r.add.call(a,n),n.handler.guid||(n.handler.guid=d.guid)),f?q.splice(q.delegateCount++,0,n):q.push(n),p.event.global[l]=!0}a=null},global:{},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,q,r=p.hasData(a)&&p._data(a);if(!r||!(m=r.events))return;b=p.trim(_(b||"")).split(" ");for(f=0;f<b.length;f++){g=W.exec(b[f])||[],h=i=g[1],j=g[2];if(!h){for(h in m)p.event.remove(a,h+b[f],c,d,!0);continue}n=p.event.special[h]||{},h=(d?n.delegateType:n.bindType)||h,o=m[h]||[],k=o.length,j=j?new RegExp("(^|\\.)"+j.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(l=0;l<o.length;l++)q=o[l],(e||i===q.origType)&&(!c||c.guid===q.guid)&&(!j||j.test(q.namespace))&&(!d||d===q.selector||d==="**"&&q.selector)&&(o.splice(l--,1),q.selector&&o.delegateCount--,n.remove&&n.remove.call(a,q));o.length===0&&k!==o.length&&((!n.teardown||n.teardown.call(a,j,r.handle)===!1)&&p.removeEvent(a,h,r.handle),delete m[h])}p.isEmptyObject(m)&&(delete r.handle,p.removeData(a,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,f,g){if(!f||f.nodeType!==3&&f.nodeType!==8){var h,i,j,k,l,m,n,o,q,r,s=c.type||c,t=[];if($.test(s+p.event.triggered))return;s.indexOf("!")>=0&&(s=s.slice(0,-1),i=!0),s.indexOf(".")>=0&&(t=s.split("."),s=t.shift(),t.sort());if((!f||p.event.customEvent[s])&&!p.event.global[s])return;c=typeof c=="object"?c[p.expando]?c:new p.Event(s,c):new p.Event(s),c.type=s,c.isTrigger=!0,c.exclusive=i,c.namespace=t.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+t.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,m=s.indexOf(":")<0?"on"+s:"";if(!f){h=p.cache;for(j in h)h[j].events&&h[j].events[s]&&p.event.trigger(c,d,h[j].handle.elem,!0);return}c.result=b,c.target||(c.target=f),d=d!=null?p.makeArray(d):[],d.unshift(c),n=p.event.special[s]||{};if(n.trigger&&n.trigger.apply(f,d)===!1)return;q=[[f,n.bindType||s]];if(!g&&!n.noBubble&&!p.isWindow(f)){r=n.delegateType||s,k=$.test(r+s)?f:f.parentNode;for(l=f;k;k=k.parentNode)q.push([k,r]),l=k;l===(f.ownerDocument||e)&&q.push([l.defaultView||l.parentWindow||a,r])}for(j=0;j<q.length&&!c.isPropagationStopped();j++)k=q[j][0],c.type=q[j][1],o=(p._data(k,"events")||{})[c.type]&&p._data(k,"handle"),o&&o.apply(k,d),o=m&&k[m],o&&p.acceptData(k)&&o.apply&&o.apply(k,d)===!1&&c.preventDefault();return c.type=s,!g&&!c.isDefaultPrevented()&&(!n._default||n._default.apply(f.ownerDocument,d)===!1)&&(s!=="click"||!p.nodeName(f,"a"))&&p.acceptData(f)&&m&&f[s]&&(s!=="focus"&&s!=="blur"||c.target.offsetWidth!==0)&&!p.isWindow(f)&&(l=f[m],l&&(f[m]=null),p.event.triggered=s,f[s](),p.event.triggered=b,l&&(f[m]=l)),c.result}return},dispatch:function(c){c=p.event.fix(c||a.event);var d,e,f,g,h,i,j,l,m,n,o=(p._data(this,"events")||{})[c.type]||[],q=o.delegateCount,r=k.call(arguments),s=!c.exclusive&&!c.namespace,t=p.event.special[c.type]||{},u=[];r[0]=c,c.delegateTarget=this;if(t.preDispatch&&t.preDispatch.call(this,c)===!1)return;if(q&&(!c.button||c.type!=="click"))for(f=c.target;f!=this;f=f.parentNode||this)if(f.disabled!==!0||c.type!=="click"){h={},j=[];for(d=0;d<q;d++)l=o[d],m=l.selector,h[m]===b&&(h[m]=l.needsContext?p(m,this).index(f)>=0:p.find(m,this,null,[f]).length),h[m]&&j.push(l);j.length&&u.push({elem:f,matches:j})}o.length>q&&u.push({elem:this,matches:o.slice(q)});for(d=0;d<u.length&&!c.isPropagationStopped();d++){i=u[d],c.currentTarget=i.elem;for(e=0;e<i.matches.length&&!c.isImmediatePropagationStopped();e++){l=i.matches[e];if(s||!c.namespace&&!l.namespace||c.namespace_re&&c.namespace_re.test(l.namespace))c.data=l.data,c.handleObj=l,g=((p.event.special[l.origType]||{}).handle||l.handler).apply(i.elem,r),g!==b&&(c.result=g,g===!1&&(c.preventDefault(),c.stopPropagation()))}}return t.postDispatch&&t.postDispatch.call(this,c),c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,c){var d,f,g,h=c.button,i=c.fromElement;return a.pageX==null&&c.clientX!=null&&(d=a.target.ownerDocument||e,f=d.documentElement,g=d.body,a.pageX=c.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=c.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?c.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0),a}},fix:function(a){if(a[p.expando])return a;var b,c,d=a,f=p.event.fixHooks[a.type]||{},g=f.props?this.props.concat(f.props):this.props;a=p.Event(d);for(b=g.length;b;)c=g[--b],a[c]=d[c];return a.target||(a.target=d.srcElement||e),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,f.filter?f.filter(a,d):a},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){p.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=p.extend(new p.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?p.event.trigger(e,null,b):p.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},p.event.handle=p.event.dispatch,p.removeEvent=e.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]=="undefined"&&(a[d]=null),a.detachEvent(d,c))},p.Event=function(a,b){if(this instanceof p.Event)a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?bb:ba):this.type=a,b&&p.extend(this,b),this.timeStamp=a&&a.timeStamp||p.now(),this[p.expando]=!0;else return new p.Event(a,b)},p.Event.prototype={preventDefault:function(){this.isDefaultPrevented=bb;var a=this.originalEvent;if(!a)return;a.preventDefault?a.preventDefault():a.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=bb;var a=this.originalEvent;if(!a)return;a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()},isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba},p.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){p.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj,g=f.selector;if(!e||e!==d&&!p.contains(d,e))a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b;return c}}}),p.support.submitBubbles||(p.event.special.submit={setup:function(){if(p.nodeName(this,"form"))return!1;p.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=p.nodeName(c,"input")||p.nodeName(c,"button")?c.form:b;d&&!p._data(d,"_submit_attached")&&(p.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),p._data(d,"_submit_attached",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&p.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(p.nodeName(this,"form"))return!1;p.event.remove(this,"._submit")}}),p.support.changeBubbles||(p.event.special.change={setup:function(){if(V.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")p.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),p.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),p.event.simulate("change",this,a,!0)});return!1}p.event.add(this,"beforeactivate._change",function(a){var b=a.target;V.test(b.nodeName)&&!p._data(b,"_change_attached")&&(p.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&p.event.simulate("change",this.parentNode,a,!0)}),p._data(b,"_change_attached",!0))})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){return p.event.remove(this,"._change"),!V.test(this.nodeName)}}),p.support.focusinBubbles||p.each({focus:"focusin",blur:"focusout"},function(a,b){var c=0,d=function(a){p.event.simulate(b,a.target,p.event.fix(a),!0)};p.event.special[b]={setup:function(){c++===0&&e.addEventListener(a,d,!0)},teardown:function(){--c===0&&e.removeEventListener(a,d,!0)}}}),p.fn.extend({on:function(a,c,d,e,f){var g,h;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(h in a)this.on(h,c,d,a[h],f);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=ba;else if(!e)return this;return f===1&&(g=e,e=function(a){return p().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=p.guid++)),this.each(function(){p.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){var e,f;if(a&&a.preventDefault&&a.handleObj)return e=a.handleObj,p(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler),this;if(typeof a=="object"){for(f in a)this.off(f,c,a[f]);return this}if(c===!1||typeof c=="function")d=c,c=b;return d===!1&&(d=ba),this.each(function(){p.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){return p(this.context).on(a,this.selector,b,c),this},die:function(a,b){return p(this.context).off(a,this.selector||"**",b),this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length===1?this.off(a,"**"):this.off(b,a||"**",c)},trigger:function(a,b){return this.each(function(){p.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return p.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||p.guid++,d=0,e=function(c){var e=(p._data(this,"lastToggle"+a.guid)||0)%d;return p._data(this,"lastToggle"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),p.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){p.fn[b]=function(a,c){return c==null&&(c=a,a=null),arguments.length>0?this.on(b,null,a,c):this.trigger(b)},Y.test(b)&&(p.event.fixHooks[b]=p.event.keyHooks),Z.test(b)&&(p.event.fixHooks[b]=p.event.mouseHooks)}),function(a,b){function bc(a,b,c,d){c=c||[],b=b||r;var e,f,i,j,k=b.nodeType;if(!a||typeof a!="string")return c;if(k!==1&&k!==9)return[];i=g(b);if(!i&&!d)if(e=P.exec(a))if(j=e[1]){if(k===9){f=b.getElementById(j);if(!f||!f.parentNode)return c;if(f.id===j)return c.push(f),c}else if(b.ownerDocument&&(f=b.ownerDocument.getElementById(j))&&h(b,f)&&f.id===j)return c.push(f),c}else{if(e[2])return w.apply(c,x.call(b.getElementsByTagName(a),0)),c;if((j=e[3])&&_&&b.getElementsByClassName)return w.apply(c,x.call(b.getElementsByClassName(j),0)),c}return bp(a.replace(L,"$1"),b,c,d,i)}function bd(a){return function(b){var c=b.nodeName.toLowerCase();return c==="input"&&b.type===a}}function be(a){return function(b){var c=b.nodeName.toLowerCase();return(c==="input"||c==="button")&&b.type===a}}function bf(a){return z(function(b){return b=+b,z(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function bg(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}function bh(a,b){var c,d,f,g,h,i,j,k=C[o][a];if(k)return b?0:k.slice(0);h=a,i=[],j=e.preFilter;while(h){if(!c||(d=M.exec(h)))d&&(h=h.slice(d[0].length)),i.push(f=[]);c=!1;if(d=N.exec(h))f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=d[0].replace(L," ");for(g in e.filter)(d=W[g].exec(h))&&(!j[g]||(d=j[g](d,r,!0)))&&(f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=g,c.matches=d);if(!c)break}return b?h.length:h?bc.error(a):C(a,i).slice(0)}function bi(a,b,d){var e=b.dir,f=d&&b.dir==="parentNode",g=u++;return b.first?function(b,c,d){while(b=b[e])if(f||b.nodeType===1)return a(b,c,d)}:function(b,d,h){if(!h){var i,j=t+" "+g+" ",k=j+c;while(b=b[e])if(f||b.nodeType===1){if((i=b[o])===k)return b.sizset;if(typeof i=="string"&&i.indexOf(j)===0){if(b.sizset)return b}else{b[o]=k;if(a(b,d,h))return b.sizset=!0,b;b.sizset=!1}}}else while(b=b[e])if(f||b.nodeType===1)if(a(b,d,h))return b}}function bj(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function bk(a,b,c,d,e){var f,g=[],h=0,i=a.length,j=b!=null;for(;h<i;h++)if(f=a[h])if(!c||c(f,d,e))g.push(f),j&&b.push(h);return g}function bl(a,b,c,d,e,f){return d&&!d[o]&&(d=bl(d)),e&&!e[o]&&(e=bl(e,f)),z(function(f,g,h,i){if(f&&e)return;var j,k,l,m=[],n=[],o=g.length,p=f||bo(b||"*",h.nodeType?[h]:h,[],f),q=a&&(f||!b)?bk(p,m,a,h,i):p,r=c?e||(f?a:o||d)?[]:g:q;c&&c(q,r,h,i);if(d){l=bk(r,n),d(l,[],h,i),j=l.length;while(j--)if(k=l[j])r[n[j]]=!(q[n[j]]=k)}if(f){j=a&&r.length;while(j--)if(k=r[j])f[m[j]]=!(g[m[j]]=k)}else r=bk(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):w.apply(g,r)})}function bm(a){var b,c,d,f=a.length,g=e.relative[a[0].type],h=g||e.relative[" "],i=g?1:0,j=bi(function(a){return a===b},h,!0),k=bi(function(a){return y.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==l)||((b=c).nodeType?j(a,c,d):k(a,c,d))}];for(;i<f;i++)if(c=e.relative[a[i].type])m=[bi(bj(m),c)];else{c=e.filter[a[i].type].apply(null,a[i].matches);if(c[o]){d=++i;for(;d<f;d++)if(e.relative[a[d].type])break;return bl(i>1&&bj(m),i>1&&a.slice(0,i-1).join("").replace(L,"$1"),c,i<d&&bm(a.slice(i,d)),d<f&&bm(a=a.slice(d)),d<f&&a.join(""))}m.push(c)}return bj(m)}function bn(a,b){var d=b.length>0,f=a.length>0,g=function(h,i,j,k,m){var n,o,p,q=[],s=0,u="0",x=h&&[],y=m!=null,z=l,A=h||f&&e.find.TAG("*",m&&i.parentNode||i),B=t+=z==null?1:Math.E;y&&(l=i!==r&&i,c=g.el);for(;(n=A[u])!=null;u++){if(f&&n){for(o=0;p=a[o];o++)if(p(n,i,j)){k.push(n);break}y&&(t=B,c=++g.el)}d&&((n=!p&&n)&&s--,h&&x.push(n))}s+=u;if(d&&u!==s){for(o=0;p=b[o];o++)p(x,q,i,j);if(h){if(s>0)while(u--)!x[u]&&!q[u]&&(q[u]=v.call(k));q=bk(q)}w.apply(k,q),y&&!h&&q.length>0&&s+b.length>1&&bc.uniqueSort(k)}return y&&(t=B,l=z),x};return g.el=0,d?z(g):g}function bo(a,b,c,d){var e=0,f=b.length;for(;e<f;e++)bc(a,b[e],c,d);return c}function bp(a,b,c,d,f){var g,h,j,k,l,m=bh(a),n=m.length;if(!d&&m.length===1){h=m[0]=m[0].slice(0);if(h.length>2&&(j=h[0]).type==="ID"&&b.nodeType===9&&!f&&e.relative[h[1].type]){b=e.find.ID(j.matches[0].replace(V,""),b,f)[0];if(!b)return c;a=a.slice(h.shift().length)}for(g=W.POS.test(a)?-1:h.length-1;g>=0;g--){j=h[g];if(e.relative[k=j.type])break;if(l=e.find[k])if(d=l(j.matches[0].replace(V,""),R.test(h[0].type)&&b.parentNode||b,f)){h.splice(g,1),a=d.length&&h.join("");if(!a)return w.apply(c,x.call(d,0)),c;break}}}return i(a,m)(d,b,f,c,R.test(a)),c}function bq(){}var c,d,e,f,g,h,i,j,k,l,m=!0,n="undefined",o=("sizcache"+Math.random()).replace(".",""),q=String,r=a.document,s=r.documentElement,t=0,u=0,v=[].pop,w=[].push,x=[].slice,y=[].indexOf||function(a){var b=0,c=this.length;for(;b<c;b++)if(this[b]===a)return b;return-1},z=function(a,b){return a[o]=b==null||b,a},A=function(){var a={},b=[];return z(function(c,d){return b.push(c)>e.cacheLength&&delete a[b.shift()],a[c]=d},a)},B=A(),C=A(),D=A(),E="[\\x20\\t\\r\\n\\f]",F="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",G=F.replace("w","w#"),H="([*^$|!~]?=)",I="\\["+E+"*("+F+")"+E+"*(?:"+H+E+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+G+")|)|)"+E+"*\\]",J=":("+F+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+I+")|[^:]|\\\\.)*|.*))\\)|)",K=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+E+"*((?:-\\d)?\\d*)"+E+"*\\)|)(?=[^-]|$)",L=new RegExp("^"+E+"+|((?:^|[^\\\\])(?:\\\\.)*)"+E+"+$","g"),M=new RegExp("^"+E+"*,"+E+"*"),N=new RegExp("^"+E+"*([\\x20\\t\\r\\n\\f>+~])"+E+"*"),O=new RegExp(J),P=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,Q=/^:not/,R=/[\x20\t\r\n\f]*[+~]/,S=/:not\($/,T=/h\d/i,U=/input|select|textarea|button/i,V=/\\(?!\\)/g,W={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),NAME:new RegExp("^\\[name=['\"]?("+F+")['\"]?\\]"),TAG:new RegExp("^("+F.replace("w","w*")+")"),ATTR:new RegExp("^"+I),PSEUDO:new RegExp("^"+J),POS:new RegExp(K,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+E+"*(even|odd|(([+-]|)(\\d*)n|)"+E+"*(?:([+-]|)"+E+"*(\\d+)|))"+E+"*\\)|)","i"),needsContext:new RegExp("^"+E+"*[>+~]|"+K,"i")},X=function(a){var b=r.createElement("div");try{return a(b)}catch(c){return!1}finally{b=null}},Y=X(function(a){return a.appendChild(r.createComment("")),!a.getElementsByTagName("*").length}),Z=X(function(a){return a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!==n&&a.firstChild.getAttribute("href")==="#"}),$=X(function(a){a.innerHTML="<select></select>";var b=typeof a.lastChild.getAttribute("multiple");return b!=="boolean"&&b!=="string"}),_=X(function(a){return a.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!a.getElementsByClassName||!a.getElementsByClassName("e").length?!1:(a.lastChild.className="e",a.getElementsByClassName("e").length===2)}),ba=X(function(a){a.id=o+0,a.innerHTML="<a name='"+o+"'></a><div name='"+o+"'></div>",s.insertBefore(a,s.firstChild);var b=r.getElementsByName&&r.getElementsByName(o).length===2+r.getElementsByName(o+0).length;return d=!r.getElementById(o),s.removeChild(a),b});try{x.call(s.childNodes,0)[0].nodeType}catch(bb){x=function(a){var b,c=[];for(;b=this[a];a++)c.push(b);return c}}bc.matches=function(a,b){return bc(a,null,null,b)},bc.matchesSelector=function(a,b){return bc(b,null,null,[a]).length>0},f=bc.getText=function(a){var b,c="",d=0,e=a.nodeType;if(e){if(e===1||e===9||e===11){if(typeof a.textContent=="string")return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=f(a)}else if(e===3||e===4)return a.nodeValue}else for(;b=a[d];d++)c+=f(b);return c},g=bc.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!=="HTML":!1},h=bc.contains=s.contains?function(a,b){var c=a.nodeType===9?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&d.nodeType===1&&c.contains&&c.contains(d))}:s.compareDocumentPosition?function(a,b){return b&&!!(a.compareDocumentPosition(b)&16)}:function(a,b){while(b=b.parentNode)if(b===a)return!0;return!1},bc.attr=function(a,b){var c,d=g(a);return d||(b=b.toLowerCase()),(c=e.attrHandle[b])?c(a):d||$?a.getAttribute(b):(c=a.getAttributeNode(b),c?typeof a[b]=="boolean"?a[b]?b:null:c.specified?c.value:null:null)},e=bc.selectors={cacheLength:50,createPseudo:z,match:W,attrHandle:Z?{}:{href:function(a){return a.getAttribute("href",2)},type:function(a){return a.getAttribute("type")}},find:{ID:d?function(a,b,c){if(typeof b.getElementById!==n&&!c){var d=b.getElementById(a);return d&&d.parentNode?[d]:[]}}:function(a,c,d){if(typeof c.getElementById!==n&&!d){var e=c.getElementById(a);return e?e.id===a||typeof e.getAttributeNode!==n&&e.getAttributeNode("id").value===a?[e]:b:[]}},TAG:Y?function(a,b){if(typeof b.getElementsByTagName!==n)return b.getElementsByTagName(a)}:function(a,b){var c=b.getElementsByTagName(a);if(a==="*"){var d,e=[],f=0;for(;d=c[f];f++)d.nodeType===1&&e.push(d);return e}return c},NAME:ba&&function(a,b){if(typeof b.getElementsByName!==n)return b.getElementsByName(name)},CLASS:_&&function(a,b,c){if(typeof b.getElementsByClassName!==n&&!c)return b.getElementsByClassName(a)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(V,""),a[3]=(a[4]||a[5]||"").replace(V,""),a[2]==="~="&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),a[1]==="nth"?(a[2]||bc.error(a[0]),a[3]=+(a[3]?a[4]+(a[5]||1):2*(a[2]==="even"||a[2]==="odd")),a[4]=+(a[6]+a[7]||a[2]==="odd")):a[2]&&bc.error(a[0]),a},PSEUDO:function(a){var b,c;if(W.CHILD.test(a[0]))return null;if(a[3])a[2]=a[3];else if(b=a[4])O.test(b)&&(c=bh(b,!0))&&(c=b.indexOf(")",b.length-c)-b.length)&&(b=b.slice(0,c),a[0]=a[0].slice(0,c)),a[2]=b;return a.slice(0,3)}},filter:{ID:d?function(a){return a=a.replace(V,""),function(b){return b.getAttribute("id")===a}}:function(a){return a=a.replace(V,""),function(b){var c=typeof b.getAttributeNode!==n&&b.getAttributeNode("id");return c&&c.value===a}},TAG:function(a){return a==="*"?function(){return!0}:(a=a.replace(V,"").toLowerCase(),function(b){return b.nodeName&&b.nodeName.toLowerCase()===a})},CLASS:function(a){var b=B[o][a];return b||(b=B(a,new RegExp("(^|"+E+")"+a+"("+E+"|$)"))),function(a){return b.test(a.className||typeof a.getAttribute!==n&&a.getAttribute("class")||"")}},ATTR:function(a,b,c){return function(d,e){var f=bc.attr(d,a);return f==null?b==="!=":b?(f+="",b==="="?f===c:b==="!="?f!==c:b==="^="?c&&f.indexOf(c)===0:b==="*="?c&&f.indexOf(c)>-1:b==="$="?c&&f.substr(f.length-c.length)===c:b==="~="?(" "+f+" ").indexOf(c)>-1:b==="|="?f===c||f.substr(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d){return a==="nth"?function(a){var b,e,f=a.parentNode;if(c===1&&d===0)return!0;if(f){e=0;for(b=f.firstChild;b;b=b.nextSibling)if(b.nodeType===1){e++;if(a===b)break}}return e-=d,e===c||e%c===0&&e/c>=0}:function(b){var c=b;switch(a){case"only":case"first":while(c=c.previousSibling)if(c.nodeType===1)return!1;if(a==="first")return!0;c=b;case"last":while(c=c.nextSibling)if(c.nodeType===1)return!1;return!0}}},PSEUDO:function(a,b){var c,d=e.pseudos[a]||e.setFilters[a.toLowerCase()]||bc.error("unsupported pseudo: "+a);return d[o]?d(b):d.length>1?(c=[a,a,"",b],e.setFilters.hasOwnProperty(a.toLowerCase())?z(function(a,c){var e,f=d(a,b),g=f.length;while(g--)e=y.call(a,f[g]),a[e]=!(c[e]=f[g])}):function(a){return d(a,0,c)}):d}},pseudos:{not:z(function(a){var b=[],c=[],d=i(a.replace(L,"$1"));return d[o]?z(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)if(f=g[h])a[h]=!(b[h]=f)}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:z(function(a){return function(b){return bc(a,b).length>0}}),contains:z(function(a){return function(b){return(b.textContent||b.innerText||f(b)).indexOf(a)>-1}}),enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&!!a.checked||b==="option"&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},parent:function(a){return!e.pseudos.empty(a)},empty:function(a){var b;a=a.firstChild;while(a){if(a.nodeName>"@"||(b=a.nodeType)===3||b===4)return!1;a=a.nextSibling}return!0},header:function(a){return T.test(a.nodeName)},text:function(a){var b,c;return a.nodeName.toLowerCase()==="input"&&(b=a.type)==="text"&&((c=a.getAttribute("type"))==null||c.toLowerCase()===b)},radio:bd("radio"),checkbox:bd("checkbox"),file:bd("file"),password:bd("password"),image:bd("image"),submit:be("submit"),reset:be("reset"),button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&a.type==="button"||b==="button"},input:function(a){return U.test(a.nodeName)},focus:function(a){var b=a.ownerDocument;return a===b.activeElement&&(!b.hasFocus||b.hasFocus())&&(!!a.type||!!a.href)},active:function(a){return a===a.ownerDocument.activeElement},first:bf(function(a,b,c){return[0]}),last:bf(function(a,b,c){return[b-1]}),eq:bf(function(a,b,c){return[c<0?c+b:c]}),even:bf(function(a,b,c){for(var d=0;d<b;d+=2)a.push(d);return a}),odd:bf(function(a,b,c){for(var d=1;d<b;d+=2)a.push(d);return a}),lt:bf(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:bf(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},j=s.compareDocumentPosition?function(a,b){return a===b?(k=!0,0):(!a.compareDocumentPosition||!b.compareDocumentPosition?a.compareDocumentPosition:a.compareDocumentPosition(b)&4)?-1:1}:function(a,b){if(a===b)return k=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,h=b.parentNode,i=g;if(g===h)return bg(a,b);if(!g)return-1;if(!h)return 1;while(i)e.unshift(i),i=i.parentNode;i=h;while(i)f.unshift(i),i=i.parentNode;c=e.length,d=f.length;for(var j=0;j<c&&j<d;j++)if(e[j]!==f[j])return bg(e[j],f[j]);return j===c?bg(a,f[j],-1):bg(e[j],b,1)},[0,0].sort(j),m=!k,bc.uniqueSort=function(a){var b,c=1;k=m,a.sort(j);if(k)for(;b=a[c];c++)b===a[c-1]&&a.splice(c--,1);return a},bc.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},i=bc.compile=function(a,b){var c,d=[],e=[],f=D[o][a];if(!f){b||(b=bh(a)),c=b.length;while(c--)f=bm(b[c]),f[o]?d.push(f):e.push(f);f=D(a,bn(e,d))}return f},r.querySelectorAll&&function(){var a,b=bp,c=/'|\\/g,d=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,e=[":focus"],f=[":active",":focus"],h=s.matchesSelector||s.mozMatchesSelector||s.webkitMatchesSelector||s.oMatchesSelector||s.msMatchesSelector;X(function(a){a.innerHTML="<select><option selected=''></option></select>",a.querySelectorAll("[selected]").length||e.push("\\["+E+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),a.querySelectorAll(":checked").length||e.push(":checked")}),X(function(a){a.innerHTML="<p test=''></p>",a.querySelectorAll("[test^='']").length&&e.push("[*^$]="+E+"*(?:\"\"|'')"),a.innerHTML="<input type='hidden'/>",a.querySelectorAll(":enabled").length||e.push(":enabled",":disabled")}),e=new RegExp(e.join("|")),bp=function(a,d,f,g,h){if(!g&&!h&&(!e||!e.test(a))){var i,j,k=!0,l=o,m=d,n=d.nodeType===9&&a;if(d.nodeType===1&&d.nodeName.toLowerCase()!=="object"){i=bh(a),(k=d.getAttribute("id"))?l=k.replace(c,"\\$&"):d.setAttribute("id",l),l="[id='"+l+"'] ",j=i.length;while(j--)i[j]=l+i[j].join("");m=R.test(a)&&d.parentNode||d,n=i.join(",")}if(n)try{return w.apply(f,x.call(m.querySelectorAll(n),0)),f}catch(p){}finally{k||d.removeAttribute("id")}}return b(a,d,f,g,h)},h&&(X(function(b){a=h.call(b,"div");try{h.call(b,"[test!='']:sizzle"),f.push("!=",J)}catch(c){}}),f=new RegExp(f.join("|")),bc.matchesSelector=function(b,c){c=c.replace(d,"='$1']");if(!g(b)&&!f.test(c)&&(!e||!e.test(c)))try{var i=h.call(b,c);if(i||a||b.document&&b.document.nodeType!==11)return i}catch(j){}return bc(c,null,null,[b]).length>0})}(),e.pseudos.nth=e.pseudos.eq,e.filters=bq.prototype=e.pseudos,e.setFilters=new bq,bc.attr=p.attr,p.find=bc,p.expr=bc.selectors,p.expr[":"]=p.expr.pseudos,p.unique=bc.uniqueSort,p.text=bc.getText,p.isXMLDoc=bc.isXML,p.contains=bc.contains}(a);var bc=/Until$/,bd=/^(?:parents|prev(?:Until|All))/,be=/^.[^:#\[\.,]*$/,bf=p.expr.match.needsContext,bg={children:!0,contents:!0,next:!0,prev:!0};p.fn.extend({find:function(a){var b,c,d,e,f,g,h=this;if(typeof a!="string")return p(a).filter(function(){for(b=0,c=h.length;b<c;b++)if(p.contains(h[b],this))return!0});g=this.pushStack("","find",a);for(b=0,c=this.length;b<c;b++){d=g.length,p.find(a,this[b],g);if(b>0)for(e=d;e<g.length;e++)for(f=0;f<d;f++)if(g[f]===g[e]){g.splice(e--,1);break}}return g},has:function(a){var b,c=p(a,this),d=c.length;return this.filter(function(){for(b=0;b<d;b++)if(p.contains(this,c[b]))return!0})},not:function(a){return this.pushStack(bj(this,a,!1),"not",a)},filter:function(a){return this.pushStack(bj(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?bf.test(a)?p(a,this.context).index(this[0])>=0:p.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c,d=0,e=this.length,f=[],g=bf.test(a)||typeof a!="string"?p(a,b||this.context):0;for(;d<e;d++){c=this[d];while(c&&c.ownerDocument&&c!==b&&c.nodeType!==11){if(g?g.index(c)>-1:p.find.matchesSelector(c,a)){f.push(c);break}c=c.parentNode}}return f=f.length>1?p.unique(f):f,this.pushStack(f,"closest",a)},index:function(a){return a?typeof a=="string"?p.inArray(this[0],p(a)):p.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(a,b){var c=typeof a=="string"?p(a,b):p.makeArray(a&&a.nodeType?[a]:a),d=p.merge(this.get(),c);return this.pushStack(bh(c[0])||bh(d[0])?d:p.unique(d))},addBack:function(a){return this.add(a==null?this.prevObject:this.prevObject.filter(a))}}),p.fn.andSelf=p.fn.addBack,p.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return p.dir(a,"parentNode")},parentsUntil:function(a,b,c){return p.dir(a,"parentNode",c)},next:function(a){return bi(a,"nextSibling")},prev:function(a){return bi(a,"previousSibling")},nextAll:function(a){return p.dir(a,"nextSibling")},prevAll:function(a){return p.dir(a,"previousSibling")},nextUntil:function(a,b,c){return p.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return p.dir(a,"previousSibling",c)},siblings:function(a){return p.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return p.sibling(a.firstChild)},contents:function(a){return p.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:p.merge([],a.childNodes)}},function(a,b){p.fn[a]=function(c,d){var e=p.map(this,b,c);return bc.test(a)||(d=c),d&&typeof d=="string"&&(e=p.filter(d,e)),e=this.length>1&&!bg[a]?p.unique(e):e,this.length>1&&bd.test(a)&&(e=e.reverse()),this.pushStack(e,a,k.call(arguments).join(","))}}),p.extend({filter:function(a,b,c){return c&&(a=":not("+a+")"),b.length===1?p.find.matchesSelector(b[0],a)?[b[0]]:[]:p.find.matches(a,b)},dir:function(a,c,d){var e=[],f=a[c];while(f&&f.nodeType!==9&&(d===b||f.nodeType!==1||!p(f).is(d)))f.nodeType===1&&e.push(f),f=f[c];return e},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var bl="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",bm=/ jQuery\d+="(?:null|\d+)"/g,bn=/^\s+/,bo=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bp=/<([\w:]+)/,bq=/<tbody/i,br=/<|&#?\w+;/,bs=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,bu=new RegExp("<(?:"+bl+")[\\s/>]","i"),bv=/^(?:checkbox|radio)$/,bw=/checked\s*(?:[^=]|=\s*.checked.)/i,bx=/\/(java|ecma)script/i,by=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,bz={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bA=bk(e),bB=bA.appendChild(e.createElement("div"));bz.optgroup=bz.option,bz.tbody=bz.tfoot=bz.colgroup=bz.caption=bz.thead,bz.th=bz.td,p.support.htmlSerialize||(bz._default=[1,"X<div>","</div>"]),p.fn.extend({text:function(a){return p.access(this,function(a){return a===b?p.text(this):this.empty().append((this[0]&&this[0].ownerDocument||e).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(p.isFunction(a))return this.each(function(b){p(this).wrapAll(a.call(this,b))});if(this[0]){var b=p(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return p.isFunction(a)?this.each(function(b){p(this).wrapInner(a.call(this,b))}):this.each(function(){var b=p(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=p.isFunction(a);return this.each(function(c){p(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){p.nodeName(this,"body")||p(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(a,this.firstChild)})},before:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(a,this),"before",this.selector)}},after:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(this,a),"after",this.selector)}},remove:function(a,b){var c,d=0;for(;(c=this[d])!=null;d++)if(!a||p.filter(a,[c]).length)!b&&c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),p.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this},empty:function(){var a,b=0;for(;(a=this[b])!=null;b++){a.nodeType===1&&p.cleanData(a.getElementsByTagName("*"));while(a.firstChild)a.removeChild(a.firstChild)}return this},clone:function(a,b){return a=a==null?!1:a,b=b==null?a:b,this.map(function(){return p.clone(this,a,b)})},html:function(a){return p.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(bm,""):b;if(typeof a=="string"&&!bs.test(a)&&(p.support.htmlSerialize||!bu.test(a))&&(p.support.leadingWhitespace||!bn.test(a))&&!bz[(bp.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(bo,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(f){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){return bh(this[0])?this.length?this.pushStack(p(p.isFunction(a)?a():a),"replaceWith",a):this:p.isFunction(a)?this.each(function(b){var c=p(this),d=c.html();c.replaceWith(a.call(this,b,d))}):(typeof a!="string"&&(a=p(a).detach()),this.each(function(){var b=this.nextSibling,c=this.parentNode;p(this).remove(),b?p(b).before(a):p(c).append(a)}))},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){a=[].concat.apply([],a);var e,f,g,h,i=0,j=a[0],k=[],l=this.length;if(!p.support.checkClone&&l>1&&typeof j=="string"&&bw.test(j))return this.each(function(){p(this).domManip(a,c,d)});if(p.isFunction(j))return this.each(function(e){var f=p(this);a[0]=j.call(this,e,c?f.html():b),f.domManip(a,c,d)});if(this[0]){e=p.buildFragment(a,this,k),g=e.fragment,f=g.firstChild,g.childNodes.length===1&&(g=f);if(f){c=c&&p.nodeName(f,"tr");for(h=e.cacheable||l-1;i<l;i++)d.call(c&&p.nodeName(this[i],"table")?bC(this[i],"tbody"):this[i],i===h?g:p.clone(g,!0,!0))}g=f=null,k.length&&p.each(k,function(a,b){b.src?p.ajax?p.ajax({url:b.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):p.error("no ajax"):p.globalEval((b.text||b.textContent||b.innerHTML||"").replace(by,"")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),p.buildFragment=function(a,c,d){var f,g,h,i=a[0];return c=c||e,c=!c.nodeType&&c[0]||c,c=c.ownerDocument||c,a.length===1&&typeof i=="string"&&i.length<512&&c===e&&i.charAt(0)==="<"&&!bt.test(i)&&(p.support.checkClone||!bw.test(i))&&(p.support.html5Clone||!bu.test(i))&&(g=!0,f=p.fragments[i],h=f!==b),f||(f=c.createDocumentFragment(),p.clean(a,c,f,d),g&&(p.fragments[i]=h&&f)),{fragment:f,cacheable:g}},p.fragments={},p.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){p.fn[a]=function(c){var d,e=0,f=[],g=p(c),h=g.length,i=this.length===1&&this[0].parentNode;if((i==null||i&&i.nodeType===11&&i.childNodes.length===1)&&h===1)return g[b](this[0]),this;for(;e<h;e++)d=(e>0?this.clone(!0):this).get(),p(g[e])[b](d),f=f.concat(d);return this.pushStack(f,a,g.selector)}}),p.extend({clone:function(a,b,c){var d,e,f,g;p.support.html5Clone||p.isXMLDoc(a)||!bu.test("<"+a.nodeName+">")?g=a.cloneNode(!0):(bB.innerHTML=a.outerHTML,bB.removeChild(g=bB.firstChild));if((!p.support.noCloneEvent||!p.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!p.isXMLDoc(a)){bE(a,g),d=bF(a),e=bF(g);for(f=0;d[f];++f)e[f]&&bE(d[f],e[f])}if(b){bD(a,g);if(c){d=bF(a),e=bF(g);for(f=0;d[f];++f)bD(d[f],e[f])}}return d=e=null,g},clean:function(a,b,c,d){var f,g,h,i,j,k,l,m,n,o,q,r,s=b===e&&bA,t=[];if(!b||typeof b.createDocumentFragment=="undefined")b=e;for(f=0;(h=a[f])!=null;f++){typeof h=="number"&&(h+="");if(!h)continue;if(typeof h=="string")if(!br.test(h))h=b.createTextNode(h);else{s=s||bk(b),l=b.createElement("div"),s.appendChild(l),h=h.replace(bo,"<$1></$2>"),i=(bp.exec(h)||["",""])[1].toLowerCase(),j=bz[i]||bz._default,k=j[0],l.innerHTML=j[1]+h+j[2];while(k--)l=l.lastChild;if(!p.support.tbody){m=bq.test(h),n=i==="table"&&!m?l.firstChild&&l.firstChild.childNodes:j[1]==="<table>"&&!m?l.childNodes:[];for(g=n.length-1;g>=0;--g)p.nodeName(n[g],"tbody")&&!n[g].childNodes.length&&n[g].parentNode.removeChild(n[g])}!p.support.leadingWhitespace&&bn.test(h)&&l.insertBefore(b.createTextNode(bn.exec(h)[0]),l.firstChild),h=l.childNodes,l.parentNode.removeChild(l)}h.nodeType?t.push(h):p.merge(t,h)}l&&(h=l=s=null);if(!p.support.appendChecked)for(f=0;(h=t[f])!=null;f++)p.nodeName(h,"input")?bG(h):typeof h.getElementsByTagName!="undefined"&&p.grep(h.getElementsByTagName("input"),bG);if(c){q=function(a){if(!a.type||bx.test(a.type))return d?d.push(a.parentNode?a.parentNode.removeChild(a):a):c.appendChild(a)};for(f=0;(h=t[f])!=null;f++)if(!p.nodeName(h,"script")||!q(h))c.appendChild(h),typeof h.getElementsByTagName!="undefined"&&(r=p.grep(p.merge([],h.getElementsByTagName("script")),q),t.splice.apply(t,[f+1,0].concat(r)),f+=r.length)}return t},cleanData:function(a,b){var c,d,e,f,g=0,h=p.expando,i=p.cache,j=p.support.deleteExpando,k=p.event.special;for(;(e=a[g])!=null;g++)if(b||p.acceptData(e)){d=e[h],c=d&&i[d];if(c){if(c.events)for(f in c.events)k[f]?p.event.remove(e,f):p.removeEvent(e,f,c.handle);i[d]&&(delete i[d],j?delete e[h]:e.removeAttribute?e.removeAttribute(h):e[h]=null,p.deletedIds.push(d))}}}}),function(){var a,b;p.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},a=p.uaMatch(g.userAgent),b={},a.browser&&(b[a.browser]=!0,b.version=a.version),b.chrome?b.webkit=!0:b.webkit&&(b.safari=!0),p.browser=b,p.sub=function(){function a(b,c){return new a.fn.init(b,c)}p.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function c(c,d){return d&&d instanceof p&&!(d instanceof a)&&(d=a(d)),p.fn.init.call(this,c,d,b)},a.fn.init.prototype=a.fn;var b=a(e);return a}}();var bH,bI,bJ,bK=/alpha\([^)]*\)/i,bL=/opacity=([^)]*)/,bM=/^(top|right|bottom|left)$/,bN=/^(none|table(?!-c[ea]).+)/,bO=/^margin/,bP=new RegExp("^("+q+")(.*)$","i"),bQ=new RegExp("^("+q+")(?!px)[a-z%]+$","i"),bR=new RegExp("^([-+])=("+q+")","i"),bS={},bT={position:"absolute",visibility:"hidden",display:"block"},bU={letterSpacing:0,fontWeight:400},bV=["Top","Right","Bottom","Left"],bW=["Webkit","O","Moz","ms"],bX=p.fn.toggle;p.fn.extend({css:function(a,c){return p.access(this,function(a,c,d){return d!==b?p.style(a,c,d):p.css(a,c)},a,c,arguments.length>1)},show:function(){return b$(this,!0)},hide:function(){return b$(this)},toggle:function(a,b){var c=typeof a=="boolean";return p.isFunction(a)&&p.isFunction(b)?bX.apply(this,arguments):this.each(function(){(c?a:bZ(this))?p(this).show():p(this).hide()})}}),p.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bH(a,"opacity");return c===""?"1":c}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":p.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!a||a.nodeType===3||a.nodeType===8||!a.style)return;var f,g,h,i=p.camelCase(c),j=a.style;c=p.cssProps[i]||(p.cssProps[i]=bY(j,i)),h=p.cssHooks[c]||p.cssHooks[i];if(d===b)return h&&"get"in h&&(f=h.get(a,!1,e))!==b?f:j[c];g=typeof d,g==="string"&&(f=bR.exec(d))&&(d=(f[1]+1)*f[2]+parseFloat(p.css(a,c)),g="number");if(d==null||g==="number"&&isNaN(d))return;g==="number"&&!p.cssNumber[i]&&(d+="px");if(!h||!("set"in h)||(d=h.set(a,d,e))!==b)try{j[c]=d}catch(k){}},css:function(a,c,d,e){var f,g,h,i=p.camelCase(c);return c=p.cssProps[i]||(p.cssProps[i]=bY(a.style,i)),h=p.cssHooks[c]||p.cssHooks[i],h&&"get"in h&&(f=h.get(a,!0,e)),f===b&&(f=bH(a,c)),f==="normal"&&c in bU&&(f=bU[c]),d||e!==b?(g=parseFloat(f),d||p.isNumeric(g)?g||0:f):f},swap:function(a,b,c){var d,e,f={};for(e in b)f[e]=a.style[e],a.style[e]=b[e];d=c.call(a);for(e in b)a.style[e]=f[e];return d}}),a.getComputedStyle?bH=function(b,c){var d,e,f,g,h=a.getComputedStyle(b,null),i=b.style;return h&&(d=h[c],d===""&&!p.contains(b.ownerDocument,b)&&(d=p.style(b,c)),bQ.test(d)&&bO.test(c)&&(e=i.width,f=i.minWidth,g=i.maxWidth,i.minWidth=i.maxWidth=i.width=d,d=h.width,i.width=e,i.minWidth=f,i.maxWidth=g)),d}:e.documentElement.currentStyle&&(bH=function(a,b){var c,d,e=a.currentStyle&&a.currentStyle[b],f=a.style;return e==null&&f&&f[b]&&(e=f[b]),bQ.test(e)&&!bM.test(b)&&(c=f.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":e,e=f.pixelLeft+"px",f.left=c,d&&(a.runtimeStyle.left=d)),e===""?"auto":e}),p.each(["height","width"],function(a,b){p.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth===0&&bN.test(bH(a,"display"))?p.swap(a,bT,function(){return cb(a,b,d)}):cb(a,b,d)},set:function(a,c,d){return b_(a,c,d?ca(a,b,d,p.support.boxSizing&&p.css(a,"boxSizing")==="border-box"):0)}}}),p.support.opacity||(p.cssHooks.opacity={get:function(a,b){return bL.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=p.isNumeric(b)?"alpha(opacity="+b*100+")":"",f=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&p.trim(f.replace(bK,""))===""&&c.removeAttribute){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bK.test(f)?f.replace(bK,e):f+" "+e}}),p(function(){p.support.reliableMarginRight||(p.cssHooks.marginRight={get:function(a,b){return p.swap(a,{display:"inline-block"},function(){if(b)return bH(a,"marginRight")})}}),!p.support.pixelPosition&&p.fn.position&&p.each(["top","left"],function(a,b){p.cssHooks[b]={get:function(a,c){if(c){var d=bH(a,b);return bQ.test(d)?p(a).position()[b]+"px":d}}}})}),p.expr&&p.expr.filters&&(p.expr.filters.hidden=function(a){return a.offsetWidth===0&&a.offsetHeight===0||!p.support.reliableHiddenOffsets&&(a.style&&a.style.display||bH(a,"display"))==="none"},p.expr.filters.visible=function(a){return!p.expr.filters.hidden(a)}),p.each({margin:"",padding:"",border:"Width"},function(a,b){p.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bV[d]+b]=e[d]||e[d-2]||e[0];return f}},bO.test(a)||(p.cssHooks[a+b].set=b_)});var cd=/%20/g,ce=/\[\]$/,cf=/\r?\n/g,cg=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,ch=/^(?:select|textarea)/i;p.fn.extend({serialize:function(){return p.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?p.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ch.test(this.nodeName)||cg.test(this.type))}).map(function(a,b){var c=p(this).val();return c==null?null:p.isArray(c)?p.map(c,function(a,c){return{name:b.name,value:a.replace(cf,"\r\n")}}):{name:b.name,value:c.replace(cf,"\r\n")}}).get()}}),p.param=function(a,c){var d,e=[],f=function(a,b){b=p.isFunction(b)?b():b==null?"":b,e[e.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=p.ajaxSettings&&p.ajaxSettings.traditional);if(p.isArray(a)||a.jquery&&!p.isPlainObject(a))p.each(a,function(){f(this.name,this.value)});else for(d in a)ci(d,a[d],c,f);return e.join("&").replace(cd,"+")};var cj,ck,cl=/#.*$/,cm=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,cn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,co=/^(?:GET|HEAD)$/,cp=/^\/\//,cq=/\?/,cr=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,cs=/([?&])_=[^&]*/,ct=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,cu=p.fn.load,cv={},cw={},cx=["*/"]+["*"];try{ck=f.href}catch(cy){ck=e.createElement("a"),ck.href="",ck=ck.href}cj=ct.exec(ck.toLowerCase())||[],p.fn.load=function(a,c,d){if(typeof a!="string"&&cu)return cu.apply(this,arguments);if(!this.length)return this;var e,f,g,h=this,i=a.indexOf(" ");return i>=0&&(e=a.slice(i,a.length),a=a.slice(0,i)),p.isFunction(c)?(d=c,c=b):c&&typeof c=="object"&&(f="POST"),p.ajax({url:a,type:f,dataType:"html",data:c,complete:function(a,b){d&&h.each(d,g||[a.responseText,b,a])}}).done(function(a){g=arguments,h.html(e?p("<div>").append(a.replace(cr,"")).find(e):a)}),this},p.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){p.fn[b]=function(a){return this.on(b,a)}}),p.each(["get","post"],function(a,c){p[c]=function(a,d,e,f){return p.isFunction(d)&&(f=f||e,e=d,d=b),p.ajax({type:c,url:a,data:d,success:e,dataType:f})}}),p.extend({getScript:function(a,c){return p.get(a,b,c,"script")},getJSON:function(a,b,c){return p.get(a,b,c,"json")},ajaxSetup:function(a,b){return b?cB(a,p.ajaxSettings):(b=a,a=p.ajaxSettings),cB(a,b),a},ajaxSettings:{url:ck,isLocal:cn.test(cj[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":cx},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":p.parseJSON,"text xml":p.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:cz(cv),ajaxTransport:cz(cw),ajax:function(a,c){function y(a,c,f,i){var k,s,t,u,w,y=c;if(v===2)return;v=2,h&&clearTimeout(h),g=b,e=i||"",x.readyState=a>0?4:0,f&&(u=cC(l,x,f));if(a>=200&&a<300||a===304)l.ifModified&&(w=x.getResponseHeader("Last-Modified"),w&&(p.lastModified[d]=w),w=x.getResponseHeader("Etag"),w&&(p.etag[d]=w)),a===304?(y="notmodified",k=!0):(k=cD(l,u),y=k.state,s=k.data,t=k.error,k=!t);else{t=y;if(!y||a)y="error",a<0&&(a=0)}x.status=a,x.statusText=(c||y)+"",k?o.resolveWith(m,[s,y,x]):o.rejectWith(m,[x,y,t]),x.statusCode(r),r=b,j&&n.trigger("ajax"+(k?"Success":"Error"),[x,l,k?s:t]),q.fireWith(m,[x,y]),j&&(n.trigger("ajaxComplete",[x,l]),--p.active||p.event.trigger("ajaxStop"))}typeof a=="object"&&(c=a,a=b),c=c||{};var d,e,f,g,h,i,j,k,l=p.ajaxSetup({},c),m=l.context||l,n=m!==l&&(m.nodeType||m instanceof p)?p(m):p.event,o=p.Deferred(),q=p.Callbacks("once memory"),r=l.statusCode||{},t={},u={},v=0,w="canceled",x={readyState:0,setRequestHeader:function(a,b){if(!v){var c=a.toLowerCase();a=u[c]=u[c]||a,t[a]=b}return this},getAllResponseHeaders:function(){return v===2?e:null},getResponseHeader:function(a){var c;if(v===2){if(!f){f={};while(c=cm.exec(e))f[c[1].toLowerCase()]=c[2]}c=f[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){return v||(l.mimeType=a),this},abort:function(a){return a=a||w,g&&g.abort(a),y(0,a),this}};o.promise(x),x.success=x.done,x.error=x.fail,x.complete=q.add,x.statusCode=function(a){if(a){var b;if(v<2)for(b in a)r[b]=[r[b],a[b]];else b=a[x.status],x.always(b)}return this},l.url=((a||l.url)+"").replace(cl,"").replace(cp,cj[1]+"//"),l.dataTypes=p.trim(l.dataType||"*").toLowerCase().split(s),l.crossDomain==null&&(i=ct.exec(l.url.toLowerCase())||!1,l.crossDomain=i&&i.join(":")+(i[3]?"":i[1]==="http:"?80:443)!==cj.join(":")+(cj[3]?"":cj[1]==="http:"?80:443)),l.data&&l.processData&&typeof l.data!="string"&&(l.data=p.param(l.data,l.traditional)),cA(cv,l,c,x);if(v===2)return x;j=l.global,l.type=l.type.toUpperCase(),l.hasContent=!co.test(l.type),j&&p.active++===0&&p.event.trigger("ajaxStart");if(!l.hasContent){l.data&&(l.url+=(cq.test(l.url)?"&":"?")+l.data,delete l.data),d=l.url;if(l.cache===!1){var z=p.now(),A=l.url.replace(cs,"$1_="+z);l.url=A+(A===l.url?(cq.test(l.url)?"&":"?")+"_="+z:"")}}(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&x.setRequestHeader("Content-Type",l.contentType),l.ifModified&&(d=d||l.url,p.lastModified[d]&&x.setRequestHeader("If-Modified-Since",p.lastModified[d]),p.etag[d]&&x.setRequestHeader("If-None-Match",p.etag[d])),x.setRequestHeader("Accept",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+(l.dataTypes[0]!=="*"?", "+cx+"; q=0.01":""):l.accepts["*"]);for(k in l.headers)x.setRequestHeader(k,l.headers[k]);if(!l.beforeSend||l.beforeSend.call(m,x,l)!==!1&&v!==2){w="abort";for(k in{success:1,error:1,complete:1})x[k](l[k]);g=cA(cw,l,c,x);if(!g)y(-1,"No Transport");else{x.readyState=1,j&&n.trigger("ajaxSend",[x,l]),l.async&&l.timeout>0&&(h=setTimeout(function(){x.abort("timeout")},l.timeout));try{v=1,g.send(t,y)}catch(B){if(v<2)y(-1,B);else throw B}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var cE=[],cF=/\?/,cG=/(=)\?(?=&|$)|\?\?/,cH=p.now();p.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=cE.pop()||p.expando+"_"+cH++;return this[a]=!0,a}}),p.ajaxPrefilter("json jsonp",function(c,d,e){var f,g,h,i=c.data,j=c.url,k=c.jsonp!==!1,l=k&&cG.test(j),m=k&&!l&&typeof i=="string"&&!(c.contentType||"").indexOf("application/x-www-form-urlencoded")&&cG.test(i);if(c.dataTypes[0]==="jsonp"||l||m)return f=c.jsonpCallback=p.isFunction(c.jsonpCallback)?c.jsonpCallback():c.jsonpCallback,g=a[f],l?c.url=j.replace(cG,"$1"+f):m?c.data=i.replace(cG,"$1"+f):k&&(c.url+=(cF.test(j)?"&":"?")+c.jsonp+"="+f),c.converters["script json"]=function(){return h||p.error(f+" was not called"),h[0]},c.dataTypes[0]="json",a[f]=function(){h=arguments},e.always(function(){a[f]=g,c[f]&&(c.jsonpCallback=d.jsonpCallback,cE.push(f)),h&&p.isFunction(g)&&g(h[0]),h=g=b}),"script"}),p.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){return p.globalEval(a),a}}}),p.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),p.ajaxTransport("script",function(a){if(a.crossDomain){var c,d=e.head||e.getElementsByTagName("head")[0]||e.documentElement;return{send:function(f,g){c=e.createElement("script"),c.async="async",a.scriptCharset&&(c.charset=a.scriptCharset),c.src=a.url,c.onload=c.onreadystatechange=function(a,e){if(e||!c.readyState||/loaded|complete/.test(c.readyState))c.onload=c.onreadystatechange=null,d&&c.parentNode&&d.removeChild(c),c=b,e||g(200,"success")},d.insertBefore(c,d.firstChild)},abort:function(){c&&c.onload(0,1)}}}});var cI,cJ=a.ActiveXObject?function(){for(var a in cI)cI[a](0,1)}:!1,cK=0;p.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&cL()||cM()}:cL,function(a){p.extend(p.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(p.ajaxSettings.xhr()),p.support.ajax&&p.ajaxTransport(function(c){if(!c.crossDomain||p.support.cors){var d;return{send:function(e,f){var g,h,i=c.xhr();c.username?i.open(c.type,c.url,c.async,c.username,c.password):i.open(c.type,c.url,c.async);if(c.xhrFields)for(h in c.xhrFields)i[h]=c.xhrFields[h];c.mimeType&&i.overrideMimeType&&i.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(h in e)i.setRequestHeader(h,e[h])}catch(j){}i.send(c.hasContent&&c.data||null),d=function(a,e){var h,j,k,l,m;try{if(d&&(e||i.readyState===4)){d=b,g&&(i.onreadystatechange=p.noop,cJ&&delete cI[g]);if(e)i.readyState!==4&&i.abort();else{h=i.status,k=i.getAllResponseHeaders(),l={},m=i.responseXML,m&&m.documentElement&&(l.xml=m);try{l.text=i.responseText}catch(a){}try{j=i.statusText}catch(n){j=""}!h&&c.isLocal&&!c.crossDomain?h=l.text?200:404:h===1223&&(h=204)}}}catch(o){e||f(-1,o)}l&&f(h,j,l,k)},c.async?i.readyState===4?setTimeout(d,0):(g=++cK,cJ&&(cI||(cI={},p(a).unload(cJ)),cI[g]=d),i.onreadystatechange=d):d()},abort:function(){d&&d(0,1)}}}});var cN,cO,cP=/^(?:toggle|show|hide)$/,cQ=new RegExp("^(?:([-+])=|)("+q+")([a-z%]*)$","i"),cR=/queueHooks$/,cS=[cY],cT={"*":[function(a,b){var c,d,e=this.createTween(a,b),f=cQ.exec(b),g=e.cur(),h=+g||0,i=1,j=20;if(f){c=+f[2],d=f[3]||(p.cssNumber[a]?"":"px");if(d!=="px"&&h){h=p.css(e.elem,a,!0)||c||1;do i=i||".5",h=h/i,p.style(e.elem,a,h+d);while(i!==(i=e.cur()/g)&&i!==1&&--j)}e.unit=d,e.start=h,e.end=f[1]?h+(f[1]+1)*c:c}return e}]};p.Animation=p.extend(cW,{tweener:function(a,b){p.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");var c,d=0,e=a.length;for(;d<e;d++)c=a[d],cT[c]=cT[c]||[],cT[c].unshift(b)},prefilter:function(a,b){b?cS.unshift(a):cS.push(a)}}),p.Tween=cZ,cZ.prototype={constructor:cZ,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(p.cssNumber[c]?"":"px")},cur:function(){var a=cZ.propHooks[this.prop];return a&&a.get?a.get(this):cZ.propHooks._default.get(this)},run:function(a){var b,c=cZ.propHooks[this.prop];return this.options.duration?this.pos=b=p.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):cZ.propHooks._default.set(this),this}},cZ.prototype.init.prototype=cZ.prototype,cZ.propHooks={_default:{get:function(a){var b;return a.elem[a.prop]==null||!!a.elem.style&&a.elem.style[a.prop]!=null?(b=p.css(a.elem,a.prop,!1,""),!b||b==="auto"?0:b):a.elem[a.prop]},set:function(a){p.fx.step[a.prop]?p.fx.step[a.prop](a):a.elem.style&&(a.elem.style[p.cssProps[a.prop]]!=null||p.cssHooks[a.prop])?p.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},cZ.propHooks.scrollTop=cZ.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},p.each(["toggle","show","hide"],function(a,b){var c=p.fn[b];p.fn[b]=function(d,e,f){return d==null||typeof d=="boolean"||!a&&p.isFunction(d)&&p.isFunction(e)?c.apply(this,arguments):this.animate(c$(b,!0),d,e,f)}}),p.fn.extend({fadeTo:function(a,b,c,d){return this.filter(bZ).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=p.isEmptyObject(a),f=p.speed(b,c,d),g=function(){var b=cW(this,p.extend({},a),f);e&&b.stop(!0)};return e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,c,d){var e=function(a){var b=a.stop;delete a.stop,b(d)};return typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,c=a!=null&&a+"queueHooks",f=p.timers,g=p._data(this);if(c)g[c]&&g[c].stop&&e(g[c]);else for(c in g)g[c]&&g[c].stop&&cR.test(c)&&e(g[c]);for(c=f.length;c--;)f[c].elem===this&&(a==null||f[c].queue===a)&&(f[c].anim.stop(d),b=!1,f.splice(c,1));(b||!d)&&p.dequeue(this,a)})}}),p.each({slideDown:c$("show"),slideUp:c$("hide"),slideToggle:c$("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){p.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),p.speed=function(a,b,c){var d=a&&typeof a=="object"?p.extend({},a):{complete:c||!c&&b||p.isFunction(a)&&a,duration:a,easing:c&&b||b&&!p.isFunction(b)&&b};d.duration=p.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in p.fx.speeds?p.fx.speeds[d.duration]:p.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";return d.old=d.complete,d.complete=function(){p.isFunction(d.old)&&d.old.call(this),d.queue&&p.dequeue(this,d.queue)},d},p.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},p.timers=[],p.fx=cZ.prototype.init,p.fx.tick=function(){var a,b=p.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||p.fx.stop()},p.fx.timer=function(a){a()&&p.timers.push(a)&&!cO&&(cO=setInterval(p.fx.tick,p.fx.interval))},p.fx.interval=13,p.fx.stop=function(){clearInterval(cO),cO=null},p.fx.speeds={slow:600,fast:200,_default:400},p.fx.step={},p.expr&&p.expr.filters&&(p.expr.filters.animated=function(a){return p.grep(p.timers,function(b){return a===b.elem}).length});var c_=/^(?:body|html)$/i;p.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){p.offset.setOffset(this,a,b)});var c,d,e,f,g,h,i,j={top:0,left:0},k=this[0],l=k&&k.ownerDocument;if(!l)return;return(d=l.body)===k?p.offset.bodyOffset(k):(c=l.documentElement,p.contains(c,k)?(typeof k.getBoundingClientRect!="undefined"&&(j=k.getBoundingClientRect()),e=da(l),f=c.clientTop||d.clientTop||0,g=c.clientLeft||d.clientLeft||0,h=e.pageYOffset||c.scrollTop,i=e.pageXOffset||c.scrollLeft,{top:j.top+h-f,left:j.left+i-g}):j)},p.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;return p.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(p.css(a,"marginTop"))||0,c+=parseFloat(p.css(a,"marginLeft"))||0),{top:b,left:c}},setOffset:function(a,b,c){var d=p.css(a,"position");d==="static"&&(a.style.position="relative");var e=p(a),f=e.offset(),g=p.css(a,"top"),h=p.css(a,"left"),i=(d==="absolute"||d==="fixed")&&p.inArray("auto",[g,h])>-1,j={},k={},l,m;i?(k=e.position(),l=k.top,m=k.left):(l=parseFloat(g)||0,m=parseFloat(h)||0),p.isFunction(b)&&(b=b.call(a,c,f)),b.top!=null&&(j.top=b.top-f.top+l),b.left!=null&&(j.left=b.left-f.left+m),"using"in b?b.using.call(a,j):e.css(j)}},p.fn.extend({position:function(){if(!this[0])return;var a=this[0],b=this.offsetParent(),c=this.offset(),d=c_.test(b[0].nodeName)?{top:0,left:0}:b.offset();return c.top-=parseFloat(p.css(a,"marginTop"))||0,c.left-=parseFloat(p.css(a,"marginLeft"))||0,d.top+=parseFloat(p.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(p.css(b[0],"borderLeftWidth"))||0,{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||e.body;while(a&&!c_.test(a.nodeName)&&p.css(a,"position")==="static")a=a.offsetParent;return a||e.body})}}),p.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);p.fn[a]=function(e){return p.access(this,function(a,e,f){var g=da(a);if(f===b)return g?c in g?g[c]:g.document.documentElement[e]:a[e];g?g.scrollTo(d?p(g).scrollLeft():f,d?f:p(g).scrollTop()):a[e]=f},a,e,arguments.length,null)}}),p.each({Height:"height",Width:"width"},function(a,c){p.each({padding:"inner"+a,content:c,"":"outer"+a},function(d,e){p.fn[e]=function(e,f){var g=arguments.length&&(d||typeof e!="boolean"),h=d||(e===!0||f===!0?"margin":"border");return p.access(this,function(c,d,e){var f;return p.isWindow(c)?c.document.documentElement["client"+a]:c.nodeType===9?(f=c.documentElement,Math.max(c.body["scroll"+a],f["scroll"+a],c.body["offset"+a],f["offset"+a],f["client"+a])):e===b?p.css(c,d,e,h):p.style(c,d,e,h)},c,g?e:b,g,null)}})}),a.jQuery=a.$=p,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return p})})(window);
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>Cars</groupId>\r\n  <artifactId>CarAccessioresCompany</artifactId>\r\n  <version>0.0.1-SNAPSHOT</version>\r\n  \r\n\r\n  <dependencies>\r\n\t \r\n<dependency>\r\n    <groupId>io.cucumber</groupId>\r\n    <artifactId>cucumber-java</artifactId>\r\n    <version>7.13.0</version>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>info.cukes</groupId>\r\n    <artifactId>cucumber-junit</artifactId>\r\n    <version>1.2.5</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>io.cucumber</groupId>\r\n    <artifactId>cucumber-picocontainer</artifactId>\r\n    <version>7.13.0</version>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>info.cukes</groupId>\r\n    <artifactId>cucumber-core</artifactId>\r\n    <version>1.2.5</version>\r\n</dependency>\r\n\r\n  </dependencies>\r\n  \r\n  \r\n  \r\n  \r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/pom.xml	(date 1703174197545)
@@ -1,40 +1,53 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <groupId>Cars</groupId>
-  <artifactId>CarAccessioresCompany</artifactId>
-  <version>0.0.1-SNAPSHOT</version>
-  
-
-  <dependencies>
-	 
-<dependency>
-    <groupId>io.cucumber</groupId>
-    <artifactId>cucumber-java</artifactId>
-    <version>7.13.0</version>
-</dependency>
-
-<dependency>
-    <groupId>info.cukes</groupId>
-    <artifactId>cucumber-junit</artifactId>
-    <version>1.2.5</version>
-    <scope>test</scope>
-</dependency>
-
-<dependency>
-    <groupId>io.cucumber</groupId>
-    <artifactId>cucumber-picocontainer</artifactId>
-    <version>7.13.0</version>
-</dependency>
-
-<dependency>
-    <groupId>info.cukes</groupId>
-    <artifactId>cucumber-core</artifactId>
-    <version>1.2.5</version>
-</dependency>
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <groupId>Cars</groupId>
+    <artifactId>CarAccessioresCompany</artifactId>
+    <version>0.0.1-SNAPSHOT</version>
+    <dependencies>
+        <dependency>
+            <groupId>io.cucumber</groupId>
+            <artifactId>cucumber-java</artifactId>
+            <version>7.13.0</version>
+        </dependency>
+        <dependency>
+            <groupId>info.cukes</groupId>
+            <artifactId>cucumber-junit</artifactId>
+            <version>1.2.5</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>io.cucumber</groupId>
+            <artifactId>cucumber-picocontainer</artifactId>
+            <version>7.13.0</version>
+        </dependency>
+        <dependency>
+            <groupId>info.cukes</groupId>
+            <artifactId>cucumber-core</artifactId>
+            <version>1.2.5</version>
+        </dependency>
+        <dependency>
+            <groupId>info.cukes</groupId>
+            <artifactId>cucumber-java</artifactId>
+            <version>1.2.0</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>info.cukes</groupId>
+            <artifactId>cucumber-junit</artifactId>
+            <version>1.2.0</version>
+        </dependency>
+
+        <!--  https://mvnrepository.com/artifact/javax.mail/javax.mail-api  -->
+        <dependency>
+            <groupId>com.sun.mail</groupId>
+            <artifactId>javax.mail</artifactId>
+            <version>1.6.2</version>
+        </dependency>
 
-  </dependencies>
-  
-  
-  
-  
+
+
+    </dependencies>
 </project>
\ No newline at end of file
Index: .project
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<projectDescription>\r\n\t<name>CarAccessioresCompany</name>\r\n\t<comment></comment>\r\n\t<projects>\r\n\t</projects>\r\n\t<buildSpec>\r\n\t\t<buildCommand>\r\n\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\r\n\t\t\t<arguments>\r\n\t\t\t</arguments>\r\n\t\t</buildCommand>\r\n\t\t<buildCommand>\r\n\t\t\t<name>org.eclipse.m2e.core.maven2Builder</name>\r\n\t\t\t<arguments>\r\n\t\t\t</arguments>\r\n\t\t</buildCommand>\r\n\t</buildSpec>\r\n\t<natures>\r\n\t\t<nature>org.eclipse.jdt.core.javanature</nature>\r\n\t\t<nature>org.eclipse.m2e.core.maven2Nature</nature>\r\n\t</natures>\r\n</projectDescription>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.project b/.project
--- a/.project	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/.project	(date 1703174174929)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <projectDescription>
-	<name>CarAccessioresCompany</name>
+	<name>Cars</name>
 	<comment></comment>
 	<projects>
 	</projects>
Index:  target/cucumber.html/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ target/cucumber.html/style.css b/ target/cucumber.html/style.css
new file mode 100644
--- /dev/null	(date 1703174050831)
+++ b/ target/cucumber.html/style.css	(date 1703174050831)
@@ -0,0 +1,96 @@
+.cucumber-report .body {
+  font-family: Helvetica,Arial,sans-serif;
+}
+
+.cucumber-report .keyword {
+  font-weight: bold;
+}
+
+.cucumber-report .description {
+  font-style: italic;
+  margin-left: 20px;
+}
+
+.cucumber-report details > section {
+  margin-left: 20px;
+}
+
+.cucumber-report ol.steps {
+  list-style-type: none;
+  margin-top: 0;
+  margin-bottom: 0;
+}
+
+.cucumber-report .step .embedded-text {
+  background: #dddddd;
+}
+
+.cucumber-report .doc_string {
+  margin: 0 0 0 20px;
+}
+
+.cucumber-report table {
+  border-collapse: collapse;
+  border: 1px;
+  border-style: solid;
+}
+
+.cucumber-report td, .cucumber-report th {
+  border: 1px;
+  border-style: solid;
+  padding-left: 4px;
+  padding-right: 4px;
+}
+
+.cucumber-report table {
+  margin-left: 20px;
+}
+
+.cucumber-report thead {
+  background-color: #C0C0C0;
+}
+
+.cucumber-report .passed {
+  background-color: #C5D88A;
+}
+
+.cucumber-report .undefined, .cucumber-report .pending {
+  background-color: #EAEC2D;
+}
+
+.cucumber-report .skipped {
+  background-color: #2DEAEC;
+}
+
+.cucumber-report .failed {
+  background-color: #D88A8A;
+}
+
+.cucumber-report .tags {
+  display: inline;
+}
+
+.cucumber-report .tag {
+  margin-right: 0.25em;
+  color: #246ac1;
+}
+
+.cucumber-report .comments {
+  display: inline;
+}
+
+.cucumber-report .comment {
+  margin 0;
+  padding 0;
+}
+
+.cucumber-report .error {
+  margin: .2em .75em;
+  padding: .2em;
+  border: 1px solid #900;
+  background-color: #EDBBBB;
+}
+
+#cucumber-templates {
+  display: none;
+}
Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
new file mode 100644
--- /dev/null	(date 1703174050834)
+++ b/.idea/dataSources.xml	(date 1703174050834)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
+    <data-source source="LOCAL" name="caraccessories@localhost" uuid="1de836f4-b278-4cff-aa95-49d4b2e08e96">
+      <driver-ref>mysql.8</driver-ref>
+      <synchronize>true</synchronize>
+      <jdbc-driver>com.mysql.cj.jdbc.Driver</jdbc-driver>
+      <jdbc-url>jdbc:mysql://localhost:3306/caraccessories</jdbc-url>
+      <working-dir>$ProjectFileDir$</working-dir>
+    </data-source>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.local.xml b/.idea/dataSources.local.xml
new file mode 100644
--- /dev/null	(date 1703174050833)
+++ b/.idea/dataSources.local.xml	(date 1703174050833)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="dataSourceStorageLocal" created-in="IU-232.9921.47">
+    <data-source name="caraccessories@localhost" uuid="1de836f4-b278-4cff-aa95-49d4b2e08e96">
+      <database-info product="MySQL" version="5.5.5-10.4.27-MariaDB" jdbc-version="4.2" driver-name="MySQL Connector/J" driver-version="mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)" dbms="MARIADB" exact-version="10.4.27" exact-driver-version="8.0">
+        <extra-name-characters>#@</extra-name-characters>
+        <identifier-quote-string>`</identifier-quote-string>
+      </database-info>
+      <case-sensitivity plain-identifiers="lower" quoted-identifiers="lower" />
+      <secret-storage>master_key</secret-storage>
+      <user-name>root</user-name>
+      <schema-mapping>
+        <introspection-scope>
+          <node kind="schema" qname="@" />
+        </introspection-scope>
+      </schema-mapping>
+    </data-source>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96.xml b/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96.xml
new file mode 100644
--- /dev/null	(date 1703175388505)
+++ b/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96.xml	(date 1703175388505)
@@ -0,0 +1,1407 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<dataSource name="caraccessories@localhost">
+  <database-model serializer="dbm" dbms="MARIADB" family-id="MARIADB" format-version="4.49">
+    <root id="1">
+      <DefaultCasing>lower/lower</DefaultCasing>
+      <DefaultEngine>InnoDB</DefaultEngine>
+      <Grants>|root||root|127.0.0.1|ALTER|G
+|root||root|::1|ALTER|G
+|root||root|localhost|ALTER|G
+|root||root|127.0.0.1|ALTER ROUTINE|G
+|root||root|::1|ALTER ROUTINE|G
+|root||root|localhost|ALTER ROUTINE|G
+|root||root|127.0.0.1|CREATE|G
+|root||root|::1|CREATE|G
+|root||root|localhost|CREATE|G
+|root||root|127.0.0.1|CREATE ROUTINE|G
+|root||root|::1|CREATE ROUTINE|G
+|root||root|localhost|CREATE ROUTINE|G
+|root||root|127.0.0.1|CREATE TABLESPACE|G
+|root||root|::1|CREATE TABLESPACE|G
+|root||root|localhost|CREATE TABLESPACE|G
+|root||root|127.0.0.1|CREATE TEMPORARY TABLES|G
+|root||root|::1|CREATE TEMPORARY TABLES|G
+|root||root|localhost|CREATE TEMPORARY TABLES|G
+|root||root|127.0.0.1|CREATE USER|G
+|root||root|::1|CREATE USER|G
+|root||root|localhost|CREATE USER|G
+|root||root|127.0.0.1|CREATE VIEW|G
+|root||root|::1|CREATE VIEW|G
+|root||root|localhost|CREATE VIEW|G
+|root||root|127.0.0.1|DELETE|G
+|root||root|::1|DELETE|G
+|root||root|localhost|DELETE|G
+|root||root|127.0.0.1|DELETE HISTORY|G
+|root||root|::1|DELETE HISTORY|G
+|root||root|localhost|DELETE HISTORY|G
+|root||root|127.0.0.1|DROP|G
+|root||root|::1|DROP|G
+|root||root|localhost|DROP|G
+|root||root|127.0.0.1|EVENT|G
+|root||root|::1|EVENT|G
+|root||root|localhost|EVENT|G
+|root||root|127.0.0.1|EXECUTE|G
+|root||root|::1|EXECUTE|G
+|root||root|localhost|EXECUTE|G
+|root||root|127.0.0.1|FILE|G
+|root||root|::1|FILE|G
+|root||root|localhost|FILE|G
+|root||root|127.0.0.1|INDEX|G
+|root||root|::1|INDEX|G
+|root||root|localhost|INDEX|G
+|root||root|127.0.0.1|INSERT|G
+|root||root|::1|INSERT|G
+|root||root|localhost|INSERT|G
+|root||root|127.0.0.1|LOCK TABLES|G
+|root||root|::1|LOCK TABLES|G
+|root||root|localhost|LOCK TABLES|G
+|root||root|127.0.0.1|PROCESS|G
+|root||root|::1|PROCESS|G
+|root||root|localhost|PROCESS|G
+|root||root|127.0.0.1|REFERENCES|G
+|root||root|::1|REFERENCES|G
+|root||root|localhost|REFERENCES|G
+|root||root|127.0.0.1|RELOAD|G
+|root||root|::1|RELOAD|G
+|root||root|localhost|RELOAD|G
+|root||root|127.0.0.1|REPLICATION CLIENT|G
+|root||root|::1|REPLICATION CLIENT|G
+|root||root|localhost|REPLICATION CLIENT|G
+|root||root|127.0.0.1|REPLICATION SLAVE|G
+|root||root|::1|REPLICATION SLAVE|G
+|root||root|localhost|REPLICATION SLAVE|G
+|root||root|127.0.0.1|SELECT|G
+|root||root|::1|SELECT|G
+|root||root|localhost|SELECT|G
+|root||root|127.0.0.1|SHOW DATABASES|G
+|root||root|::1|SHOW DATABASES|G
+|root||root|localhost|SHOW DATABASES|G
+|root||root|127.0.0.1|SHOW VIEW|G
+|root||root|::1|SHOW VIEW|G
+|root||root|localhost|SHOW VIEW|G
+|root||root|127.0.0.1|SHUTDOWN|G
+|root||root|::1|SHUTDOWN|G
+|root||root|localhost|SHUTDOWN|G
+|root||root|127.0.0.1|SUPER|G
+|root||root|::1|SUPER|G
+|root||root|localhost|SUPER|G
+|root||root|127.0.0.1|TRIGGER|G
+|root||root|::1|TRIGGER|G
+|root||root|localhost|TRIGGER|G
+|root||root|127.0.0.1|UPDATE|G
+|root||root|::1|UPDATE|G
+|root||root|localhost|UPDATE|G
+|root||root|127.0.0.1|grant option|G
+|root||root|::1|grant option|G
+|root||root|localhost|grant option|G
+phpmyadmin|schema||pma|localhost|DELETE|G
+phpmyadmin|schema||pma|localhost|INSERT|G
+phpmyadmin|schema||pma|localhost|SELECT|G
+phpmyadmin|schema||pma|localhost|UPDATE|G
+test|schema||&apos;&apos;||ALTER|G
+test|schema||&apos;&apos;||CREATE|G
+test|schema||&apos;&apos;||CREATE ROUTINE|G
+test|schema||&apos;&apos;||CREATE TEMPORARY TABLES|G
+test|schema||&apos;&apos;||CREATE VIEW|G
+test|schema||&apos;&apos;||DELETE|G
+test|schema||&apos;&apos;||DELETE HISTORY|G
+test|schema||&apos;&apos;||DROP|G
+test|schema||&apos;&apos;||EVENT|G
+test|schema||&apos;&apos;||INDEX|G
+test|schema||&apos;&apos;||INSERT|G
+test|schema||&apos;&apos;||LOCK TABLES|G
+test|schema||&apos;&apos;||REFERENCES|G
+test|schema||&apos;&apos;||SELECT|G
+test|schema||&apos;&apos;||SHOW VIEW|G
+test|schema||&apos;&apos;||TRIGGER|G
+test|schema||&apos;&apos;||UPDATE|G
+test\\_%|schema||&apos;&apos;||ALTER|G
+test\\_%|schema||&apos;&apos;||CREATE|G
+test\\_%|schema||&apos;&apos;||CREATE ROUTINE|G
+test\\_%|schema||&apos;&apos;||CREATE TEMPORARY TABLES|G
+test\\_%|schema||&apos;&apos;||CREATE VIEW|G
+test\\_%|schema||&apos;&apos;||DELETE|G
+test\\_%|schema||&apos;&apos;||DELETE HISTORY|G
+test\\_%|schema||&apos;&apos;||DROP|G
+test\\_%|schema||&apos;&apos;||EVENT|G
+test\\_%|schema||&apos;&apos;||INDEX|G
+test\\_%|schema||&apos;&apos;||INSERT|G
+test\\_%|schema||&apos;&apos;||LOCK TABLES|G
+test\\_%|schema||&apos;&apos;||REFERENCES|G
+test\\_%|schema||&apos;&apos;||SELECT|G
+test\\_%|schema||&apos;&apos;||SHOW VIEW|G
+test\\_%|schema||&apos;&apos;||TRIGGER|G
+test\\_%|schema||&apos;&apos;||UPDATE|G</Grants>
+      <ServerVersion>10.4.27</ServerVersion>
+    </root>
+    <collation id="2" parent="1" name="big5_chinese_ci">
+      <Charset>big5</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="3" parent="1" name="big5_bin">
+      <Charset>big5</Charset>
+    </collation>
+    <collation id="4" parent="1" name="big5_chinese_nopad_ci">
+      <Charset>big5</Charset>
+    </collation>
+    <collation id="5" parent="1" name="big5_nopad_bin">
+      <Charset>big5</Charset>
+    </collation>
+    <collation id="6" parent="1" name="dec8_swedish_ci">
+      <Charset>dec8</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="7" parent="1" name="dec8_bin">
+      <Charset>dec8</Charset>
+    </collation>
+    <collation id="8" parent="1" name="dec8_swedish_nopad_ci">
+      <Charset>dec8</Charset>
+    </collation>
+    <collation id="9" parent="1" name="dec8_nopad_bin">
+      <Charset>dec8</Charset>
+    </collation>
+    <collation id="10" parent="1" name="cp850_general_ci">
+      <Charset>cp850</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="11" parent="1" name="cp850_bin">
+      <Charset>cp850</Charset>
+    </collation>
+    <collation id="12" parent="1" name="cp850_general_nopad_ci">
+      <Charset>cp850</Charset>
+    </collation>
+    <collation id="13" parent="1" name="cp850_nopad_bin">
+      <Charset>cp850</Charset>
+    </collation>
+    <collation id="14" parent="1" name="hp8_english_ci">
+      <Charset>hp8</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="15" parent="1" name="hp8_bin">
+      <Charset>hp8</Charset>
+    </collation>
+    <collation id="16" parent="1" name="hp8_english_nopad_ci">
+      <Charset>hp8</Charset>
+    </collation>
+    <collation id="17" parent="1" name="hp8_nopad_bin">
+      <Charset>hp8</Charset>
+    </collation>
+    <collation id="18" parent="1" name="koi8r_general_ci">
+      <Charset>koi8r</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="19" parent="1" name="koi8r_bin">
+      <Charset>koi8r</Charset>
+    </collation>
+    <collation id="20" parent="1" name="koi8r_general_nopad_ci">
+      <Charset>koi8r</Charset>
+    </collation>
+    <collation id="21" parent="1" name="koi8r_nopad_bin">
+      <Charset>koi8r</Charset>
+    </collation>
+    <collation id="22" parent="1" name="latin1_german1_ci">
+      <Charset>latin1</Charset>
+    </collation>
+    <collation id="23" parent="1" name="latin1_swedish_ci">
+      <Charset>latin1</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="24" parent="1" name="latin1_danish_ci">
+      <Charset>latin1</Charset>
+    </collation>
+    <collation id="25" parent="1" name="latin1_german2_ci">
+      <Charset>latin1</Charset>
+    </collation>
+    <collation id="26" parent="1" name="latin1_bin">
+      <Charset>latin1</Charset>
+    </collation>
+    <collation id="27" parent="1" name="latin1_general_ci">
+      <Charset>latin1</Charset>
+    </collation>
+    <collation id="28" parent="1" name="latin1_general_cs">
+      <Charset>latin1</Charset>
+    </collation>
+    <collation id="29" parent="1" name="latin1_spanish_ci">
+      <Charset>latin1</Charset>
+    </collation>
+    <collation id="30" parent="1" name="latin1_swedish_nopad_ci">
+      <Charset>latin1</Charset>
+    </collation>
+    <collation id="31" parent="1" name="latin1_nopad_bin">
+      <Charset>latin1</Charset>
+    </collation>
+    <collation id="32" parent="1" name="latin2_czech_cs">
+      <Charset>latin2</Charset>
+    </collation>
+    <collation id="33" parent="1" name="latin2_general_ci">
+      <Charset>latin2</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="34" parent="1" name="latin2_hungarian_ci">
+      <Charset>latin2</Charset>
+    </collation>
+    <collation id="35" parent="1" name="latin2_croatian_ci">
+      <Charset>latin2</Charset>
+    </collation>
+    <collation id="36" parent="1" name="latin2_bin">
+      <Charset>latin2</Charset>
+    </collation>
+    <collation id="37" parent="1" name="latin2_general_nopad_ci">
+      <Charset>latin2</Charset>
+    </collation>
+    <collation id="38" parent="1" name="latin2_nopad_bin">
+      <Charset>latin2</Charset>
+    </collation>
+    <collation id="39" parent="1" name="swe7_swedish_ci">
+      <Charset>swe7</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="40" parent="1" name="swe7_bin">
+      <Charset>swe7</Charset>
+    </collation>
+    <collation id="41" parent="1" name="swe7_swedish_nopad_ci">
+      <Charset>swe7</Charset>
+    </collation>
+    <collation id="42" parent="1" name="swe7_nopad_bin">
+      <Charset>swe7</Charset>
+    </collation>
+    <collation id="43" parent="1" name="ascii_general_ci">
+      <Charset>ascii</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="44" parent="1" name="ascii_bin">
+      <Charset>ascii</Charset>
+    </collation>
+    <collation id="45" parent="1" name="ascii_general_nopad_ci">
+      <Charset>ascii</Charset>
+    </collation>
+    <collation id="46" parent="1" name="ascii_nopad_bin">
+      <Charset>ascii</Charset>
+    </collation>
+    <collation id="47" parent="1" name="ujis_japanese_ci">
+      <Charset>ujis</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="48" parent="1" name="ujis_bin">
+      <Charset>ujis</Charset>
+    </collation>
+    <collation id="49" parent="1" name="ujis_japanese_nopad_ci">
+      <Charset>ujis</Charset>
+    </collation>
+    <collation id="50" parent="1" name="ujis_nopad_bin">
+      <Charset>ujis</Charset>
+    </collation>
+    <collation id="51" parent="1" name="sjis_japanese_ci">
+      <Charset>sjis</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="52" parent="1" name="sjis_bin">
+      <Charset>sjis</Charset>
+    </collation>
+    <collation id="53" parent="1" name="sjis_japanese_nopad_ci">
+      <Charset>sjis</Charset>
+    </collation>
+    <collation id="54" parent="1" name="sjis_nopad_bin">
+      <Charset>sjis</Charset>
+    </collation>
+    <collation id="55" parent="1" name="hebrew_general_ci">
+      <Charset>hebrew</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="56" parent="1" name="hebrew_bin">
+      <Charset>hebrew</Charset>
+    </collation>
+    <collation id="57" parent="1" name="hebrew_general_nopad_ci">
+      <Charset>hebrew</Charset>
+    </collation>
+    <collation id="58" parent="1" name="hebrew_nopad_bin">
+      <Charset>hebrew</Charset>
+    </collation>
+    <collation id="59" parent="1" name="tis620_thai_ci">
+      <Charset>tis620</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="60" parent="1" name="tis620_bin">
+      <Charset>tis620</Charset>
+    </collation>
+    <collation id="61" parent="1" name="tis620_thai_nopad_ci">
+      <Charset>tis620</Charset>
+    </collation>
+    <collation id="62" parent="1" name="tis620_nopad_bin">
+      <Charset>tis620</Charset>
+    </collation>
+    <collation id="63" parent="1" name="euckr_korean_ci">
+      <Charset>euckr</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="64" parent="1" name="euckr_bin">
+      <Charset>euckr</Charset>
+    </collation>
+    <collation id="65" parent="1" name="euckr_korean_nopad_ci">
+      <Charset>euckr</Charset>
+    </collation>
+    <collation id="66" parent="1" name="euckr_nopad_bin">
+      <Charset>euckr</Charset>
+    </collation>
+    <collation id="67" parent="1" name="koi8u_general_ci">
+      <Charset>koi8u</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="68" parent="1" name="koi8u_bin">
+      <Charset>koi8u</Charset>
+    </collation>
+    <collation id="69" parent="1" name="koi8u_general_nopad_ci">
+      <Charset>koi8u</Charset>
+    </collation>
+    <collation id="70" parent="1" name="koi8u_nopad_bin">
+      <Charset>koi8u</Charset>
+    </collation>
+    <collation id="71" parent="1" name="gb2312_chinese_ci">
+      <Charset>gb2312</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="72" parent="1" name="gb2312_bin">
+      <Charset>gb2312</Charset>
+    </collation>
+    <collation id="73" parent="1" name="gb2312_chinese_nopad_ci">
+      <Charset>gb2312</Charset>
+    </collation>
+    <collation id="74" parent="1" name="gb2312_nopad_bin">
+      <Charset>gb2312</Charset>
+    </collation>
+    <collation id="75" parent="1" name="greek_general_ci">
+      <Charset>greek</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="76" parent="1" name="greek_bin">
+      <Charset>greek</Charset>
+    </collation>
+    <collation id="77" parent="1" name="greek_general_nopad_ci">
+      <Charset>greek</Charset>
+    </collation>
+    <collation id="78" parent="1" name="greek_nopad_bin">
+      <Charset>greek</Charset>
+    </collation>
+    <collation id="79" parent="1" name="cp1250_general_ci">
+      <Charset>cp1250</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="80" parent="1" name="cp1250_czech_cs">
+      <Charset>cp1250</Charset>
+    </collation>
+    <collation id="81" parent="1" name="cp1250_croatian_ci">
+      <Charset>cp1250</Charset>
+    </collation>
+    <collation id="82" parent="1" name="cp1250_bin">
+      <Charset>cp1250</Charset>
+    </collation>
+    <collation id="83" parent="1" name="cp1250_polish_ci">
+      <Charset>cp1250</Charset>
+    </collation>
+    <collation id="84" parent="1" name="cp1250_general_nopad_ci">
+      <Charset>cp1250</Charset>
+    </collation>
+    <collation id="85" parent="1" name="cp1250_nopad_bin">
+      <Charset>cp1250</Charset>
+    </collation>
+    <collation id="86" parent="1" name="gbk_chinese_ci">
+      <Charset>gbk</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="87" parent="1" name="gbk_bin">
+      <Charset>gbk</Charset>
+    </collation>
+    <collation id="88" parent="1" name="gbk_chinese_nopad_ci">
+      <Charset>gbk</Charset>
+    </collation>
+    <collation id="89" parent="1" name="gbk_nopad_bin">
+      <Charset>gbk</Charset>
+    </collation>
+    <collation id="90" parent="1" name="latin5_turkish_ci">
+      <Charset>latin5</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="91" parent="1" name="latin5_bin">
+      <Charset>latin5</Charset>
+    </collation>
+    <collation id="92" parent="1" name="latin5_turkish_nopad_ci">
+      <Charset>latin5</Charset>
+    </collation>
+    <collation id="93" parent="1" name="latin5_nopad_bin">
+      <Charset>latin5</Charset>
+    </collation>
+    <collation id="94" parent="1" name="armscii8_general_ci">
+      <Charset>armscii8</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="95" parent="1" name="armscii8_bin">
+      <Charset>armscii8</Charset>
+    </collation>
+    <collation id="96" parent="1" name="armscii8_general_nopad_ci">
+      <Charset>armscii8</Charset>
+    </collation>
+    <collation id="97" parent="1" name="armscii8_nopad_bin">
+      <Charset>armscii8</Charset>
+    </collation>
+    <collation id="98" parent="1" name="utf8_general_ci">
+      <Charset>utf8</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="99" parent="1" name="utf8_bin">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="100" parent="1" name="utf8_unicode_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="101" parent="1" name="utf8_icelandic_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="102" parent="1" name="utf8_latvian_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="103" parent="1" name="utf8_romanian_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="104" parent="1" name="utf8_slovenian_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="105" parent="1" name="utf8_polish_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="106" parent="1" name="utf8_estonian_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="107" parent="1" name="utf8_spanish_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="108" parent="1" name="utf8_swedish_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="109" parent="1" name="utf8_turkish_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="110" parent="1" name="utf8_czech_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="111" parent="1" name="utf8_danish_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="112" parent="1" name="utf8_lithuanian_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="113" parent="1" name="utf8_slovak_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="114" parent="1" name="utf8_spanish2_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="115" parent="1" name="utf8_roman_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="116" parent="1" name="utf8_persian_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="117" parent="1" name="utf8_esperanto_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="118" parent="1" name="utf8_hungarian_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="119" parent="1" name="utf8_sinhala_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="120" parent="1" name="utf8_german2_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="121" parent="1" name="utf8_croatian_mysql561_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="122" parent="1" name="utf8_unicode_520_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="123" parent="1" name="utf8_vietnamese_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="124" parent="1" name="utf8_general_mysql500_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="125" parent="1" name="utf8_croatian_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="126" parent="1" name="utf8_myanmar_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="127" parent="1" name="utf8_thai_520_w2">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="128" parent="1" name="utf8_general_nopad_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="129" parent="1" name="utf8_nopad_bin">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="130" parent="1" name="utf8_unicode_nopad_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="131" parent="1" name="utf8_unicode_520_nopad_ci">
+      <Charset>utf8</Charset>
+    </collation>
+    <collation id="132" parent="1" name="ucs2_general_ci">
+      <Charset>ucs2</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="133" parent="1" name="ucs2_bin">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="134" parent="1" name="ucs2_unicode_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="135" parent="1" name="ucs2_icelandic_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="136" parent="1" name="ucs2_latvian_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="137" parent="1" name="ucs2_romanian_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="138" parent="1" name="ucs2_slovenian_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="139" parent="1" name="ucs2_polish_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="140" parent="1" name="ucs2_estonian_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="141" parent="1" name="ucs2_spanish_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="142" parent="1" name="ucs2_swedish_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="143" parent="1" name="ucs2_turkish_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="144" parent="1" name="ucs2_czech_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="145" parent="1" name="ucs2_danish_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="146" parent="1" name="ucs2_lithuanian_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="147" parent="1" name="ucs2_slovak_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="148" parent="1" name="ucs2_spanish2_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="149" parent="1" name="ucs2_roman_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="150" parent="1" name="ucs2_persian_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="151" parent="1" name="ucs2_esperanto_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="152" parent="1" name="ucs2_hungarian_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="153" parent="1" name="ucs2_sinhala_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="154" parent="1" name="ucs2_german2_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="155" parent="1" name="ucs2_croatian_mysql561_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="156" parent="1" name="ucs2_unicode_520_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="157" parent="1" name="ucs2_vietnamese_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="158" parent="1" name="ucs2_general_mysql500_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="159" parent="1" name="ucs2_croatian_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="160" parent="1" name="ucs2_myanmar_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="161" parent="1" name="ucs2_thai_520_w2">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="162" parent="1" name="ucs2_general_nopad_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="163" parent="1" name="ucs2_nopad_bin">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="164" parent="1" name="ucs2_unicode_nopad_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="165" parent="1" name="ucs2_unicode_520_nopad_ci">
+      <Charset>ucs2</Charset>
+    </collation>
+    <collation id="166" parent="1" name="cp866_general_ci">
+      <Charset>cp866</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="167" parent="1" name="cp866_bin">
+      <Charset>cp866</Charset>
+    </collation>
+    <collation id="168" parent="1" name="cp866_general_nopad_ci">
+      <Charset>cp866</Charset>
+    </collation>
+    <collation id="169" parent="1" name="cp866_nopad_bin">
+      <Charset>cp866</Charset>
+    </collation>
+    <collation id="170" parent="1" name="keybcs2_general_ci">
+      <Charset>keybcs2</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="171" parent="1" name="keybcs2_bin">
+      <Charset>keybcs2</Charset>
+    </collation>
+    <collation id="172" parent="1" name="keybcs2_general_nopad_ci">
+      <Charset>keybcs2</Charset>
+    </collation>
+    <collation id="173" parent="1" name="keybcs2_nopad_bin">
+      <Charset>keybcs2</Charset>
+    </collation>
+    <collation id="174" parent="1" name="macce_general_ci">
+      <Charset>macce</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="175" parent="1" name="macce_bin">
+      <Charset>macce</Charset>
+    </collation>
+    <collation id="176" parent="1" name="macce_general_nopad_ci">
+      <Charset>macce</Charset>
+    </collation>
+    <collation id="177" parent="1" name="macce_nopad_bin">
+      <Charset>macce</Charset>
+    </collation>
+    <collation id="178" parent="1" name="macroman_general_ci">
+      <Charset>macroman</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="179" parent="1" name="macroman_bin">
+      <Charset>macroman</Charset>
+    </collation>
+    <collation id="180" parent="1" name="macroman_general_nopad_ci">
+      <Charset>macroman</Charset>
+    </collation>
+    <collation id="181" parent="1" name="macroman_nopad_bin">
+      <Charset>macroman</Charset>
+    </collation>
+    <collation id="182" parent="1" name="cp852_general_ci">
+      <Charset>cp852</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="183" parent="1" name="cp852_bin">
+      <Charset>cp852</Charset>
+    </collation>
+    <collation id="184" parent="1" name="cp852_general_nopad_ci">
+      <Charset>cp852</Charset>
+    </collation>
+    <collation id="185" parent="1" name="cp852_nopad_bin">
+      <Charset>cp852</Charset>
+    </collation>
+    <collation id="186" parent="1" name="latin7_estonian_cs">
+      <Charset>latin7</Charset>
+    </collation>
+    <collation id="187" parent="1" name="latin7_general_ci">
+      <Charset>latin7</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="188" parent="1" name="latin7_general_cs">
+      <Charset>latin7</Charset>
+    </collation>
+    <collation id="189" parent="1" name="latin7_bin">
+      <Charset>latin7</Charset>
+    </collation>
+    <collation id="190" parent="1" name="latin7_general_nopad_ci">
+      <Charset>latin7</Charset>
+    </collation>
+    <collation id="191" parent="1" name="latin7_nopad_bin">
+      <Charset>latin7</Charset>
+    </collation>
+    <collation id="192" parent="1" name="utf8mb4_general_ci">
+      <Charset>utf8mb4</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="193" parent="1" name="utf8mb4_bin">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="194" parent="1" name="utf8mb4_unicode_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="195" parent="1" name="utf8mb4_icelandic_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="196" parent="1" name="utf8mb4_latvian_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="197" parent="1" name="utf8mb4_romanian_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="198" parent="1" name="utf8mb4_slovenian_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="199" parent="1" name="utf8mb4_polish_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="200" parent="1" name="utf8mb4_estonian_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="201" parent="1" name="utf8mb4_spanish_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="202" parent="1" name="utf8mb4_swedish_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="203" parent="1" name="utf8mb4_turkish_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="204" parent="1" name="utf8mb4_czech_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="205" parent="1" name="utf8mb4_danish_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="206" parent="1" name="utf8mb4_lithuanian_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="207" parent="1" name="utf8mb4_slovak_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="208" parent="1" name="utf8mb4_spanish2_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="209" parent="1" name="utf8mb4_roman_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="210" parent="1" name="utf8mb4_persian_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="211" parent="1" name="utf8mb4_esperanto_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="212" parent="1" name="utf8mb4_hungarian_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="213" parent="1" name="utf8mb4_sinhala_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="214" parent="1" name="utf8mb4_german2_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="215" parent="1" name="utf8mb4_croatian_mysql561_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="216" parent="1" name="utf8mb4_unicode_520_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="217" parent="1" name="utf8mb4_vietnamese_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="218" parent="1" name="utf8mb4_croatian_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="219" parent="1" name="utf8mb4_myanmar_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="220" parent="1" name="utf8mb4_thai_520_w2">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="221" parent="1" name="utf8mb4_general_nopad_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="222" parent="1" name="utf8mb4_nopad_bin">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="223" parent="1" name="utf8mb4_unicode_nopad_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="224" parent="1" name="utf8mb4_unicode_520_nopad_ci">
+      <Charset>utf8mb4</Charset>
+    </collation>
+    <collation id="225" parent="1" name="cp1251_bulgarian_ci">
+      <Charset>cp1251</Charset>
+    </collation>
+    <collation id="226" parent="1" name="cp1251_ukrainian_ci">
+      <Charset>cp1251</Charset>
+    </collation>
+    <collation id="227" parent="1" name="cp1251_bin">
+      <Charset>cp1251</Charset>
+    </collation>
+    <collation id="228" parent="1" name="cp1251_general_ci">
+      <Charset>cp1251</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="229" parent="1" name="cp1251_general_cs">
+      <Charset>cp1251</Charset>
+    </collation>
+    <collation id="230" parent="1" name="cp1251_nopad_bin">
+      <Charset>cp1251</Charset>
+    </collation>
+    <collation id="231" parent="1" name="cp1251_general_nopad_ci">
+      <Charset>cp1251</Charset>
+    </collation>
+    <collation id="232" parent="1" name="utf16_general_ci">
+      <Charset>utf16</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="233" parent="1" name="utf16_bin">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="234" parent="1" name="utf16_unicode_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="235" parent="1" name="utf16_icelandic_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="236" parent="1" name="utf16_latvian_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="237" parent="1" name="utf16_romanian_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="238" parent="1" name="utf16_slovenian_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="239" parent="1" name="utf16_polish_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="240" parent="1" name="utf16_estonian_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="241" parent="1" name="utf16_spanish_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="242" parent="1" name="utf16_swedish_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="243" parent="1" name="utf16_turkish_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="244" parent="1" name="utf16_czech_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="245" parent="1" name="utf16_danish_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="246" parent="1" name="utf16_lithuanian_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="247" parent="1" name="utf16_slovak_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="248" parent="1" name="utf16_spanish2_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="249" parent="1" name="utf16_roman_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="250" parent="1" name="utf16_persian_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="251" parent="1" name="utf16_esperanto_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="252" parent="1" name="utf16_hungarian_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="253" parent="1" name="utf16_sinhala_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="254" parent="1" name="utf16_german2_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="255" parent="1" name="utf16_croatian_mysql561_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="256" parent="1" name="utf16_unicode_520_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="257" parent="1" name="utf16_vietnamese_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="258" parent="1" name="utf16_croatian_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="259" parent="1" name="utf16_myanmar_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="260" parent="1" name="utf16_thai_520_w2">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="261" parent="1" name="utf16_general_nopad_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="262" parent="1" name="utf16_nopad_bin">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="263" parent="1" name="utf16_unicode_nopad_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="264" parent="1" name="utf16_unicode_520_nopad_ci">
+      <Charset>utf16</Charset>
+    </collation>
+    <collation id="265" parent="1" name="utf16le_general_ci">
+      <Charset>utf16le</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="266" parent="1" name="utf16le_bin">
+      <Charset>utf16le</Charset>
+    </collation>
+    <collation id="267" parent="1" name="utf16le_general_nopad_ci">
+      <Charset>utf16le</Charset>
+    </collation>
+    <collation id="268" parent="1" name="utf16le_nopad_bin">
+      <Charset>utf16le</Charset>
+    </collation>
+    <collation id="269" parent="1" name="cp1256_general_ci">
+      <Charset>cp1256</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="270" parent="1" name="cp1256_bin">
+      <Charset>cp1256</Charset>
+    </collation>
+    <collation id="271" parent="1" name="cp1256_general_nopad_ci">
+      <Charset>cp1256</Charset>
+    </collation>
+    <collation id="272" parent="1" name="cp1256_nopad_bin">
+      <Charset>cp1256</Charset>
+    </collation>
+    <collation id="273" parent="1" name="cp1257_lithuanian_ci">
+      <Charset>cp1257</Charset>
+    </collation>
+    <collation id="274" parent="1" name="cp1257_bin">
+      <Charset>cp1257</Charset>
+    </collation>
+    <collation id="275" parent="1" name="cp1257_general_ci">
+      <Charset>cp1257</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="276" parent="1" name="cp1257_nopad_bin">
+      <Charset>cp1257</Charset>
+    </collation>
+    <collation id="277" parent="1" name="cp1257_general_nopad_ci">
+      <Charset>cp1257</Charset>
+    </collation>
+    <collation id="278" parent="1" name="utf32_general_ci">
+      <Charset>utf32</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="279" parent="1" name="utf32_bin">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="280" parent="1" name="utf32_unicode_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="281" parent="1" name="utf32_icelandic_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="282" parent="1" name="utf32_latvian_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="283" parent="1" name="utf32_romanian_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="284" parent="1" name="utf32_slovenian_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="285" parent="1" name="utf32_polish_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="286" parent="1" name="utf32_estonian_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="287" parent="1" name="utf32_spanish_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="288" parent="1" name="utf32_swedish_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="289" parent="1" name="utf32_turkish_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="290" parent="1" name="utf32_czech_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="291" parent="1" name="utf32_danish_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="292" parent="1" name="utf32_lithuanian_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="293" parent="1" name="utf32_slovak_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="294" parent="1" name="utf32_spanish2_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="295" parent="1" name="utf32_roman_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="296" parent="1" name="utf32_persian_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="297" parent="1" name="utf32_esperanto_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="298" parent="1" name="utf32_hungarian_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="299" parent="1" name="utf32_sinhala_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="300" parent="1" name="utf32_german2_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="301" parent="1" name="utf32_croatian_mysql561_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="302" parent="1" name="utf32_unicode_520_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="303" parent="1" name="utf32_vietnamese_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="304" parent="1" name="utf32_croatian_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="305" parent="1" name="utf32_myanmar_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="306" parent="1" name="utf32_thai_520_w2">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="307" parent="1" name="utf32_general_nopad_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="308" parent="1" name="utf32_nopad_bin">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="309" parent="1" name="utf32_unicode_nopad_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="310" parent="1" name="utf32_unicode_520_nopad_ci">
+      <Charset>utf32</Charset>
+    </collation>
+    <collation id="311" parent="1" name="binary">
+      <Charset>binary</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="312" parent="1" name="geostd8_general_ci">
+      <Charset>geostd8</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="313" parent="1" name="geostd8_bin">
+      <Charset>geostd8</Charset>
+    </collation>
+    <collation id="314" parent="1" name="geostd8_general_nopad_ci">
+      <Charset>geostd8</Charset>
+    </collation>
+    <collation id="315" parent="1" name="geostd8_nopad_bin">
+      <Charset>geostd8</Charset>
+    </collation>
+    <collation id="316" parent="1" name="cp932_japanese_ci">
+      <Charset>cp932</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="317" parent="1" name="cp932_bin">
+      <Charset>cp932</Charset>
+    </collation>
+    <collation id="318" parent="1" name="cp932_japanese_nopad_ci">
+      <Charset>cp932</Charset>
+    </collation>
+    <collation id="319" parent="1" name="cp932_nopad_bin">
+      <Charset>cp932</Charset>
+    </collation>
+    <collation id="320" parent="1" name="eucjpms_japanese_ci">
+      <Charset>eucjpms</Charset>
+      <DefaultForCharset>1</DefaultForCharset>
+    </collation>
+    <collation id="321" parent="1" name="eucjpms_bin">
+      <Charset>eucjpms</Charset>
+    </collation>
+    <collation id="322" parent="1" name="eucjpms_japanese_nopad_ci">
+      <Charset>eucjpms</Charset>
+    </collation>
+    <collation id="323" parent="1" name="eucjpms_nopad_bin">
+      <Charset>eucjpms</Charset>
+    </collation>
+    <schema id="324" parent="1" name="information_schema">
+      <CollationName>utf8_general_ci</CollationName>
+    </schema>
+    <schema id="325" parent="1" name="badfood">
+      <CollationName>utf8mb4_general_ci</CollationName>
+    </schema>
+    <schema id="326" parent="1" name="caraccessories">
+      <Current>1</Current>
+      <IntrospectionTimestamp>2023-11-28.01:07:33</IntrospectionTimestamp>
+      <LocalIntrospectionTimestamp>2023-11-27.21:07:33</LocalIntrospectionTimestamp>
+      <CollationName>utf8mb4_general_ci</CollationName>
+    </schema>
+    <schema id="327" parent="1" name="goodfood">
+      <CollationName>utf8mb4_general_ci</CollationName>
+    </schema>
+    <schema id="328" parent="1" name="mysql">
+      <CollationName>utf8mb4_general_ci</CollationName>
+    </schema>
+    <schema id="329" parent="1" name="performance_schema">
+      <CollationName>utf8_general_ci</CollationName>
+    </schema>
+    <schema id="330" parent="1" name="phpmyadmin">
+      <CollationName>utf8_bin</CollationName>
+    </schema>
+    <schema id="331" parent="1" name="test">
+      <CollationName>latin1_swedish_ci</CollationName>
+    </schema>
+    <user id="332" parent="1" name="root">
+      <Host>localhost</Host>
+    </user>
+    <user id="333" parent="1" name="root">
+      <Host>127.0.0.1</Host>
+    </user>
+    <user id="334" parent="1" name="root">
+      <Host>::1</Host>
+    </user>
+    <user id="335" parent="1" name="pma">
+      <Host>localhost</Host>
+    </user>
+    <table id="336" parent="326" name="cart">
+      <Engine>InnoDB</Engine>
+      <CollationName>utf8mb4_general_ci</CollationName>
+    </table>
+    <table id="337" parent="326" name="history">
+      <Engine>InnoDB</Engine>
+      <CollationName>utf8mb4_general_ci</CollationName>
+    </table>
+    <table id="338" parent="326" name="install_request">
+      <Engine>InnoDB</Engine>
+      <CollationName>utf8mb4_general_ci</CollationName>
+    </table>
+    <table id="339" parent="326" name="productcatalog">
+      <Engine>InnoDB</Engine>
+      <CollationName>utf8mb4_general_ci</CollationName>
+    </table>
+    <table id="340" parent="326" name="systemusers">
+      <Engine>InnoDB</Engine>
+      <CollationName>utf8mb4_general_ci</CollationName>
+    </table>
+    <column id="341" parent="336" name="pid">
+      <DasType>int(11)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>1</Position>
+    </column>
+    <column id="342" parent="336" name="productName">
+      <DasType>varchar(200)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>2</Position>
+    </column>
+    <column id="343" parent="336" name="productType">
+      <DasType>varchar(25)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>3</Position>
+    </column>
+    <column id="344" parent="336" name="unitPrice">
+      <DasType>int(255)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>4</Position>
+    </column>
+    <column id="345" parent="336" name="quantity">
+      <DasType>int(3)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>5</Position>
+    </column>
+    <column id="346" parent="336" name="email">
+      <DasType>varchar(50)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>6</Position>
+    </column>
+    <column id="347" parent="337" name="pid">
+      <DasType>int(11)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>1</Position>
+    </column>
+    <column id="348" parent="337" name="productName">
+      <DasType>varchar(200)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>2</Position>
+    </column>
+    <column id="349" parent="337" name="productType">
+      <DasType>varchar(25)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>3</Position>
+    </column>
+    <column id="350" parent="337" name="unitPrice">
+      <DasType>int(255)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>4</Position>
+    </column>
+    <column id="351" parent="337" name="quantity">
+      <DasType>int(3)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>5</Position>
+    </column>
+    <column id="352" parent="337" name="email">
+      <DasType>varchar(50)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>6</Position>
+    </column>
+    <column id="353" parent="337" name="orderDate">
+      <DasType>timestamp(6)|0s</DasType>
+      <DefaultExpression>current_timestamp(6)</DefaultExpression>
+      <NotNull>1</NotNull>
+      <OnUpdate>current_timestamp(6)</OnUpdate>
+      <Position>7</Position>
+    </column>
+    <column id="354" parent="338" name="rid">
+      <AutoIncrement>3</AutoIncrement>
+      <DasType>int(11)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>1</Position>
+    </column>
+    <column id="355" parent="338" name="pid">
+      <DasType>int(11)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>2</Position>
+    </column>
+    <column id="356" parent="338" name="productName">
+      <DasType>varchar(200)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>3</Position>
+    </column>
+    <column id="357" parent="338" name="productType">
+      <DasType>varchar(25)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>4</Position>
+    </column>
+    <column id="358" parent="338" name="email">
+      <DasType>varchar(50)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>5</Position>
+    </column>
+    <column id="359" parent="338" name="carModel">
+      <DasType>varchar(255)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>6</Position>
+    </column>
+    <column id="360" parent="338" name="preferredDate">
+      <DasType>timestamp|0s</DasType>
+      <DefaultExpression>current_timestamp()</DefaultExpression>
+      <NotNull>1</NotNull>
+      <OnUpdate>current_timestamp()</OnUpdate>
+      <Position>7</Position>
+    </column>
+    <column id="361" parent="338" name="status">
+      <DasType>varchar(20)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>8</Position>
+    </column>
+    <column id="362" parent="338" name="assigned">
+      <DasType>varchar(50)|0s</DasType>
+      <Position>9</Position>
+    </column>
+    <index id="363" parent="338" name="PRIMARY">
+      <ColNames>rid</ColNames>
+      <Type>btree</Type>
+      <Unique>1</Unique>
+    </index>
+    <key id="364" parent="338" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <Primary>1</Primary>
+      <UnderlyingIndexName>PRIMARY</UnderlyingIndexName>
+    </key>
+    <column id="365" parent="339" name="id">
+      <AutoIncrement>9</AutoIncrement>
+      <DasType>int(11)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>1</Position>
+    </column>
+    <column id="366" parent="339" name="productName">
+      <DasType>varchar(200)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>2</Position>
+    </column>
+    <column id="367" parent="339" name="productType">
+      <DasType>varchar(25)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>3</Position>
+    </column>
+    <column id="368" parent="339" name="productPrice">
+      <DasType>int(255)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>4</Position>
+    </column>
+    <column id="369" parent="339" name="image">
+      <DasType>varchar(1250)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>5</Position>
+    </column>
+    <column id="370" parent="339" name="isAvilable">
+      <DasType>tinyint(1)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>6</Position>
+    </column>
+    <index id="371" parent="339" name="PRIMARY">
+      <ColNames>id</ColNames>
+      <Type>btree</Type>
+      <Unique>1</Unique>
+    </index>
+    <key id="372" parent="339" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <Primary>1</Primary>
+      <UnderlyingIndexName>PRIMARY</UnderlyingIndexName>
+    </key>
+    <column id="373" parent="340" name="id">
+      <AutoIncrement>8</AutoIncrement>
+      <DasType>int(11)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>1</Position>
+    </column>
+    <column id="374" parent="340" name="user_email">
+      <DasType>varchar(50)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>2</Position>
+    </column>
+    <column id="375" parent="340" name="user_password">
+      <DasType>varchar(20)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>3</Position>
+    </column>
+    <column id="376" parent="340" name="user_type">
+      <DasType>varchar(25)|0s</DasType>
+      <NotNull>1</NotNull>
+      <Position>4</Position>
+    </column>
+    <index id="377" parent="340" name="PRIMARY">
+      <ColNames>id</ColNames>
+      <Type>btree</Type>
+      <Unique>1</Unique>
+    </index>
+    <index id="378" parent="340" name="user_email">
+      <ColNames>user_email</ColNames>
+      <Type>btree</Type>
+      <Unique>1</Unique>
+    </index>
+    <key id="379" parent="340" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <Primary>1</Primary>
+      <UnderlyingIndexName>PRIMARY</UnderlyingIndexName>
+    </key>
+    <key id="380" parent="340" name="user_email">
+      <UnderlyingIndexName>user_email</UnderlyingIndexName>
+    </key>
+  </database-model>
+</dataSource>
\ No newline at end of file
Index: src/main/java/CarAccessiores/connectDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\nimport java.sql.SQLException;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\n\r\npublic class connectDB {\r\n\r\n\tprotected Connection connection; \r\n\t\r\n\tpublic void testConn() throws SQLException {\r\n\r\n        try {\r\n            Class.forName(\"com.mysql.cj.jdbc.Driver\");\r\n            \t\tconnection=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/caraccessories\",\"root\",\"\");\r\n            \t\tSystem.out.print(\"connected to DB done successfully\");\r\n        } catch (ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n\r\n        }\r\n    }\r\n\r\n\tpublic Connection getConnection() \r\n\t{\r\n\t\treturn connection;\r\n\t}\t\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/CarAccessiores/connectDB.java b/src/main/java/CarAccessiores/connectDB.java
--- a/src/main/java/CarAccessiores/connectDB.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/main/java/CarAccessiores/connectDB.java	(date 1703174184731)
@@ -17,10 +17,9 @@
         try {
             Class.forName("com.mysql.cj.jdbc.Driver");
             		connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/caraccessories","root","");
-            		System.out.print("connected to DB done successfully");
+            		//System.out.print("connected to DB done successfully");
         } catch (ClassNotFoundException e) {
             e.printStackTrace();
-
         }
     }
 
Index: src/main/java/CarAccessiores/admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.util.logging.Logger;\r\n\r\npublic class admin extends User {\r\n    static final Logger logger = Logger.getLogger(Main.class.getName());\r\n\r\n    public admin(String userEmail,String userPassword) {\r\n        super(userEmail,userPassword);\r\n    }\r\n\r\n    public void add(String email, String Upass) throws SQLException\r\n    {\r\n        String sql = \"INSERT INTO systemusers (user_email,user_password,user_type) VALUES (? , ? , ?)\";\r\n        connectDB conDB = new connectDB();\r\n        //the new user is added\r\n\r\n        conDB.testConn();\r\n        try(PreparedStatement stmt = conDB.getConnection().prepareStatement(sql)){\r\n            stmt.setString(1, email);\r\n            stmt.setString(2, Upass);\r\n            stmt.setString(3, \"customer\");\r\n            int rowsAffected = stmt.executeUpdate();\r\n\r\n            if (rowsAffected > 0) {\r\n                logger.info(\"User added successfully.\");\r\n\r\n            } else {\r\n                logger.warning(\"\\nsome thing went wrong please try again later\");\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    public void UpdatePass(String email, String Upass) throws SQLException {\r\n        String sql = \"UPDATE systemusers SET `user_password`= ? WHERE `user_email` = ?\";\r\n        connectDB conDB = new connectDB();\r\n        //the new user is added\r\n        conDB.testConn();\r\n        try(PreparedStatement stmt = conDB.getConnection().prepareStatement(sql)){\r\n            stmt.setString(1,Upass);\r\n            stmt.setString(2, email);\r\n            int rowsAffected = stmt.executeUpdate();\r\n\r\n            if (rowsAffected > 0) {\r\n                logger.info(\"the password updated successfully.\");\r\n\r\n            } else {\r\n                logger.warning(\"\\nsome thing went wrong please try again later\");\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    public void DeleteUser(String email) throws SQLException\r\n    {\r\n        String sql = \"DELETE FROM systemusers WHERE `user_email` = ?\";\r\n\r\n        connectDB conDB = new connectDB();\r\n        //the new user is added\r\n\r\n        conDB.testConn();\r\n        try(PreparedStatement stmt = conDB.getConnection().prepareStatement(sql)){\r\n            stmt.setString(1,email);\r\n            int rowsAffected = stmt.executeUpdate();\r\n\r\n            if (rowsAffected > 0) {\r\n                logger.info(\"User deleted successfully.\");\r\n\r\n            } else {\r\n                logger.warning(\"\\nsome thing went wrong please try again later\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/CarAccessiores/admin.java b/src/main/java/CarAccessiores/admin.java
--- a/src/main/java/CarAccessiores/admin.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/main/java/CarAccessiores/admin.java	(date 1703174616222)
@@ -1,19 +1,28 @@
 package CarAccessiores;
 
+
+
 import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.ResultSetMetaData;
 import java.sql.SQLException;
+import java.util.logging.Level;
 import java.util.logging.Logger;
 
 public class admin extends User {
-    static final Logger logger = Logger.getLogger(Main.class.getName());
+
+    private ProductCat cat;
+    static final Logger logger = Logger.getLogger(admin.class.getName());
+    String sql;
+    int rowsAffected;
 
     public admin(String userEmail,String userPassword) {
         super(userEmail,userPassword);
+        cat=new ProductCat();
     }
 
-    public void add(String email, String Upass) throws SQLException
-    {
-        String sql = "INSERT INTO systemusers (user_email,user_password,user_type) VALUES (? , ? , ?)";
+    public void addCustomer(String email, String Upass) throws SQLException {
+        sql = "INSERT INTO systemusers (user_email,user_password,user_type) VALUES (? , ? , ?)";
         connectDB conDB = new connectDB();
         //the new user is added
 
@@ -22,7 +31,7 @@
             stmt.setString(1, email);
             stmt.setString(2, Upass);
             stmt.setString(3, "customer");
-            int rowsAffected = stmt.executeUpdate();
+            rowsAffected = stmt.executeUpdate();
 
             if (rowsAffected > 0) {
                 logger.info("User added successfully.");
@@ -30,62 +39,350 @@
             } else {
                 logger.warning("\nsome thing went wrong please try again later");
             }
-
         }
-
-
-
-
     }
 
     public void UpdatePass(String email, String Upass) throws SQLException {
-        String sql = "UPDATE systemusers SET `user_password`= ? WHERE `user_email` = ?";
+        sql = "UPDATE systemusers SET `user_password`= ? WHERE `user_email` = ?";
         connectDB conDB = new connectDB();
-        //the new user is added
         conDB.testConn();
         try(PreparedStatement stmt = conDB.getConnection().prepareStatement(sql)){
             stmt.setString(1,Upass);
             stmt.setString(2, email);
-            int rowsAffected = stmt.executeUpdate();
+            rowsAffected = stmt.executeUpdate();
 
             if (rowsAffected > 0) {
                 logger.info("the password updated successfully.");
 
             } else {
-                logger.warning("\nsome thing went wrong please try again later");
+                logger.warning("\n some thing went wrong please try again later");
             }
 
         }
 
-
-
-
     }
 
-    public void DeleteUser(String email) throws SQLException
-    {
-        String sql = "DELETE FROM systemusers WHERE `user_email` = ?";
-
+    public void updateEmail(String mail, String newEmail) throws SQLException {
+        sql = "UPDATE systemusers SET `user_email`= ? WHERE `user_email` = ?";
         connectDB conDB = new connectDB();
-        //the new user is added
+        conDB.testConn();
+        try(PreparedStatement stmt = conDB.getConnection().prepareStatement(sql)){
+            stmt.setString(1,newEmail);
+            stmt.setString(2, mail);
+            rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("the email updated successfully.");
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+
+        }
+    }
+
+    public void DeleteUser(String email) throws SQLException {
+        sql = "DELETE FROM systemusers WHERE user_email = ?";
+
+        connectDB conDB = new connectDB();
+
 
         conDB.testConn();
         try(PreparedStatement stmt = conDB.getConnection().prepareStatement(sql)){
             stmt.setString(1,email);
-            int rowsAffected = stmt.executeUpdate();
+            rowsAffected = stmt.executeUpdate();
 
             if (rowsAffected > 0) {
                 logger.info("User deleted successfully.");
 
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+
+
+        }
+
+
+
+
+    }
+
+    public void showProductCatalog() throws SQLException {
+        cat.show_products_catalog_toAdmin(this);
+    }
+
+    public void addProduct(String productName, String productType, int productPrice) throws SQLException {
+        sql = "INSERT INTO productcatalog (productName, productType, productPrice, isAvilable) VALUES (?, ?, ?, ?)";
+        connectDB connection= new connectDB();
+        connection.testConn();
+        try(PreparedStatement stmt = connection.getConnection().prepareStatement(sql)){
+            stmt.setString(1,productName);
+            stmt.setString(2,productType);
+            stmt.setInt(3,productPrice);
+            stmt.setInt(4,1);
+            rowsAffected = stmt.executeUpdate();
+            if (rowsAffected > 0) {
+                logger.info("Product added successfully.");
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+        }
+    }
+
+    public void isUnavailable(int pid) throws SQLException {
+        sql ="UPDATE productcatalog SET isAvailable = ? WHERE id = ?";
+        connectDB conn=new connectDB();
+        conn.testConn();
+        try(PreparedStatement stmt= conn.getConnection().prepareStatement(sql)){
+            stmt.setInt(1,0);
+            stmt.setInt(2,pid);
+            rowsAffected = stmt.executeUpdate();
+            if (rowsAffected > 0) {
+                logger.info("Product is now un available.");
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+        }
+    }
+
+    public void changeProductName(int pid,String newName) throws SQLException {
+        sql="UPDATE productcatalog SET productName = ? WHERE id = ?";
+        connectDB conn=new connectDB();
+        conn.testConn();
+        try(PreparedStatement stmt= conn.getConnection().prepareStatement(sql)){
+            stmt.setString(1,newName);
+            stmt.setInt(2,pid);
+            rowsAffected = stmt.executeUpdate();
+            if (rowsAffected > 0) {
+                logger.info("Product name updated.");
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+        }
+    }
+
+    public void changeProductType(int pid, String newType) throws SQLException {
+        sql="UPDATE productcatalog SET productType = ? WHERE id = ?";
+        connectDB conn=new connectDB();
+        conn.testConn();
+        try(PreparedStatement stmt= conn.getConnection().prepareStatement(sql)){
+            stmt.setString(1,newType);
+            stmt.setInt(2,pid);
+            rowsAffected = stmt.executeUpdate();
+            if (rowsAffected > 0) {
+                logger.info("Product type updated.");
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+        }
+    }
+
+    public void changeProductPrice(int pid, int newPrice) throws SQLException {
+        sql="UPDATE prosuctcatalog SET productPrice = ? WHERE id =? ";
+        connectDB conn=new connectDB();
+        conn.testConn();
+        try(PreparedStatement stmt= conn.getConnection().prepareStatement(sql)){
+            stmt.setInt(1,newPrice);
+            stmt.setInt(2,pid);
+            rowsAffected = stmt.executeUpdate();
+            if (rowsAffected > 0) {
+                logger.info("Product price updated.");
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+        }
+    }
+
+    public void deleteProduct(int pid) throws SQLException {
+        sql="DELETE FROM productcatalog WHERE id = ?";
+        connectDB conn=new connectDB();
+        conn.testConn();
+        try(PreparedStatement stmt= conn.getConnection().prepareStatement(sql)){
+            stmt.setInt(1,pid);
+            rowsAffected = stmt.executeUpdate();
+            if (rowsAffected > 0) {
+                logger.info("Product is deleted successfully.");
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+        }
+    }
+
+    public void showCustomer() throws SQLException {
+        logger.log(Level.INFO, "|        id       |   Customer Email   |");
+        sql="SELECT * FROM systemusers WHERE user_type = ?";
+        connectDB conn=new connectDB();
+        conn.testConn();
+        try(PreparedStatement stmt= conn.getConnection().prepareStatement(sql)){
+            stmt.setString(1,"customer");
+            try (ResultSet resultSet = stmt.executeQuery()) {
+                ResultSetMetaData metaData = resultSet.getMetaData();
+                int columnCount = metaData.getColumnCount();
+
+                while (resultSet.next()) {
+                    StringBuilder rowData = new StringBuilder();
+
+                    for (int i = 1; i <= 2; i++) {
+                        String columnValue = resultSet.getString(i);
+
+                        // Define a fixed width for each column and left-align the text
+                        int columnWidth = 18;
+                        String formattedValue = String.format("%-" + columnWidth + "s", columnValue);
+
+                        rowData.append(formattedValue);
+
+                        if (i < columnCount) {
+                            rowData.append("|"); // Add a vertical bar as a separator between columns
+                        }
+                    }
+
+                    logger.log(Level.INFO, rowData.toString());
+                }
+            }
+
+        }
+    }
+
+    public void showScheduledAppointments() throws SQLException {
+        sql = "SELECT `rid`,`productName`,`productType`,`email`,`carModel`,`preferredDate`,`status`" +
+                " FROM install_request WHERE status NOT IN ('canceled', 'completed');";
+        connectDB connection = new connectDB();
+        connection.testConn();
+        Logger logger = Logger.getLogger("ShowScheduled");
+
+        try (PreparedStatement stmt = connection.getConnection().prepareStatement(sql)) {
+
+            ResultSet rSet = stmt.executeQuery();
+            ResultSetMetaData metaData = rSet.getMetaData();
+            int numberOfColumns = metaData.getColumnCount();
+            String format = "| %-15s | %-20s | %-20s | %-35s | %-30s | %-20s | %-15s |%n";
+            logger.log(Level.INFO, String.format(format, "Request Number","Product Name", "Product Type", "Customer Email", "Car Model", "Installation Time", "Status"));
+            int[] columnWidths={15,20,20,35,30,20,15};
+
+            while (rSet.next()) {
+                StringBuilder rowData = new StringBuilder();
+
+                for (int i = 1; i <= numberOfColumns; i++) {
+
+                    if (i <= numberOfColumns) {
+
+                        String columnValue = rSet.getString(i);
+                        String formattedColumn = String.format("%-" + columnWidths[i-1] + "s", columnValue);
+                        rowData.append(formattedColumn);
+                        rowData.append(" | "); // Add separator between columns
+                    }
+                }
+                logger.log(Level.INFO, String.format("| %-15s ", rowData.toString()));
+            }
+        }
+    }
+
+    public void scheduleNewAppointment(int rid, String mail,String time) throws SQLException {
+        assignTO(rid,mail);
+        setTime(rid,time);
+        set_scheduled(rid);
+
+    }
+    public void set_scheduled(int rid) throws SQLException {
+        sql="UPDATE install_request SET status = ? WHERE rid =?";
+        connectDB connection = new connectDB();
+        connection.testConn();
+        try(PreparedStatement stmt =connection.getConnection().prepareStatement(sql)){
+            stmt.setString(1,"scheduled");
+            stmt.setInt(2,rid);
+            rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request status updated to scheduled.");
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+
+        }
+
+    }
+
+    public void assignTO(int rid,String Email) throws SQLException {
+        sql = "UPDATE install_request SET assigned = ? WHERE rid =?";
+        connectDB connection = new connectDB();
+        connection.testConn();
+        try(PreparedStatement stmt =connection.getConnection().prepareStatement(sql)){
+            stmt.setString(1, Email);
+            stmt.setInt(2,rid);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request has been assigned to :"+Email);
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+
+        }
+    }
+
+    public void setTime(int rid,String time) throws SQLException {
+        sql = "UPDATE install_request SET preferredDate = TIMESTAMP(CONCAT(CAST(DATE(preferredDate) AS DATE), ' ', ?))"+
+                " WHERE rid=?";
+        connectDB connection = new connectDB();
+        connection.testConn();
+        try(PreparedStatement stmt =connection.getConnection().prepareStatement(sql)){
+            stmt.setString(1,time);
+            stmt.setInt(2,rid);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request time scheduled.");
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+
+        }
+    }
+
+    public void setStatusToCompleted(int rid) throws SQLException {
+        sql ="UPDATE install_request SET status = ? WHERE rid =?";
+        connectDB connection = new connectDB();
+        connection.testConn();
+        try(PreparedStatement stmt =connection.getConnection().prepareStatement(sql)){
+            stmt.setString(1,"completed");
+            stmt.setInt(2,rid);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request status updated to completed.");
+
+            } else {
+                logger.warning("\nsome thing went wrong please try again later");
+            }
+
+        }
+    }
+
+    public void setStatusToCanceled(int rid) throws SQLException {
+        sql ="UPDATE install_request SET status = ? WHERE rid =?";
+        connectDB connection = new connectDB();
+        connection.testConn();
+        try(PreparedStatement stmt =connection.getConnection().prepareStatement(sql)){
+            stmt.setString(1,"canceled");
+            stmt.setInt(2,rid);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request status updated to canceled.");
+
             } else {
                 logger.warning("\nsome thing went wrong please try again later");
             }
 
-
         }
-
-
-
-
     }
 }
Index: .idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/caraccessories.3Lbd6A.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/caraccessories.3Lbd6A.meta b/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/caraccessories.3Lbd6A.meta
new file mode 100644
--- /dev/null	(date 1703174050837)
+++ b/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/caraccessories.3Lbd6A.meta	(date 1703174050837)
@@ -0,0 +1,2 @@
+#n:caraccessories
+!<md> [1701126453000, 0, null, null, -2147483648, -2147483648]
Index: src/main/java/CarAccessiores/customer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.ResultSetMetaData;\r\nimport java.sql.SQLException;\r\nimport java.text.ParseException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\nimport java.sql.Timestamp;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.Scanner;\r\n\r\npublic class customer extends User {\r\n    private UserLoginPage user;\r\n    private ProductCat cat;\r\n    private static final Logger logger = Logger.getLogger(ProductCat.class.getName());\r\n    public customer(String userEmail,String userPassword) {\r\n        super(userEmail,userPassword);\r\n        user=new UserLoginPage(userEmail,userPassword);\r\n        cat=new ProductCat();\r\n    }\r\n\r\n    public void showHistory() throws SQLException {\r\n        String historySQL = \"SELECT `productName`,`productType`,`unitPrice`,`purchaseTime`\"+\r\n                            \"FROM history WHERE email=? \";\r\n        logger.log(Level.INFO,\"| product name | product type | unit price | quantity | order date |\");\r\n        connectDB DataBase =new connectDB();\r\n        DataBase.testConn();\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n        try(PreparedStatement stmnt=DataBase.getConnection().prepareStatement(historySQL);){\r\n            stmnt.setString(1,user.getUser_email());\r\n            ResultSet rSet = stmnt.executeQuery();\r\n            ResultSetMetaData metaData= rSet.getMetaData();\r\n            int NumberOfColumns= metaData.getColumnCount();\r\n            while(rSet.next()){\r\n                for (int i = 1; i <= NumberOfColumns-1; i++) {\r\n                    logger.log(Level.INFO,rSet.getString(i));\r\n                }\r\n                Date date = rSet.getDate(\"purchaseTime\");\r\n                String formattedDate = dateFormat.format(date);\r\n                logger.log(Level.INFO,formattedDate+\"\\n\");\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    public boolean calatogAvailable(){\r\n        boolean returnValue=false;\r\n        try {\r\n            returnValue= cat.system_is_found_catalog();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    public void ShowCatalogToCustomer() throws SQLException{\r\n        cat.show_products_catalog_toUser(user);\r\n    }\r\n\r\n    public void AddToCart(int id,int Quantity) throws SQLException\r\n    {\r\n        String CARTsql = \"INSERT INTO cart (pid,productName,productType,unitPrice,quantity,email)\"+\r\n                     \"SELECT `id`,`producName`,`productType`,`productPrice`,?,?\"+\r\n                     \"FROM ProductCatalog WHERE id =?\";\r\n        connectDB connDataBase = new connectDB();\r\n        connDataBase.testConn();\r\n        try(PreparedStatement stmt = connDataBase.getConnection().prepareStatement(CARTsql)){\r\n            stmt.setInt(1, Quantity);\r\n            stmt.setString(2, user.getUser_email());\r\n            stmt.setInt(3,id);\r\n        }\r\n    }\r\n\r\n    public void viewCart() throws SQLException\r\n    {\r\n        String ShowCart=\"SELECT `pid`,`productName`,`productType`,`unitPrice`,`quantity`\"+\r\n                        \"FROM cart WHERE email =?\";\r\n        logger.log(Level.INFO,\"| id | product name | product type | unit price | quantity |\");\r\n        connectDB connDataBase =new connectDB();\r\n        connDataBase.testConn();\r\n        try(PreparedStatement stmnt=connDataBase.getConnection().prepareStatement(ShowCart);){\r\n            stmnt.setString(1,user.getUser_email());\r\n            ResultSet rSet = stmnt.executeQuery();\r\n            ResultSetMetaData metaData= rSet.getMetaData();\r\n            int NumberOfColumns= metaData.getColumnCount();\r\n            while(rSet.next()){\r\n                for (int i = 1; i <= NumberOfColumns; i++) {\r\n                    logger.log(Level.INFO,rSet.getString(i));\r\n                }\r\n                logger.log(Level.INFO,\"\\n\");\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void checkOut() throws SQLException\r\n    {\r\n        //this function should move the orders from the cart to the history with date and time of the order purchase\r\n        String checkOutSql= \"INSERT INTO history(pid,productName,productType,unitPrice,quantity,email,orderDate)\"+\r\n                            \"SELECT `pid`,`productName`,`productType`,`unitPrice`,`quantity`,`email`,?\"+\r\n                            \"FROM cart WHERE email =?\";\r\n        String delteOrderFromCart= \"DELETE FROM cart\" +\r\n                                   \"WHERE email =?;\";\r\n        connectDB conDB= new connectDB();\r\n        conDB.testConn();\r\n        Timestamp currentTimestamp = new Timestamp(new Date().getTime());\r\n        try(PreparedStatement stmt = conDB.getConnection().prepareStatement(checkOutSql)){\r\n            stmt.setTimestamp(1,currentTimestamp);\r\n            stmt.setString(2,user.getUser_email());\r\n        }\r\n        try (PreparedStatement stmt = conDB.getConnection().prepareStatement(delteOrderFromCart)){\r\n            stmt.setString(1,user.getUser_email());\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    public int showProfile() {\r\n        logger.log(Level.INFO,\"| 1-Change Email |\\n|2-Change password|\\n|3-View order history|\\n|4-View installation requests|\\n|5-Go back to the main menu|\");\r\n        //the user will enter the corresponding number of the action wanted to be performed\r\n        Scanner scanner = new Scanner(System.in);\r\n        int userChoice = scanner.nextInt();\r\n        scanner.close();\r\n        return userChoice;\r\n\r\n    }\r\n\r\n    public void installationRequest(int id,String carModel,String installationDate) throws SQLException,ParseException  {\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n        Date Date = dateFormat.parse(installationDate);\r\n\r\n\r\n        String creatRequest=\"INSERT INTO install_request (pid,productName,productType,email,carModel,preferredDate,status)\"+\r\n                            \"SELECT `pid`,`productName`,`productType`,`email`,?,?,?\"+\r\n                            \"FROM ProductCatalog WHERE email=?\";\r\n        Timestamp date = new Timestamp(Date.getTime());\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(creatRequest)){\r\n            stmt.setString(1,carModel);\r\n            stmt.setTimestamp(2,date);\r\n            stmt.setString(3,\"pending\");\r\n            stmt.setString(4, user.getUser_email());\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void showScheduled() throws SQLException {\r\n        String query=\"SELECT `rid`,`pid`,`productName`,`productType`,`carModel`,`assigned`,`preferredDate`,`status`\"+\r\n                     \"FROM install_request WHERE status =? AND email =?\";\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        logger.log(Level.INFO,\"| request number | product id | product type | installer email | car model | installation date and time | status |\");\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(query)){\r\n            stmt.setString(1,\"scheduled\");\r\n            stmt.setString(2, user.getUser_email());\r\n            ResultSet rSet = stmt.executeQuery();\r\n            ResultSetMetaData metaData= rSet.getMetaData();\r\n            int NumberOfColumns= metaData.getColumnCount();\r\n            while(rSet.next()){\r\n                for (int i = 1; i <= NumberOfColumns; i++) {\r\n                    logger.log(Level.INFO,rSet.getString(i));\r\n                }\r\n                logger.log(Level.INFO,\"\\n\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public void showCompleted() throws SQLException {\r\n        String query=\"SELECT `rid`,`pid`,`productName`,`productType`,`carModel`,`assigned`,`preferredDate`,`status`\"+\r\n                \"FROM install_request WHERE status =? AND email =?\";\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        logger.log(Level.INFO,\"| request number | product id | product type | installer email | car model | installation date and time | status |\");\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(query)){\r\n            stmt.setString(1,\"completed\");\r\n            stmt.setString(2, user.getUser_email());\r\n            ResultSet rSet = stmt.executeQuery();\r\n            ResultSetMetaData metaData= rSet.getMetaData();\r\n            int NumberOfColumns= metaData.getColumnCount();\r\n            while(rSet.next()){\r\n                for (int i = 1; i <= NumberOfColumns; i++) {\r\n                    logger.log(Level.INFO,rSet.getString(i));\r\n                }\r\n                logger.log(Level.INFO,\"\\n\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public void showCanceled() throws SQLException {\r\n        String query=\"SELECT `rid`,`pid`,`productName`,`productType`,`carModel`,`assigned`,`preferredDate`,`status`\"+\r\n                \"FROM install_request WHERE status =? AND email =?\";\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        logger.log(Level.INFO,\"| request number | product id | product type | installer email | car model | installation date and time | status |\");\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(query)){\r\n            stmt.setString(1,\"canceled\");\r\n            stmt.setString(2, user.getUser_email());\r\n            ResultSet rSet = stmt.executeQuery();\r\n            ResultSetMetaData metaData= rSet.getMetaData();\r\n            int NumberOfColumns= metaData.getColumnCount();\r\n            while(rSet.next()){\r\n                for (int i = 1; i <= NumberOfColumns; i++) {\r\n                    logger.log(Level.INFO,rSet.getString(i));\r\n                }\r\n                logger.log(Level.INFO,\"\\n\");\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/CarAccessiores/customer.java b/src/main/java/CarAccessiores/customer.java
--- a/src/main/java/CarAccessiores/customer.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/main/java/CarAccessiores/customer.java	(date 1703174185386)
@@ -15,33 +15,53 @@
 public class customer extends User {
     private UserLoginPage user;
     private ProductCat cat;
+    private String pass;
     private static final Logger logger = Logger.getLogger(ProductCat.class.getName());
     public customer(String userEmail,String userPassword) {
         super(userEmail,userPassword);
+        pass = userPassword;
         user=new UserLoginPage(userEmail,userPassword);
         cat=new ProductCat();
     }
 
+    public void ShowPersonalInfo() {
+        logger.info("Personal Information ");
+        logger.info("Email: " + user.getUser_email());
+    }
+
+
     public void showHistory() throws SQLException {
-        String historySQL = "SELECT `productName`,`productType`,`unitPrice`,`purchaseTime`"+
-                            "FROM history WHERE email=? ";
-        logger.log(Level.INFO,"| product name | product type | unit price | quantity | order date |");
-        connectDB DataBase =new connectDB();
+        String historySQL = "SELECT `productName`,`productType`,`unitPrice`,`orderDate`" +
+                " FROM history WHERE email=? ";
+        connectDB DataBase = new connectDB();
         DataBase.testConn();
+        Logger logger = Logger.getLogger("ShowHistory");
         SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
-        try(PreparedStatement stmnt=DataBase.getConnection().prepareStatement(historySQL);){
-            stmnt.setString(1,user.getUser_email());
+
+        try (PreparedStatement stmnt = DataBase.getConnection().prepareStatement(historySQL)) {
+            stmnt.setString(1, user.getUser_email());
             ResultSet rSet = stmnt.executeQuery();
-            ResultSetMetaData metaData= rSet.getMetaData();
-            int NumberOfColumns= metaData.getColumnCount();
-            while(rSet.next()){
-                for (int i = 1; i <= NumberOfColumns-1; i++) {
-                    logger.log(Level.INFO,rSet.getString(i));
+            ResultSetMetaData metaData = rSet.getMetaData();
+            int numberOfColumns = metaData.getColumnCount();
+            String format = "| %-20s | %-15s | %-10s | %-12s |%n";
+            logger.log(Level.INFO, String.format(format, "Product Name", "Product Type", "Unit Price", "Order Date"));
+            int[] columnWidths={20,15,10,12};
+            while (rSet.next()) {
+                StringBuilder rowData = new StringBuilder();
+                for (int i = 1; i < numberOfColumns; i++) {
+                    String columnValue = rSet.getString(i);
+                    String formattedColumn = String.format("%-" + columnWidths[i-1] + "s", columnValue);
+                    rowData.append(formattedColumn);
+                    rowData.append(" | "); // Add separator between columns
+
                 }
-                Date date = rSet.getDate("purchaseTime");
-                String formattedDate = dateFormat.format(date);
-                logger.log(Level.INFO,formattedDate+"\n");
+                Date date = rSet.getDate("orderDate");
+                String formattedDateTime = dateFormat.format(date);
+                String [] dateTimeSplit=formattedDateTime.split("\\s+");
+                String onlydate =dateTimeSplit[0];
+                rowData.append(onlydate);
 
+                logger.info(String.format("| %-20s   |%n", rowData));
             }
 
         }
@@ -62,10 +82,9 @@
         cat.show_products_catalog_toUser(user);
     }
 
-    public void AddToCart(int id,int Quantity) throws SQLException
-    {
+    public void AddToCart(int id,int Quantity) throws SQLException {
         String CARTsql = "INSERT INTO cart (pid,productName,productType,unitPrice,quantity,email)"+
-                     "SELECT `id`,`producName`,`productType`,`productPrice`,?,?"+
+                     "SELECT `id`,`productName`,`productType`,`productPrice`,?,?"+
                      "FROM ProductCatalog WHERE id =?";
         connectDB connDataBase = new connectDB();
         connDataBase.testConn();
@@ -73,40 +92,53 @@
             stmt.setInt(1, Quantity);
             stmt.setString(2, user.getUser_email());
             stmt.setInt(3,id);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("added to the cart successfully.");
+
+            } else {
+                logger.warning("\nsome thing went wrong please try again later");
+            }
         }
     }
 
-    public void viewCart() throws SQLException
-    {
-        String ShowCart="SELECT `pid`,`productName`,`productType`,`unitPrice`,`quantity`"+
-                        "FROM cart WHERE email =?";
-        logger.log(Level.INFO,"| id | product name | product type | unit price | quantity |");
-        connectDB connDataBase =new connectDB();
+    public void viewCart() throws SQLException {
+        String showCart = "SELECT `pid`,`productName`,`productType`,`unitPrice`,`quantity` FROM cart WHERE email =?";
+        connectDB connDataBase = new connectDB();
         connDataBase.testConn();
-        try(PreparedStatement stmnt=connDataBase.getConnection().prepareStatement(ShowCart);){
-            stmnt.setString(1,user.getUser_email());
+        Logger logger = Logger.getLogger("ViewCart");
+
+        try (PreparedStatement stmnt = connDataBase.getConnection().prepareStatement(showCart)) {
+            stmnt.setString(1, user.getUser_email());
             ResultSet rSet = stmnt.executeQuery();
-            ResultSetMetaData metaData= rSet.getMetaData();
-            int NumberOfColumns= metaData.getColumnCount();
-            while(rSet.next()){
-                for (int i = 1; i <= NumberOfColumns; i++) {
-                    logger.log(Level.INFO,rSet.getString(i));
-                }
-                logger.log(Level.INFO,"\n");
-            }
+            ResultSetMetaData metaData = rSet.getMetaData();
+            int numberOfColumns = metaData.getColumnCount();
+            String format = "| %-15s | %-30s | %-15s | %-10s | %-10s |%n";
+            logger.log(Level.INFO, String.format("| %-5s | %-30s | %-15s | %-10s | %-10s |%n", "ID", "Product Name", "Product Type", "Unit Price", "Quantity"));
+            int[] columnWidths={5,30,15,10,10};
+            while (rSet.next()) {
+                StringBuilder rowData = new StringBuilder();
+                for (int i = 1; i <= numberOfColumns; i++) {
+                    String columnValue = rSet.getString(i);
+                    String formattedColumn = String.format("%-" + columnWidths[i-1] + "s", columnValue);
+                    rowData.append(formattedColumn);
+                    if (i < numberOfColumns) {
+                        rowData.append(" | "); // Add separator between columns
+                    }
+                }
 
+                logger.info(String.format("| %-5s  |%n", rowData));
+            }
         }
-
-
     }
 
-    public void checkOut() throws SQLException
-    {
+    public void checkOut() throws SQLException {
         //this function should move the orders from the cart to the history with date and time of the order purchase
         String checkOutSql= "INSERT INTO history(pid,productName,productType,unitPrice,quantity,email,orderDate)"+
                             "SELECT `pid`,`productName`,`productType`,`unitPrice`,`quantity`,`email`,?"+
                             "FROM cart WHERE email =?";
-        String delteOrderFromCart= "DELETE FROM cart" +
+        String delteOrderFromCart= "DELETE FROM cart " +
                                    "WHERE email =?;";
         connectDB conDB= new connectDB();
         conDB.testConn();
@@ -114,9 +146,25 @@
         try(PreparedStatement stmt = conDB.getConnection().prepareStatement(checkOutSql)){
             stmt.setTimestamp(1,currentTimestamp);
             stmt.setString(2,user.getUser_email());
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The order is processing.");
+
+            } else {
+                logger.warning("\nsome thing went wrong please try again later");
+            }
         }
         try (PreparedStatement stmt = conDB.getConnection().prepareStatement(delteOrderFromCart)){
             stmt.setString(1,user.getUser_email());
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The order is placed successfully.");
+
+            } else {
+                logger.warning("\nsome thing went wrong please try again later");
+            }
         }
 
 
@@ -124,11 +172,16 @@
     }
 
     public int showProfile() {
-        logger.log(Level.INFO,"| 1-Change Email |\n|2-Change password|\n|3-View order history|\n|4-View installation requests|\n|5-Go back to the main menu|");
+        //the full functionality will be added soon
+        //logger.log(Level.INFO,"| 1-Change Email |\n|2-Change password|\n|3-View order history|\n|4-View installation requests|\n|5-Go back to the main menu|");
+        // logger.log(Level.INFO,"| 1-View order history|\n|2-View installation requests history|\n|3-Go back to the main menu|");
+        logger.info("=== Option  Menu ===");
+        logger.info("Sub-option 1 View order history");
+        logger.info("Sub-option 2 View installation requests history");
+        logger.info("Sub-option 3 Go back to the main menu");
         //the user will enter the corresponding number of the action wanted to be performed
         Scanner scanner = new Scanner(System.in);
         int userChoice = scanner.nextInt();
-        scanner.close();
         return userChoice;
 
     }
@@ -139,81 +192,195 @@
 
 
         String creatRequest="INSERT INTO install_request (pid,productName,productType,email,carModel,preferredDate,status)"+
-                            "SELECT `pid`,`productName`,`productType`,`email`,?,?,?"+
-                            "FROM ProductCatalog WHERE email=?";
+                            "SELECT `id`,`productName`,`productType`,?,?,?,?"+
+                            "FROM ProductCatalog WHERE id=?";
+        String customer_email=user.getUser_email();
+        String query ="SELECT * FROM ProductCatalog WHERE id=?";
+        String orderName;
         Timestamp date = new Timestamp(Date.getTime());
         connectDB connection = new connectDB();
         connection.testConn();
         try(PreparedStatement stmt =connection.getConnection().prepareStatement(creatRequest)){
-            stmt.setString(1,carModel);
-            stmt.setTimestamp(2,date);
-            stmt.setString(3,"pending");
-            stmt.setString(4, user.getUser_email());
+            stmt.setString(2,carModel);
+            stmt.setTimestamp(3,date);
+            stmt.setString(4,"pending");
+            stmt.setString(1, user.getUser_email());
+            stmt.setInt(5,id);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request placed successfully.");
+                try(PreparedStatement stmnt =connection.getConnection().prepareStatement(query)){
+                    stmnt.setInt(1,id);
+                    ResultSet rs= stmnt.executeQuery();
+                    orderName="";
+                    while(rs.next()) {
+                        orderName = rs.getString("productName");
+                    }
+
+                }
+                SendNotificationViaEmail toCustomerEmail = new SendNotificationViaEmail();
+                String emailMessageTOCustomer = "Dear Customer,\n\n"
+                        + "We hope this email finds you well. We would like inform you that your installation request is under process  \n\n"
+                        + "Here are your request information"
+                        + "Part to be installed: " + orderName + "\n"
+                        + "Preferred Date: " + installationDate + "\n"
+                        + "Our team will contact you shortly\n\n"
+                        + "Thank you,\nCar Accessories Company";
+
+                toCustomerEmail.sendNotificationToCustomer(customer_email, emailMessageTOCustomer);
+
+            } else {
+                logger.warning("\nsome thing went wrong please try again later");
+            }
         }
 
 
     }
 
     public void showScheduled() throws SQLException {
-        String query="SELECT `rid`,`pid`,`productName`,`productType`,`carModel`,`assigned`,`preferredDate`,`status`"+
-                     "FROM install_request WHERE status =? AND email =?";
+        String query =  "SELECT `rid`,`pid`,`productName`,`productType`,`carModel`,`assigned`,`preferredDate`,`status`" +
+                        " FROM install_request WHERE status =? and email = ? ";
         connectDB connection = new connectDB();
         connection.testConn();
-        logger.log(Level.INFO,"| request number | product id | product type | installer email | car model | installation date and time | status |");
-        try(PreparedStatement stmt =connection.getConnection().prepareStatement(query)){
-            stmt.setString(1,"scheduled");
+        Logger logger = Logger.getLogger("ShowScheduled");
+
+        try (PreparedStatement stmt = connection.getConnection().prepareStatement(query)) {
+            stmt.setString(1, "scheduled");
             stmt.setString(2, user.getUser_email());
             ResultSet rSet = stmt.executeQuery();
-            ResultSetMetaData metaData= rSet.getMetaData();
-            int NumberOfColumns= metaData.getColumnCount();
-            while(rSet.next()){
-                for (int i = 1; i <= NumberOfColumns; i++) {
-                    logger.log(Level.INFO,rSet.getString(i));
+            ResultSetMetaData metaData = rSet.getMetaData();
+            int numberOfColumns = metaData.getColumnCount();
+            String format = "| %-15s | %-10s | %-15s | %-20s | %-15s | %-30s | %-10s |%n";
+            logger.log(Level.INFO, String.format(format, "Request Number", "Product ID", "Product Type", "Installer Email", "Car Model", "Installation Date", "Status"));
+            //logger.info(" "+numberOfColumns+"");
+            int[] columnWidths={15,10,15,20,15,30,10};
+
+            while (rSet.next()) {
+                StringBuilder rowData = new StringBuilder();
+
+
+                for (int i = 1; i <= numberOfColumns; i++) {
+                    String columnValue = rSet.getString(i);
+                    String formattedColumn = String.format("%-" + columnWidths[i-1] + "s", columnValue);
+                    rowData.append(formattedColumn);
+                    rowData.append(" | "); // Add separator between columns
                 }
-                logger.log(Level.INFO,"\n");
+                logger.log(Level.INFO, String.format("| %-5s |", rowData.toString()));
             }
         }
     }
 
     public void showCompleted() throws SQLException {
-        String query="SELECT `rid`,`pid`,`productName`,`productType`,`carModel`,`assigned`,`preferredDate`,`status`"+
-                "FROM install_request WHERE status =? AND email =?";
+        String query = "SELECT `rid`,`pid`,`productName`,`productType`,`carModel`,`assigned`,`preferredDate`,`status`" +
+                " FROM install_request WHERE status =? AND email =?";
         connectDB connection = new connectDB();
         connection.testConn();
-        logger.log(Level.INFO,"| request number | product id | product type | installer email | car model | installation date and time | status |");
-        try(PreparedStatement stmt =connection.getConnection().prepareStatement(query)){
-            stmt.setString(1,"completed");
+        Logger logger = Logger.getLogger("ShowCompleted");
+
+        try (PreparedStatement stmt = connection.getConnection().prepareStatement(query)) {
+            stmt.setString(1, "completed");
             stmt.setString(2, user.getUser_email());
             ResultSet rSet = stmt.executeQuery();
-            ResultSetMetaData metaData= rSet.getMetaData();
-            int NumberOfColumns= metaData.getColumnCount();
-            while(rSet.next()){
-                for (int i = 1; i <= NumberOfColumns; i++) {
-                    logger.log(Level.INFO,rSet.getString(i));
+            ResultSetMetaData metaData = rSet.getMetaData();
+            int numberOfColumns = metaData.getColumnCount();
+            String format = "| %-15s | %-10s | %-15s | %-20s | %-15s | %-30s | %-10s |%n";
+
+            logger.log(Level.INFO, String.format(format, "Request Number", "Product ID", "Product Type", "Installer Email", "Car Model", "Installation Date", "Status"));
+
+            while (rSet.next()) {
+                StringBuilder rowData = new StringBuilder();
+
+                for (int i = 1; i <= numberOfColumns; i++) {
+                    rowData.append(rSet.getString(i));
+                    if (i < numberOfColumns) {
+                        rowData.append(" ");
+                    }
                 }
-                logger.log(Level.INFO,"\n");
+
+                logger.log(Level.INFO, String.format(format, rowData.toString()));
             }
         }
     }
 
     public void showCanceled() throws SQLException {
-        String query="SELECT `rid`,`pid`,`productName`,`productType`,`carModel`,`assigned`,`preferredDate`,`status`"+
-                "FROM install_request WHERE status =? AND email =?";
+        String query = "SELECT `rid`,`pid`,`productName`,`productType`,`carModel`,`assigned`,`preferredDate`,`status`" +
+                " FROM install_request WHERE status =? AND email =?";
         connectDB connection = new connectDB();
         connection.testConn();
-        logger.log(Level.INFO,"| request number | product id | product type | installer email | car model | installation date and time | status |");
-        try(PreparedStatement stmt =connection.getConnection().prepareStatement(query)){
-            stmt.setString(1,"canceled");
+        Logger logger = Logger.getLogger("ShowCanceled");
+
+        try (PreparedStatement stmt = connection.getConnection().prepareStatement(query)) {
+            stmt.setString(1, "canceled");
             stmt.setString(2, user.getUser_email());
             ResultSet rSet = stmt.executeQuery();
-            ResultSetMetaData metaData= rSet.getMetaData();
-            int NumberOfColumns= metaData.getColumnCount();
-            while(rSet.next()){
-                for (int i = 1; i <= NumberOfColumns; i++) {
-                    logger.log(Level.INFO,rSet.getString(i));
+            ResultSetMetaData metaData = rSet.getMetaData();
+            int numberOfColumns = metaData.getColumnCount();
+            String format = "| %-15s | %-10s | %-15s | %-20s | %-15s | %-30s | %-10s |%n";
+            logger.log(Level.INFO, String.format(format, "Request Number", "Product ID", "Product Type", "Installer Email", "Car Model", "Installation Date", "Status"));
+
+            while (rSet.next()) {
+                StringBuilder rowData = new StringBuilder();
+
+                for (int i = 1; i <= numberOfColumns; i++) {
+                    rowData.append(rSet.getString(i));
+                    if (i < numberOfColumns) {
+                        rowData.append(" ");
+                    }
                 }
-                logger.log(Level.INFO,"\n");
+                logger.log(Level.INFO, String.format(format, rowData.toString()));
             }
         }
+    }
+
+    public void showAllRequests() throws SQLException {
+        String query = "SELECT `rid`,`pid`,`productName`,`productType`,`carModel`,`assigned`,`preferredDate`,`status`" +
+                " FROM install_request WHERE  email =?";
+        connectDB connection = new connectDB();
+        connection.testConn();
+        Logger logger = Logger.getLogger("ShowCanceled");
+
+        try (PreparedStatement stmt = connection.getConnection().prepareStatement(query)) {
+            stmt.setString(1, user.getUser_email());
+            ResultSet rSet = stmt.executeQuery();
+            ResultSetMetaData metaData = rSet.getMetaData();
+            int numberOfColumns = metaData.getColumnCount();
+            String format = "| %-15s | %-10s | %-15s | %-20s | %-15s | %-30s | %-10s |%n";
+            logger.log(Level.INFO, String.format(format, "Request Number", "Product ID", "Product Type", "Installer Email", "Car Model", "Installation Date", "Status"));
+
+            while (rSet.next()) {
+                StringBuilder rowData = new StringBuilder();
+
+                for (int i = 1; i <= numberOfColumns; i++) {
+                    rowData.append(rSet.getString(i));
+                    if (i < numberOfColumns) {
+                        rowData.append(" ");
+                    }
+                }
+                logger.log(Level.INFO, String.format(format, rowData.toString()));
+            }
+        }
+    }
+
+    public void changeEmail(String newEmail) throws SQLException {
+        String sql = "UPDATE systemusers SET user_email = ? WHERE user_email = ?";
+        connectDB conDB = new connectDB();
+        conDB.testConn();
+        try(PreparedStatement stmt = conDB.getConnection().prepareStatement(sql)){
+            stmt.setString(2, user.getUser_email());
+            stmt.setString(1, newEmail);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("the email updated successfully.");
+
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+
+        }
+        user=null;
+        user=new UserLoginPage(newEmail,pass);
+
     }
 }
Index: src/main/java/CarAccessiores/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\n\r\nimport java.sql.SQLException;\r\nimport java.util.Scanner;\r\nimport java.util.logging.Logger;\r\n\r\npublic class Main {\r\n    static Scanner scanner = new Scanner(System.in);\r\n    static final Logger logger = Logger.getLogger(Main.class.getName());\r\n\r\n    public static void main(String[] args) throws SQLException\r\n    {\r\n\r\n        logger.info(\"Enter useremail : \");\r\n        String user_email = scanner.next();\r\n        logger.info(\"Enter password : \");\r\n        String user_password = scanner.next();\r\n        String email;\r\n        String password;\r\n        int choice=0;\r\n\r\n        UserLoginPage loginP = new UserLoginPage(user_email , user_password);\r\n        loginP.is_valid_credentials(user_email, user_password);\r\n        if(loginP.Admin_is_login){\r\n            admin Admin=new admin(user_email,user_password);\r\n            logger.info(\"Welcome to roel management menu \\n\");\r\n            while(choice!=4) {\r\n                logger.info(\"1-add new user 2-change password for existing user 3-delete a user 4-back to main menu \\n please enter a number\\n \");\r\n                choice = scanner.nextInt();\r\n                switch (choice) {\r\n                    case 1:\r\n                        logger.info(\"please enter an email for the user you want to add: \");\r\n                        email = scanner.next();\r\n                        logger.info(\"please enter the password for the user you want to add: \");\r\n                        password = scanner.next();\r\n                        try {\r\n                            Admin.add(email, password);\r\n                        }\r\n                        catch (SQLException e) {\r\n                            logger.warning(\"\\nsome thing went wrong please try again later\");\r\n                            break;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        logger.info(\"please enter an email for the user you want to edit: \");\r\n                        email = scanner.next();\r\n                        logger.info(\"please enter the new password for the user : \");\r\n                        password = scanner.next();\r\n                        try {\r\n\r\n                            Admin.UpdatePass(email, password);\r\n                        }\r\n                        catch (SQLException e) {\r\n                            logger.warning(\"some thing went wrong please try again later\");\r\n                            break;\r\n                        }\r\n                        logger.info(\"the user password updated successfully : \");\r\n                        break;\r\n                    case 3:\r\n                        logger.info(\"please enter the email of the user you want to delete: \");\r\n                        email = scanner.next();\r\n                        try {\r\n\r\n                            Admin.DeleteUser(email);\r\n                        }\r\n                        catch (SQLException e) {\r\n                            logger.warning(\"some thing went wrong please try again later\");\r\n                            break;\r\n                        }\r\n                        logger.info(\"the user deleted successfully : \");\r\n                        break;\r\n                    case 4:\r\n                        logger.info(\"you will be redirected soon\");\r\n                        break;\r\n                    default:\r\n                        logger.warning(\"invalid choice please try again\");\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/CarAccessiores/Main.java b/src/main/java/CarAccessiores/Main.java
--- a/src/main/java/CarAccessiores/Main.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/main/java/CarAccessiores/Main.java	(date 1703174186898)
@@ -1,86 +1,533 @@
-package CarAccessiores;
-
-
+package CarAccessiores; 
 import java.sql.SQLException;
+import java.text.ParseException;
 import java.util.Scanner;
 import java.util.logging.Logger;
+import java.util.logging.ConsoleHandler;
 
-public class Main {
-    static Scanner scanner = new Scanner(System.in);
-    static final Logger logger = Logger.getLogger(Main.class.getName());
+public class Main // to delete
+{
+	static Scanner scan = new Scanner(System.in);
+	static Scanner str = new Scanner(System.in);
+	static Scanner strin= new Scanner(System.in);
+	static final Logger logger = Logger.getLogger(Main.class.getName());
 
-    public static void main(String[] args) throws SQLException
-    {
-
-        logger.info("Enter useremail : ");
-        String user_email = scanner.next();
-        logger.info("Enter password : ");
-        String user_password = scanner.next();
-        String email;
-        String password;
-        int choice=0;
-
-        UserLoginPage loginP = new UserLoginPage(user_email , user_password);
-        loginP.is_valid_credentials(user_email, user_password);
-        if(loginP.Admin_is_login){
-            admin Admin=new admin(user_email,user_password);
-            logger.info("Welcome to roel management menu \n");
-            while(choice!=4) {
-                logger.info("1-add new user 2-change password for existing user 3-delete a user 4-back to main menu \n please enter a number\n ");
-                choice = scanner.nextInt();
-                switch (choice) {
-                    case 1:
-                        logger.info("please enter an email for the user you want to add: ");
-                        email = scanner.next();
-                        logger.info("please enter the password for the user you want to add: ");
-                        password = scanner.next();
-                        try {
-                            Admin.add(email, password);
-                        }
-                        catch (SQLException e) {
-                            logger.warning("\nsome thing went wrong please try again later");
-                            break;
-                        }
-                        break;
-                    case 2:
-                        logger.info("please enter an email for the user you want to edit: ");
-                        email = scanner.next();
-                        logger.info("please enter the new password for the user : ");
-                        password = scanner.next();
-                        try {
+	public static void main(String[] args) throws SQLException
+	{
+		Logger logger = Logger.getLogger("");
+		for (java.util.logging.Handler handler : logger.getHandlers()) {
+			logger.removeHandler(handler);
+		}
+		ConsoleHandler consoleHandler = new ConsoleHandler();
+		CustomLogFormatter customFormatter = new CustomLogFormatter();
+		consoleHandler.setFormatter(customFormatter);
+		logger.addHandler(consoleHandler);
+		logger.info("---------------------------------------------------------");
+		logger.info("-         Welcome to our Car Accessories Company        -");
+		logger.info("-                                                       -");
+		logger.info("-   Login                                 SignUp        -");
+		logger.info("-                                    * New Account *    -");
+		logger.info("-    (1)                                    (0)         -");
+		logger.info("-                                                       -");
+		logger.info("---------------------------------------------------------");
+		
+		while(true) {
+			
+			Scanner scanner = new Scanner(System.in);
+			if(scanner.nextInt()==0)
+			{
+				logger.info("Enter user Email :");
+				String newUserEmail = scanner.next();
+				logger.info("Enter user password : ");
+				String newUserPassword = scanner.next();
+				String customer = "customer";
+				registeration reg = new registeration();
+				reg.setData(newUserEmail, newUserPassword , customer);
+			}
+			else 
+			{	
+			logger.info("Enter user Email : ");
+			String user_email = scanner.next();
+			logger.info("Enter user Password : ");
+			String user_password = scanner.next();
+
+			UserLoginPage loginP = new UserLoginPage(user_email , user_password);
+			ProductCat catalog = new ProductCat();
+
+			loginP.is_valid_credentials(user_email, user_password);
+
+			if(loginP.is_Admin_logged())
+			{
+				int choice=0;
+				String email;
+				String password;
+				String temp1;
+				String temp2;
+				int temp3=0;
+				admin Admin=new admin(user_email,user_password);
+				logger.info("The Admin entered the site");
+				boolean adminLogFlag = true;
+				logger.info("==============================================");
+				logger.info("            WELCOME TO OUR MENU");
+				logger.info("==============================================");
+				logger.info("Option 1 - Show Products Catalog .");
+				logger.info("Option 2 - Search and filter options to easily find products.");
+				logger.info("Option 3 - Admin role management menu.");
+				logger.info("Option 4 - Show admin dashboard.");
+				logger.info("Option 5 - Admin Logout the site.");
+				logger.info("==============================================");
+				while(adminLogFlag)
+				{
+
+					int selectedListValue = scan.nextInt();
+
+					switch(selectedListValue)
+					{
+						case 1: logger.info("You select Option 1 :");
+							catalog.show_products_catalog_toUser(loginP);
+							logger.info("You can also choose from the menu : ");
+							break;
+
+						case 2: logger.info("You select Option 2 :");
+							logger.info("Pleas The Product that you want to search about it : ");
+							String selectProduct = str.nextLine();
+							logger.info("Please The Filterd price for an selected product  : ");
+							String selectPrice = str.nextLine();
+							catalog.search_and_show_filtered_result(selectProduct,selectPrice);
+							logger.info("You can also choose from the menu : ");
+							break;
+						case 3:
+							while(choice!=4){
+								//logger.info("1-add new user \n2-change password for existing user \n3-delete a user \n4-back to main menu \n please enter a number\n ");
+								logger.info("=== Option 3 Menu ===");
+								logger.info("Sub-option 1 - Add new user to the system");
+								logger.info("Sub-option 2 - Change password for existing user");
+								logger.info("Sub-option 3 - Delete a user ");
+								logger.info("Sub-option 4 - Back to main menu ");
+								choice = scanner.nextInt();
+								switch (choice) {
+									case 1:
+										logger.info("please enter an email for the user you want to add: ");
+										email = scanner.next();
+										logger.info("please enter the password for the user you want to add: ");
+										password = scanner.next();
+										try {
+											Admin.addCustomer(email, password);
+										}
+										catch (SQLException e) {
+											logger.warning("\nsome thing went wrong please try again later");
+											break;
+										}
+										break;
+									case 2:
+										logger.info("please enter an email for the user you want to edit: ");
+										email = scanner.next();
+										logger.info("please enter the new password for the user : ");
+										password = scanner.next();
+										try {
 
-                            Admin.UpdatePass(email, password);
-                        }
-                        catch (SQLException e) {
-                            logger.warning("some thing went wrong please try again later");
-                            break;
-                        }
-                        logger.info("the user password updated successfully : ");
-                        break;
-                    case 3:
-                        logger.info("please enter the email of the user you want to delete: ");
-                        email = scanner.next();
-                        try {
+											Admin.UpdatePass(email, password);
+										}
+										catch (SQLException e) {
+											logger.warning("some thing went wrong please try again later");
+											break;
+										}
+										logger.info("the user password updated successfully : ");
+										break;
+									case 3:
+										logger.info("please enter the email of the user you want to delete: ");
+										email = scanner.next();
+										try {
 
-                            Admin.DeleteUser(email);
-                        }
-                        catch (SQLException e) {
-                            logger.warning("some thing went wrong please try again later");
-                            break;
-                        }
-                        logger.info("the user deleted successfully : ");
-                        break;
-                    case 4:
-                        logger.info("you will be redirected soon");
-                        break;
-                    default:
-                        logger.warning("invalid choice please try again");
-                        break;
-                }
-            }
-        }
+											Admin.DeleteUser(email);
+										}
+										catch (SQLException e) {
+											logger.warning("some thing went wrong please try again later");
+											break;
+										}
+										logger.info("the user deleted successfully : ");
+										break;
+									case 4:
+										logger.info("you will be redirected soon");
+										break;
+									default:
+										logger.warning("invalid choice please try again");
+										break;
+								}
+
+							}
+							break;
+						case 4:
+							choice =0;
+							while(choice !=4) {
+								logger.info("=== Admin dashboard ===");
+								logger.info(" 1 - Manage product Product listing.");
+								logger.info(" 2 - View and manage customer accounts.");
+								logger.info(" 3 - Schedule and manage installation appointments. ");
+								logger.info(" 4 - Back to main menu. ");
+								choice = scanner.nextInt();
+								switch (choice) {
+									case 1:
+										Admin.showProductCatalog();
+										logger.info("=== Product management options ===");
+										logger.info(" 1 - Add new product");
+										logger.info(" 2 - Edit current product");
+										logger.info(" 3 - Delete a product");
+										logger.info(" 4 - Back to the dashboard");
+										choice= scanner.nextInt();
+										switch(choice){
+											case 1:
+												logger.info("please enter the product name: ");
+												String Temp1= str.nextLine();
+												logger.info("please enter the product type: ");
+												temp2= str.nextLine();
+												logger.info("please enter the product price: ");
+												temp3= scanner.nextInt();
+												Admin.addProduct(Temp1,temp2,temp3);
+												break;
+											case 2 :
+												logger.info("=== Product edit options ===");
+												logger.info(" 1 -Rename a product");
+												logger.info(" 2- Change product type");
+												logger.info(" 3- Change product price");
+												logger.info(" 4- Make product unavailable");
+												choice = scanner.nextInt();
+												logger.info("please enter the product id you want to edit: ");
+												temp3 = scanner.nextInt();
+												switch(choice){
+													case 1:
+														logger.info("please enter the new name for the product: ");
+														temp2=str.nextLine();
+														Admin.changeProductName(temp3,temp2);
+														break;
+													case 2:
+														logger.info("please enter the new type for the product: ");
+														temp2=str.nextLine();
+														Admin.changeProductType(temp3,temp2);
+														break;
+													case 3:
+														logger.info("please enter the new price for the product: ");
+														int price= str.nextInt();
+														Admin.changeProductPrice(temp3,price);
+														break;
+													case 4:
+														Admin.isUnavailable(temp3);
+														choice=0;
+														break;
+												}
+												break;
+											case 3:
+												logger.info("Please enter the product id you want to delete:");
+												temp3= scanner.nextInt();
+												Admin.deleteProduct(temp3);
+												break;
+											case 4:
+												choice=0;
+												break;
+											default :
+												logger.info("unavailable choice");
+												break;
+
+
+										}
+										break;
+									case 2:
+										Admin.showCustomer();
+										logger.info("please enter the mail of the user you want to edit: ");
+										String Cemail= strin.nextLine();
+										logger.info("If you want to change the password for the customer press 1");
+										logger.info("If you want to change the email for the customer press 2");
+										temp3=scanner.nextInt();
+										if(temp3==1){
+											logger.info("please enter the new password: ");
+											temp1=str.nextLine();
+											Admin.UpdatePass(Cemail,temp1);
+										}else if(temp3==2){
+											logger.info("please enter the new email: ");
+											temp1=scan.nextLine();
+											Admin.updateEmail(Cemail,temp1);
+										}else{
+											logger.info("invalid option");
+										}
+										break;
+									case 3:
+										Admin.showScheduledAppointments();
+										logger.info("=== Appointment management options ===");
+										logger.info(" 1 - Reschedule an appointment");
+										logger.info(" 2 - Mark as completed");
+										logger.info(" 3 - Mark as canceled");
+										logger.info(" 4 - Back to the dashboard");
+										temp3= scanner.nextInt();
+										switch(temp3){
+											case 1:
+												Scanner fathi = new Scanner(System.in);
+												Scanner samer = new Scanner(System.in);
+												Scanner apointTime = new Scanner(System.in);
+												logger.info("please enter the request ID you want to reschedule: ");
+												temp3= fathi.nextInt();
+												logger.info("please enter the email of the installer you want to assign the request to: ");
+												email= samer.nextLine();
+												logger.info("enter a time for the appointment in the following format HH:mm:ss");
+												temp1= apointTime.nextLine();
+												Admin.scheduleNewAppointment(temp3,email,temp1);
+//												fathi.close();
+//												samer.close();
+//												apointTime.close();
+												break;
+											case 2:
+												logger.info("please enter the request ID you want to mark as completed: ");
+												temp3= scanner.nextInt();
+												Admin.setStatusToCompleted(temp3);
+												break;
+											case 3:
+												logger.info("please enter the request ID you want to mark as canceled: ");
+												temp3= scanner.nextInt();
+												Admin.setStatusToCanceled(temp3);
+												break;
+											case 4:
+
+												break;
+											default:
+												logger.info("Invalid Choice !, Pleas try again");
+										}
+										break;
+									case 4:
+
+										break;
+									default:
+										logger.info("Invalid Choice !, Pleas try again");
+
+								}
+							}
+							break;
+						case 5: theAdminLogout(loginP);
+							adminLogFlag=false;
+							break;
+
+						default:logger.info("Invalid Choice !, Pleas try again");
+					}//end switch
+				}// end while(adminLogFlag)
+
+
+			}// end if(loginP.is_Admin_logged())
+
+
+
+			else if(loginP.is_Customer_logged())
+			{
+				String temp1;
+				customer Customer=new customer(user_email,user_password);
+				boolean customerLogFlag=true;
+				int choice=0;
+				logger.info("The Customer entered the site");
+				logger.info("==============================================");
+				logger.info("             WELCOME TO HALA CAR");
+				logger.info("==============================================");
+				logger.info("Option 1 - Show Products Catalog .");
+				logger.info("Option 2 - View shopping cart.");
+				logger.info("Option 3 - Customer Profile access.");
+				logger.info("Option 4 - Installation request menu.");
+				logger.info("Option 5 - Change email.");
+				logger.info("Option 6 - Show personal information.");
+				logger.info("Option 7 - Customer Logout the site.");
+				logger.info("==============================================");
+				while(customerLogFlag) {
+
+					choice= scanner.nextInt();
+					switch(choice){
+						case 1:
+							if(Customer.calatogAvailable()){
+								Customer.ShowCatalogToCustomer();
+								logger.info("enter 0 if you want to go back");
+								logger.info("please enter the id of the product you want to add to cart :");
+								int id= scanner.nextInt();
+								if(id!=0){
+									logger.info("how many pieces you want to add to the cart?");
+									int quantity= scanner.nextInt();
+									Customer.AddToCart(id,quantity);
+
+								}
+
+							}else{
+								logger.info("The catalog is currently not available please try again later");
+
+							}
+							break;
+						case 2:
+							try {
+								Customer.viewCart();
+								logger.info("if you want to check out please press 1 ");
+								int check = scanner.nextInt();
+								if(check==1){
+									Customer.checkOut();
+									break;
+								}
+
+							} catch (SQLException e) {
+								logger.info("something went wrong please try again later");
+								logger.info(String.format("%s",e));
+								break;
+							}
+						case 3:
+							int access=0;
+							while(access!=3) {
+								access=Customer.showProfile();
+								switch (access) {
+									case 1:
+										Customer.showHistory();
+										break;
+									case 2:
+										Customer.showCompleted();
+										break;
+								}
+							}
+							break;
+						case 4:
+							Scanner req =new Scanner(System.in);
+							int reqChoice=0;
+							logger.info("=== Option 4 Menu ===");
+							logger.info("Sub-option 1 - creat new installation request");
+							logger.info("Sub-option 2 - show scheduled requests");
+							logger.info("Sub-option 3 - show completed requests");
+							logger.info("Sub-option 4 - show canceled requests");
+							logger.info("Sub-option 5 - back to the main menu ");
+							while(reqChoice!=5) {
+
+								reqChoice= req.nextInt();
+								switch(reqChoice){
+
+									case 1:
+										logger.info("please enter the wanted product id :");
+										int pid=scanner.nextInt();
+										logger.info("please enter your car description (example: skoda octavia 2019):");
+										String carModel= str.nextLine();
+										logger.info("please enter the preferred date in the following format (dd-MM-yyyy)");
+										String date=str.nextLine();
+										try {
+											Customer.installationRequest(pid,carModel,date);
+										} catch (ParseException e) {
+											logger.warning("the date format is wrong try again please");
+										}
+										break;
+									case 2:
+										Customer.showScheduled();
+										break;
+									case 3:
+										Customer.showCompleted();
+										break;
+									case 4:
+										Customer.showCanceled();
+										break;
+									case 5:
+										break;
+									default:
+										logger.warning("invalid action please re enter the number");
+										break;
+
+								}
+
+							}
+							break;
+						case 5:
+							Scanner mahmoud = new Scanner(System.in);
+							logger.info("please enter your new email");
+							temp1=mahmoud.nextLine();
+							Customer.changeEmail(temp1);
+							break;
+						case 6:
+							Customer.ShowPersonalInfo();
+							break;
+						case 7:
+							logger.info("The Customer has left the site.");
+							customerLogFlag=false;
+							break;
+						default:
+							logger.info("invalid action please re enter the number");
+							break;
+					}
+
+				}
+			}
 
+			else if(loginP.Installer_is_login)
+			{
+				logger.info("The Installer entered the site");
+				installer Installer=new installer(user_email,user_password);
+				boolean installerLogFlag=true;
+				int choice=0;
+				logger.info("==============================================");
+				logger.info("             WELCOME TO HALA CAR");
+				logger.info("==============================================");
+				logger.info("Option 1 - Show pending requests.");
+				logger.info("Option 2 - Show assigned requests.");
+				logger.info("Option 3 - status check.");
+				logger.info("Option 4 - Installer Logout the site.");
+				logger.info("==============================================");
+				while(installerLogFlag){
+					int rid=0;
+					choice= scanner.nextInt();
+					switch(choice){
+						case 1:
+							Installer.showPending();
+							logger.info("enter 0 to go back to the main menu \nenter the request number to assign it to your self:");
+							rid=scanner.nextInt();
+							if(rid!=0){
+								logger.info("enter a time for the appointment in the following format HH:mm:ss");
+								String time= str.nextLine();
+								Installer.schedule(rid,time);
+							}
+							break;
+						case 2:
+							Installer.showAssigned();
+							logger.info("=== Option 2 Menu ===");
+							logger.info("Sub-option 1 if you want to mark a request as completed");
+							logger.info("Sub-option 2 if you want to cancel a request");
+							logger.info("Sub-option 3 to continue");
+							int temp= scanner.nextInt();
+							if(temp==1){
+								logger.info("please enter the request number you want to mark as completed");
+								rid= scanner.nextInt();
+								Installer.setCompleted(rid);
+							} else if (temp==2) {
+								logger.info("please enter the request number you want to cancel");
+								rid= scanner.nextInt();
+								Installer.setCanceled(rid);
+							}
+							break;
+						case 3:
+							logger.info("please enter the request number you want to check");
+							rid= scanner.nextInt();
+							String status= Installer.getStatus(rid);
+							logger.info("the status for the mentioned request number is: "+status);
+							break;
+						case 4:
+							logger.info("The Installer has left the site.");
+							installerLogFlag=false;
+							break;
+						default:
+							logger.info("invalid action please re enter the number");
+							break;
 
+					}
 
-    }
+				}
+
+			}
+
+			else
+			{
+				logger.info("User email and.or password in Correct , Pleas try agine");
+			}
+
+
+		}
+		}
+		
+	} // end first while loop
+	
+	public static void theAdminLogout(UserLoginPage login) throws SQLException {
+
+		login.Admin_logout();
+		logger.info("The Admin has left the site.");
+	}
 }
Index: .idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/mysql.osA4Bg.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/mysql.osA4Bg.meta b/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/mysql.osA4Bg.meta
new file mode 100644
--- /dev/null	(date 1703174050839)
+++ b/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/mysql.osA4Bg.meta	(date 1703174050839)
@@ -0,0 +1,2 @@
+#n:mysql
+!<md> [null, 0, null, null, -2147483648, -2147483648]
Index: .idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/information_schema.FNRwLQ.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/information_schema.FNRwLQ.meta b/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/information_schema.FNRwLQ.meta
new file mode 100644
--- /dev/null	(date 1703174050838)
+++ b/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/information_schema.FNRwLQ.meta	(date 1703174050838)
@@ -0,0 +1,2 @@
+#n:information_schema
+!<md> [null, 0, null, null, -2147483648, -2147483648]
Index: src/main/java/CarAccessiores/installer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\n\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.ResultSetMetaData;\r\nimport java.sql.SQLException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\n\r\npublic class installer extends User{\r\n    private static final Logger logger = Logger.getLogger(ProductCat.class.getName());\r\n    private UserLoginPage user;\r\n    public installer(String userEmail,String userPassword) {\r\n        super(userEmail,userPassword);\r\n        user=new UserLoginPage(userEmail,userPassword);\r\n\r\n    }\r\n\r\n    public void showPending() throws SQLException{\r\n        String query=\"SELECT `rid`,`pid`,`productName`,`productType`,`email`,`carModel`,`preferredDate`\"+\r\n                     \"FROM install_request WHERE status =?\";\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        logger.log(Level.INFO,\"| request number | product id | product type | requester email | car model | preferred date\");\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(query)){\r\n            stmt.setString(1,\"pending\");\r\n            ResultSet rSet = stmt.executeQuery();\r\n            ResultSetMetaData metaData= rSet.getMetaData();\r\n            int NumberOfColumns= metaData.getColumnCount();\r\n            while(rSet.next()){\r\n                for (int i = 1; i <= NumberOfColumns; i++) {\r\n                    logger.log(Level.INFO,rSet.getString(i));\r\n                }\r\n                logger.log(Level.INFO,\"\\n\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public void setTime(int id,String time) throws SQLException {\r\n        String updateTimeSQL = \"UPDATE install_request SET preferredDate = TIMESTAMP(CONCAT(CAST(DATE(preferredDate) AS DATE), ' ', ?))\"+\r\n                               \" WHERE rid=?\";\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(updateTimeSQL)){\r\n            stmt.setString(1,time);\r\n            stmt.setInt(2,id);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    public String getStatus(int id) throws SQLException {\r\n        String statusSQL = \"SELECT `status` FROM install_request WHERE rid=?\";\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(statusSQL)){\r\n            stmt.setInt(1,id);\r\n            ResultSet rSet = stmt.executeQuery();\r\n            String status= rSet.getString(\"status\");\r\n            return status;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void setScheduled(int id) throws SQLException {\r\n        String sche=\"UPDATE install_request SET status = ? WHERE rid =?\";\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(sche)){\r\n            stmt.setString(1,\"scheduled\");\r\n            stmt.setInt(2,id);\r\n\r\n        }\r\n    }\r\n\r\n    public void assign(int id) throws SQLException {\r\n        String assign =\"UPDATE install_request SET assigned = ? WHERE rid =?\";\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(assign)){\r\n            stmt.setString(1, user.getUser_email());\r\n            stmt.setInt(2,id);\r\n\r\n        }\r\n    }\r\n\r\n    public void schedule(int id, String time) throws SQLException {\r\n        setTime(id,time);//the time should be in the following format hh:mm:ss\r\n        setScheduled(id);//update the status to scheduled\r\n        assign(id);//assign the installation request to the installer\r\n    }\r\n\r\n    public void setCompleted(int id) throws SQLException {\r\n        //completed\r\n        String sche=\"UPDATE install_request SET status = ? WHERE rid =?\";\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(sche)){\r\n            stmt.setString(1,\"completed\");\r\n            stmt.setInt(2,id);\r\n\r\n        }\r\n    }\r\n\r\n    public void setCanceled(int id) throws SQLException {\r\n        String sche=\"UPDATE install_request SET status = ? WHERE rid =?\";\r\n        connectDB connection = new connectDB();\r\n        connection.testConn();\r\n        try(PreparedStatement stmt =connection.getConnection().prepareStatement(sche)){\r\n            stmt.setString(1,\"canceled\");\r\n            stmt.setInt(2,id);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/CarAccessiores/installer.java b/src/main/java/CarAccessiores/installer.java
--- a/src/main/java/CarAccessiores/installer.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/main/java/CarAccessiores/installer.java	(date 1703174186103)
@@ -5,35 +5,54 @@
 import java.sql.ResultSet;
 import java.sql.ResultSetMetaData;
 import java.sql.SQLException;
+import java.text.SimpleDateFormat;
+import java.util.Date;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
 
 public class installer extends User{
     private static final Logger logger = Logger.getLogger(ProductCat.class.getName());
+    private String orderName;
+    private String orderDate;
+    private String customer_email;
+    private String carModel;
+    private String requestID;
+    private String customerEmail;
+    private String installationTime;
     private UserLoginPage user;
     public installer(String userEmail,String userPassword) {
         super(userEmail,userPassword);
         user=new UserLoginPage(userEmail,userPassword);
 
+
     }
+
 
-    public void showPending() throws SQLException{
-        String query="SELECT `rid`,`pid`,`productName`,`productType`,`email`,`carModel`,`preferredDate`"+
-                     "FROM install_request WHERE status =?";
+    public void showPending() throws SQLException {
+        String query = "SELECT `rid`,`pid`,`productName`,`productType`,`email`,`carModel`,`preferredDate`" +
+                " FROM install_request WHERE status =?";
         connectDB connection = new connectDB();
         connection.testConn();
-        logger.log(Level.INFO,"| request number | product id | product type | requester email | car model | preferred date");
-        try(PreparedStatement stmt =connection.getConnection().prepareStatement(query)){
-            stmt.setString(1,"pending");
+        Logger logger = Logger.getLogger("ShowPending");
+
+        try (PreparedStatement stmt = connection.getConnection().prepareStatement(query)) {
+            stmt.setString(1, "pending");
             ResultSet rSet = stmt.executeQuery();
-            ResultSetMetaData metaData= rSet.getMetaData();
-            int NumberOfColumns= metaData.getColumnCount();
-            while(rSet.next()){
-                for (int i = 1; i <= NumberOfColumns; i++) {
-                    logger.log(Level.INFO,rSet.getString(i));
-                }
-                logger.log(Level.INFO,"\n");
+            ResultSetMetaData metaData = rSet.getMetaData();
+            int numberOfColumns = metaData.getColumnCount();
+            String format = "| %-15s | %-10s | %-15s | %-30s | %-15s | %-20s |%n";
+            logger.log(Level.INFO, String.format(format, "Request Number", "Product ID", "Product Type", "Requester Email", "Car Model", "Preferred Date"));
+
+            while (rSet.next()) {
+                int rid = rSet.getInt("rid");
+                int pid = rSet.getInt("pid");
+                String productName = rSet.getString("productName");
+                String productType = rSet.getString("productType");
+                String email = rSet.getString("email");
+                String carModel = rSet.getString("carModel");
+                String preferredDate = rSet.getString("preferredDate");
+                logger.log(Level.INFO, String.format(format, rid, pid, productName, email, carModel, preferredDate));
             }
         }
     }
@@ -41,15 +60,63 @@
     public void setTime(int id,String time) throws SQLException {
         String updateTimeSQL = "UPDATE install_request SET preferredDate = TIMESTAMP(CONCAT(CAST(DATE(preferredDate) AS DATE), ' ', ?))"+
                                " WHERE rid=?";
+        String query= "SELECT * FROM Install_request WHERE rid=?";
+        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
         connectDB connection = new connectDB();
         connection.testConn();
         try(PreparedStatement stmt =connection.getConnection().prepareStatement(updateTimeSQL)){
             stmt.setString(1,time);
             stmt.setInt(2,id);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request time scheduled.");
 
-        }
-    }
+                try(PreparedStatement stmnt=connection.getConnection().prepareStatement(query)){
+                    stmnt.setInt(1,id);
+                    ResultSet rs= stmnt.executeQuery();
+                    if(rs.next()) {
+                        orderName = rs.getString("productName");
+                        Date date = rs.getDate("preferredDate");
+                        orderDate = dateFormat.format(date);
+                        customer_email = rs.getString("email");
+                        carModel = rs.getString("carModel");
+                        requestID = rs.getString("rid");
+                        customerEmail = rs.getString("email");
+                    }
+                }
+                SendNotificationViaEmail toInstallerEmail = new SendNotificationViaEmail();
+                String emailMessageToInstaller = "Dear Installer,\n\n"
+                                + "We hope this email finds you well."
+                                + "We would like to inform you that one of your installation requests with request id number: "+requestID+" has been set to installation on a specific time.\n\n"
+                                + "Here are the request information :"
+                                + "Part to be installed: " + orderName + "\n"
+                                + "Car model :"+carModel+"\n"
+                                + "Date of installation: " + orderDate + "\n"
+                                + "Time of installation: " + installationTime + "\n"
+                                + "Customer Email: " + customer_email + "\n\n"
+                                + "Thank you,\nCar Accessories Company";
+                toInstallerEmail.sendNotificationToInstaller(user.getUser_email(), emailMessageToInstaller);
+                SendNotificationViaEmail toCustomerEmail = new SendNotificationViaEmail();
+                String emailMessageToCustomer =
+                                  "Dear Customer,\n\n"
+                                + "We would like to inform you that your installation request with request id number : "+requestID+" has been set to installation on a specific time.\n"
+                                + "Request information :\n"
+                                + "Part to be installed: "+orderName+"\n"
+                                + "Car model :"+carModel+"\n"
+                                + "Date of installation :"+ orderDate +"\n"
+                                + "Time of installation :"+ installationTime +"\n"
+                                + "Installer email :"+user.getUser_email()+"\n"
+                                + "Please feel free to contact your installer on his email\n\n"
+                                + "Thank you,\nCar Accessories Company";
+                toCustomerEmail.sendNotificationToCustomer(customerEmail,emailMessageToCustomer);
 
+            } else {
+                logger.warning("\n some thing went wrong please try again later");
+            }
+
+        }
+    }
 
     public String getStatus(int id) throws SQLException {
         String statusSQL = "SELECT `status` FROM install_request WHERE rid=?";
@@ -58,8 +125,12 @@
         try(PreparedStatement stmt =connection.getConnection().prepareStatement(statusSQL)){
             stmt.setInt(1,id);
             ResultSet rSet = stmt.executeQuery();
-            String status= rSet.getString("status");
-            return status;
+            if(rSet.next()) {
+                String status = rSet.getString("status");
+                return status;
+            }
+            return "request not found";
+
 
         }
 
@@ -72,48 +143,238 @@
         try(PreparedStatement stmt =connection.getConnection().prepareStatement(sche)){
             stmt.setString(1,"scheduled");
             stmt.setInt(2,id);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request status updated to scheduled.");
+
+            } else {
+                logger.warning("\nsome thing went wrong please try again later");
+            }
 
         }
     }
 
     public void assign(int id) throws SQLException {
         String assign ="UPDATE install_request SET assigned = ? WHERE rid =?";
+        String query= "SELECT * FROM Install_request WHERE rid=?";
         connectDB connection = new connectDB();
+        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
         connection.testConn();
         try(PreparedStatement stmt =connection.getConnection().prepareStatement(assign)){
             stmt.setString(1, user.getUser_email());
             stmt.setInt(2,id);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request has been assigned to :"+user.getUser_email());
+                try(PreparedStatement stmnt=connection.getConnection().prepareStatement(query)){
+                    stmnt.setInt(1,id);
+                    ResultSet rs= stmnt.executeQuery();
+                    orderName = rs.getString("productName");
+                    Date date = rs.getDate("preferredDate");
+                    String formatedDateTime=dateFormat.format(date);
+                    String [] dateTimeSplit = formatedDateTime.split("\\s+");
+                    installationTime = dateTimeSplit[1];
+                    orderDate = dateTimeSplit[0];
+                    customer_email = rs.getString("email");
+                    carModel = rs.getString("carModel");
+                    requestID = rs.getString("rid");
+                    customerEmail = rs.getString("email");
+                }
+                SendNotificationViaEmail toInstallerEmail = new SendNotificationViaEmail();
+                String emailMessageToInstaller =
+                        "Dear Installer,\n\n"
+                                + "We hope this email finds you well."
+                                + "We would like to inform you that the installation request with request id number: "+requestID+" has been assigned to you.\n\n"
+                                + "Here are the request information :"
+                                + "Part to be installed: " + orderName + "\n"
+                                + "Car model :"+carModel+"\n"
+                                + "Date of installation: " + orderDate + "\n"
+                                + "Customer Email: " + customer_email + "\n\n"
+                                + "Thank you,\nCar Accessories Company";
+                toInstallerEmail.sendNotificationToInstaller(user.getUser_email(), emailMessageToInstaller);
+                SendNotificationViaEmail toCustomerEmail = new SendNotificationViaEmail();
+                String emailMessageToCustomer =
+                        "Dear Customer,\n\n"
+                                + "We would like to inform you that your installation request with request id number : "+requestID+" has been assigned to one of our installers\n"
+                                + "Request information :\n"
+                                + "Part to be installed: "+orderName+"\n"
+                                + "Car model :"+carModel+"\n"
+                                + "Date of installation :"+ orderDate +"\n"
+                                + "Installer email :"+user.getUser_email()+"\n"
+                                + "Please feel free to contact your installer on his email\n\n"
+                                + "Thank you,\nCar Accessories Company";
+                toCustomerEmail.sendNotificationToCustomer(customerEmail,emailMessageToCustomer);
 
+            } else {
+                logger.warning("\nsome thing went wrong please try again later");
+            }
+
         }
+
     }
 
     public void schedule(int id, String time) throws SQLException {
-        setTime(id,time);//the time should be in the following format hh:mm:ss
-        setScheduled(id);//update the status to scheduled
-        assign(id);//assign the installation request to the installer
+        int length =time.length();
+        if(length==8) {
+            setTime(id, time);//the time should be in the following format hh:mm:ss
+            setScheduled(id);//update the status to scheduled
+            assign(id);//assign the installation request to the installer
+        }else{
+            logger.warning("wrong time format");
+            throw new RuntimeException("wrong time format");
+
+        }
     }
 
     public void setCompleted(int id) throws SQLException {
         //completed
         String sche="UPDATE install_request SET status = ? WHERE rid =?";
+        String query= "SELECT * FROM Install_request WHERE rid=?";
+        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
         connectDB connection = new connectDB();
         connection.testConn();
         try(PreparedStatement stmt =connection.getConnection().prepareStatement(sche)){
             stmt.setString(1,"completed");
             stmt.setInt(2,id);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request status updated to completed.");
+                try(PreparedStatement stmnt=connection.getConnection().prepareStatement(query)){
+                    stmnt.setInt(1,id);
+                    ResultSet rs= stmnt.executeQuery();
+                    if(rs.next()) {
+                        orderName = rs.getString("productName");
+                        Date date = rs.getDate("preferredDate");
+                        String formatedDateTime = dateFormat.format(date);
+                        String[] dateTimeSplit = formatedDateTime.split("\\s+");
+                        installationTime = dateTimeSplit[0];
+                        orderDate = dateTimeSplit[0];
+                        customer_email = rs.getString("email");
+                        carModel = rs.getString("carModel");
+                        requestID = rs.getString("rid");
+                        customerEmail = rs.getString("email");
+                    }
+                }
+                SendNotificationViaEmail toInstallerEmail = new SendNotificationViaEmail();
+                String emailMessageToInstaller = "Dear Installer,\n\n"
+                                + "We hope this email finds you well."
+                                + "We would like to inform you that set the status of the following  installation request with request id number: "+requestID+" to completed.\n\n"
+                                + "Here are the request information :"
+                                + "Part to be installed: " + orderName + "\n"
+                                + "Car model :"+carModel+"\n"
+                                + "Date of installation: " + orderDate + "\n"
+                                + "Customer Email: " + customer_email + "\n\n"
+                                + "Thank you,\nCar Accessories Company";
+                toInstallerEmail.sendNotificationToInstaller(user.getUser_email(), emailMessageToInstaller);
+                SendNotificationViaEmail toCustomerEmail = new SendNotificationViaEmail();
+                String emailMessageToCustomer = "Dear Customer,\n\n"
+                                + "We would like to inform you that the status of the following installation request with request id number : "+requestID+" has been updated to completed\n"
+                                + "Request information :\n"
+                                + "Part to be installed: "+orderName+"\n"
+                                + "Car model :"+carModel+"\n"
+                                + "Date of installation :"+ orderDate +"\n"
+                                + "Installer email :"+user.getUser_email()+"\n"
+                                + "Please feel free to contact us or your installer on his email\n\n"
+                                + "Thank you,\nCar Accessories Company";
+                toCustomerEmail.sendNotificationToCustomer(customerEmail,emailMessageToCustomer);
+
+            } else {
+                logger.warning("\nsome thing went wrong please try again later");
+            }
 
         }
     }
 
     public void setCanceled(int id) throws SQLException {
         String sche="UPDATE install_request SET status = ? WHERE rid =?";
+        String query= "SELECT * FROM Install_request WHERE rid=?";
+        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
         connectDB connection = new connectDB();
         connection.testConn();
         try(PreparedStatement stmt =connection.getConnection().prepareStatement(sche)){
             stmt.setString(1,"canceled");
             stmt.setInt(2,id);
+            int rowsAffected = stmt.executeUpdate();
+
+            if (rowsAffected > 0) {
+                logger.info("The request status updated to canceled.");
+                try(PreparedStatement stmnt=connection.getConnection().prepareStatement(query)){
+                    stmnt.setInt(1,id);
+                    ResultSet rs= stmnt.executeQuery();
+                    if(rs.next()) {
+                        orderName = rs.getString("productName");
+                        Date date = rs.getDate("preferredDate");
+                        String formatedDateTime = dateFormat.format(date);
+                        String[] dateTimeSplit = formatedDateTime.split("\\s+");
+                        installationTime = dateTimeSplit[1];
+                        orderDate = dateTimeSplit[0];
+                        customer_email = rs.getString("email");
+                        carModel = rs.getString("carModel");
+                        requestID = rs.getString("rid");
+                        customerEmail = rs.getString("email");
+                    }
+                }
+                SendNotificationViaEmail toInstallerEmail = new SendNotificationViaEmail();
+                String emailMessageToInstaller =
+                                  "Dear Installer,\n\n"
+                                + "We hope this email finds you well."
+                                + "We would like to inform you that set the status of the following  installation request with request id number: "+requestID+" to canceled.\n\n"
+                                + "Here are the request information :"
+                                + "Part to be installed: " + orderName + "\n"
+                                + "Car model :"+carModel+"\n"
+                                + "Date of installation: " + orderDate + "\n"
+                                + "Customer Email: " + customer_email + "\n\n"
+                                + "Thank you,\nCar Accessories Company";
+                toInstallerEmail.sendNotificationToInstaller(user.getUser_email(), emailMessageToInstaller);
+                SendNotificationViaEmail toCustomerEmail = new SendNotificationViaEmail();
+                String emailMessageToCustomer =
+                                  "Dear Customer,\n\n"
+                                + "We would like to inform you that the installation request with request id number : "+requestID+" has been canceled.\n"
+                                + "Request information :\n"
+                                + "Part to be installed: "+orderName+"\n"
+                                + "Car model :"+carModel+"\n"
+                                + "Date of installation :"+ orderDate +"\n"
+                                + "Installer email :"+user.getUser_email()+"\n"
+                                + "You can always apply for a new installation request.\n\n"
+                                + "Thank you,\nCar Accessories Company";
+                toCustomerEmail.sendNotificationToCustomer(customerEmail,emailMessageToCustomer);
+
+            } else {
+                logger.warning("\nsome thing went wrong please try again later");
+            }
 
         }
 
+    }
+
+    public void showAssigned() throws SQLException {
+        String query = "SELECT `rid`,`pid`,`productName`,`productType`,`email`,`carModel`,`preferredDate`" +
+                " FROM install_request WHERE assigned =?";
+        connectDB connection = new connectDB();
+        connection.testConn();
+        Logger logger = Logger.getLogger("ShowAssigned");
+
+        try (PreparedStatement stmt = connection.getConnection().prepareStatement(query)) {
+            stmt.setString(1, user.getUser_email());
+            ResultSet rSet = stmt.executeQuery();
+            ResultSetMetaData metaData = rSet.getMetaData();
+            int numberOfColumns = metaData.getColumnCount();
+            String format = "| %-15s | %-10s | %-15s | %-30s | %-15s | %-20s |%n";
+            logger.log(Level.INFO, String.format(format, "Request Number", "Product ID", "Product Type", "Requester Email", "Car Model", "Preferred Date"));
+
+            while (rSet.next()) {
+                int rid = rSet.getInt("rid");
+                int pid = rSet.getInt("pid");
+                String productName = rSet.getString("productName");
+                String productType = rSet.getString("productType");
+                String email = rSet.getString("email");
+                String carModel = rSet.getString("carModel");
+                String preferredDate = rSet.getString("preferredDate");
+                logger.log(Level.INFO, String.format(format, rid, pid, productName, email, carModel, preferredDate));
+            }
+        }
     }
 }
Index: use_cases/Notifications.feature
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/use_cases/Notifications.feature b/use_cases/Notifications.feature
new file mode 100644
--- /dev/null	(date 1703174050876)
+++ b/use_cases/Notifications.feature	(date 1703174050876)
@@ -0,0 +1,14 @@
+
+Feature: Notifications
+
+  Scenario: Send Notificatios to customer via email 
+    Given The customer request some instllation 
+    When the request is complete
+    Then send notification to the customer via email
+    
+    
+  Scenario:  Send Notification to installer via email
+   Given The installer receives customer instllation
+   When  the request is complete
+   Then send notification to the installer via email
+    
\ No newline at end of file
Index: src/main/java/CarAccessiores/registeration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class registeration {\r\n    \r\n\tprotected String user_email;\r\n\tprotected String user_password;\r\n\t\r\n\tpublic registeration()\r\n\t{\r\n\t\tuser_email=null;\r\n\t\tuser_password=null;\r\n\t}\r\n\t\r\n\t\r\n\tpublic void setData(String user_email, String user_password) throws SQLException  \r\n\t{\r\n\t\t// TODO Auto-generated method stub\r\n\t\tconnectDB conn = new connectDB();\r\n\t\tconn.testConn();\r\n\t\tString sqll = \"INSERT INTO systemusers (user_email,user_password) VALUES (? , ?)\";\r\n\t\ttry (PreparedStatement stmt = conn.getConnection().prepareStatement(sqll))\r\n\t\t{\r\n            stmt.setString(1, user_email);\r\n            stmt.setString(2, user_password);\r\n            stmt.executeQuery();\r\n    } \r\n\tcatch (SQLException e)\r\n    {\r\n        e.printStackTrace();\r\n    }\r\n\r\n   \r\n}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/CarAccessiores/registeration.java b/src/main/java/CarAccessiores/registeration.java
--- a/src/main/java/CarAccessiores/registeration.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/main/java/CarAccessiores/registeration.java	(date 1703174188301)
@@ -3,12 +3,14 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
+import java.util.logging.Logger;
 
 public class registeration {
     
 	protected String user_email;
 	protected String user_password;
-	
+	protected String user_type;
+	static final Logger logger = Logger.getLogger(registeration.class.getName());
 	public registeration()
 	{
 		user_email=null;
@@ -16,23 +18,31 @@
 	}
 	
 	
-	public void setData(String user_email, String user_password) throws SQLException  
-	{
-		// TODO Auto-generated method stub
-		connectDB conn = new connectDB();
-		conn.testConn();
-		String sqll = "INSERT INTO systemusers (user_email,user_password) VALUES (? , ?)";
-		try (PreparedStatement stmt = conn.getConnection().prepareStatement(sqll))
-		{
-            stmt.setString(1, user_email);
-            stmt.setString(2, user_password);
-            stmt.executeQuery();
-    } 
-	catch (SQLException e)
-    {
-        e.printStackTrace();
-    }
+	public void setData(String user_email, String user_password, String type) throws SQLException {
+	    connectDB conn = new connectDB();
+	    conn.testConn();
+	    
+	    // Check if type is null; set it to a default value if needed
+	    if (type == null) {
+	        type = "default_type";  // Replace "default_type" with an appropriate default value
+	    }
+
+	    String sqll = "INSERT INTO systemusers (user_email, user_password, user_type) VALUES (?, ?, ?)";
+	    try (PreparedStatement stmt = conn.getConnection().prepareStatement(sqll)) {
+	        stmt.setString(1, user_email);
+	        stmt.setString(2, user_password);
+	        stmt.setString(3, type);
+	        int rowsAffected = stmt.executeUpdate();
+
+	        if (rowsAffected > 0) {
+	            logger.info("Congratulations! Your account has been successfully created.");
+	        } else {
+	            logger.warning("Account creation failed. No rows were affected.");
+	        }
+	    } catch (SQLException e) {
+	        e.printStackTrace();
+	    }
+	}
 
-   
+
 }
-}
Index: src/main/java/CarAccessiores/ProductCat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\nimport java.beans.Statement;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.ResultSetMetaData;\r\nimport java.sql.SQLException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\n\r\npublic class ProductCat {\r\n    UserLoginPage userLogin = new UserLoginPage();\r\n    connectDB connec = new connectDB();\r\n    private static final Logger logger = Logger.getLogger(ProductCat.class.getName());\r\n    protected boolean productFound_flag;\r\n    protected boolean flag_iFoundsearchedProduct;\r\n    protected boolean flagYesproductFound;\r\n    \r\n\tpublic boolean system_is_found_catalog()throws SQLException {\r\n\t\tString numberOfProduct=\"SELECT COUNT(*) FROM `productCatalog` WHERE `isAvilable`=1;\";\r\n\t\tconnec.testConn();\r\n\t\tjava.sql.Statement stmt = connec.getConnection().createStatement();\r\n\t\tResultSet rs=((java.sql.Statement) stmt).executeQuery(numberOfProduct);\r\n\t\tif(rs.next()) {\r\n\t\t\tint rowCount=rs.getInt(1);\r\n\r\n\t\t\tproductFound_flag=rowCount>0;\r\n\t\t}\r\n\t\treturn productFound_flag;\r\n\t}\r\n\r\n\tpublic void show_products_catalog_toUser(UserLoginPage userlogin) throws SQLException\r\n\t{\r\n\t\tconnec.testConn();\r\n\t\tlogger.log(Level.INFO,\"| id | product name | product type | product price | avalability |\");\r\n\t\tString query = \"SELECT * FROM productCatalog\";\r\n\t\t\r\n\t\ttry (PreparedStatement preparedStatement = connec.getConnection().prepareStatement(query)) {\r\n            \r\n            try (ResultSet resultSet = preparedStatement.executeQuery()) {\r\n            \t ResultSetMetaData metaData = resultSet.getMetaData();\r\n                 int columnCount = metaData.getColumnCount();\r\n                if (resultSet.next()) {\r\n                \tfor (int i = 1; i <= columnCount; i++) {\r\n                        logger.log(Level.INFO,resultSet.getString(i));\r\n                    }\r\n                }\r\n            }\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void search_and_show_filtered_result(String someProdct, String price, String amountOfMoney)throws SQLException \r\n\t{\r\n\t\tconnec.testConn();\r\n            String query = \"SELECT * FROM ProductCatalog WHERE `producName` = someProdct AND `productPrice` = amountOfMoney\";\r\n            \r\n            try (PreparedStatement preparedStatement = connec.getConnection().prepareStatement(query)) {\r\n                preparedStatement.setString(1, someProdct);\r\n                preparedStatement.setString(2, amountOfMoney);\r\n                \r\n                try (ResultSet resultSet = preparedStatement.executeQuery()) {\r\n                    while (resultSet.next()) {\r\n                        int id = resultSet.getInt(\"id\");\r\n                        String name = resultSet.getString(\"productName\");\r\n                        String Producrprice = resultSet.getString(\"productPrice\");\r\n                        \r\n                        logger.log(Level.INFO,\"Product id:\" + id + \" | \" );\r\n                        logger.log(Level.INFO,\"Product name:\" + name + \" | \");\r\n                        logger.log(Level.INFO,\"Product price:\" + Producrprice + \" | \");\r\n                    }\r\n                }\r\n            \r\n        } \r\n            catch (SQLException e)\r\n            {\r\n            e.printStackTrace();\r\n            }\r\n\t}\r\n\r\n\tpublic boolean  search_about_some_product(String strangeProduct) throws SQLException\r\n\t{\r\n\t\tString query_st=\"SELECT COUNT(*) FROM ProductCatalog WHERE `productNam` = strangeProduct\";\r\n\t\tconnec.testConn();\r\n\t\t        try (PreparedStatement preparedStatement = connec.getConnection().prepareStatement(query_st)){\r\n\t\t   \r\n\t\t            try (ResultSet resultSet = preparedStatement.executeQuery()) {\r\n\t\t                preparedStatement.setString(1, strangeProduct);\r\n\t\t                    if (resultSet.next()) {\r\n\t\t                        int count = resultSet.getInt(1);\r\n\t\t                        return count > 0; // Product exists if count is greater than 0\r\n\t\t                    }\r\n\t\t                }\r\n\t\t        } catch (SQLException e) \r\n\t\t        {\r\n\t\t            e.printStackTrace();\r\n\t\t        }     \r\n\t\t        return false; \r\n\t}\r\n\r\n\tpublic boolean isproductFound_flagFound() {\r\n\t\treturn productFound_flag;\r\n\t}\r\n\tpublic void setFlag_found(boolean productFound_flag) {\r\n\t\tthis.productFound_flag = productFound_flag;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/CarAccessiores/ProductCat.java b/src/main/java/CarAccessiores/ProductCat.java
--- a/src/main/java/CarAccessiores/ProductCat.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/main/java/CarAccessiores/ProductCat.java	(date 1703174187594)
@@ -31,53 +31,108 @@
 		return productFound_flag;
 	}
 
-	public void show_products_catalog_toUser(UserLoginPage userlogin) throws SQLException
-	{
+	public void show_products_catalog_toUser(UserLoginPage userlogin) throws SQLException {
+	    connec.testConn();
+	    logger.log(Level.INFO, "|        id       |   product name   |   product type   |   product price  |   product img    |   availability   |");
+	    String query = "SELECT * FROM productcatalog";
+
+	    try (PreparedStatement preparedStatement = connec.getConnection().prepareStatement(query)) {
+
+	        try (ResultSet resultSet = preparedStatement.executeQuery()) {
+	            ResultSetMetaData metaData = resultSet.getMetaData();
+	            int columnCount = metaData.getColumnCount();
+
+	            while (resultSet.next()) {
+	                StringBuilder rowData = new StringBuilder();
+
+	                for (int i = 1; i <= columnCount; i++) {
+	                    String columnValue = resultSet.getString(i);
+
+	                    // Define a fixed width for each column and left-align the text
+	                    int columnWidth = 18;
+	                    String formattedValue = String.format("%-" + columnWidth + "s", columnValue);
+	                    
+	                    rowData.append(formattedValue);
+
+	                    if (i < columnCount) {
+	                        rowData.append("|"); // Add a vertical bar as a separator between columns
+	                    }
+	                }
+
+	                logger.log(Level.INFO, rowData.toString());
+	            }
+	        }
+	    }
+	}
+
+	public void show_products_catalog_toAdmin(admin d) throws SQLException {
 		connec.testConn();
-		logger.log(Level.INFO,"| id | product name | product type | product price | avalability |");
-		String query = "SELECT * FROM productCatalog";
-		
+		logger.log(Level.INFO, "|        id       |   product name   |   product type   |   product price  |   product img    |   availability   |");
+		String query = "SELECT * FROM productcatalog";
+
 		try (PreparedStatement preparedStatement = connec.getConnection().prepareStatement(query)) {
-            
-            try (ResultSet resultSet = preparedStatement.executeQuery()) {
-            	 ResultSetMetaData metaData = resultSet.getMetaData();
-                 int columnCount = metaData.getColumnCount();
-                if (resultSet.next()) {
-                	for (int i = 1; i <= columnCount; i++) {
-                        logger.log(Level.INFO,resultSet.getString(i));
-                    }
-                }
-            }
-		}
-	}
+
+			try (ResultSet resultSet = preparedStatement.executeQuery()) {
+				ResultSetMetaData metaData = resultSet.getMetaData();
+				int columnCount = metaData.getColumnCount();
+
+				while (resultSet.next()) {
+					StringBuilder rowData = new StringBuilder();
+
+					for (int i = 1; i <= columnCount; i++) {
+						String columnValue = resultSet.getString(i);
+
+						// Define a fixed width for each column and left-align the text
+						int columnWidth = 18;
+						String formattedValue = String.format("%-" + columnWidth + "s", columnValue);
+
+						rowData.append(formattedValue);
+
+						if (i < columnCount) {
+							rowData.append("|"); // Add a vertical bar as a separator between columns
+						}
+					}
+
+					logger.log(Level.INFO, rowData.toString());
+				}
+			}
+		}
 
-	public void search_and_show_filtered_result(String someProdct, String price, String amountOfMoney)throws SQLException 
-	{
-		connec.testConn();
-            String query = "SELECT * FROM ProductCatalog WHERE `producName` = someProdct AND `productPrice` = amountOfMoney";
-            
-            try (PreparedStatement preparedStatement = connec.getConnection().prepareStatement(query)) {
-                preparedStatement.setString(1, someProdct);
-                preparedStatement.setString(2, amountOfMoney);
-                
-                try (ResultSet resultSet = preparedStatement.executeQuery()) {
-                    while (resultSet.next()) {
-                        int id = resultSet.getInt("id");
-                        String name = resultSet.getString("productName");
-                        String Producrprice = resultSet.getString("productPrice");
-                        
-                        logger.log(Level.INFO,"Product id:" + id + " | " );
-                        logger.log(Level.INFO,"Product name:" + name + " | ");
-                        logger.log(Level.INFO,"Product price:" + Producrprice + " | ");
-                    }
-                }
-            
-        } 
-            catch (SQLException e)
-            {
-            e.printStackTrace();
-            }
+	}
+	public void search_and_show_filtered_result(String someProduct, String price) throws SQLException {
+	    connec.testConn();
+	    String query = "SELECT * FROM productcatalog WHERE `productName` = ? AND `productPrice` = ?";
+	    
+	    try (PreparedStatement preparedStatement = connec.getConnection().prepareStatement(query)) {
+	        preparedStatement.setString(1, someProduct);
+	        preparedStatement.setString(2, price);
+	        
+	        boolean foundResults = false; // Track if any results were found
+	        
+	        try (ResultSet resultSet = preparedStatement.executeQuery()) {
+	            
+	            while (resultSet.next()) {
+	                int id = resultSet.getInt("id");
+	                String name = resultSet.getString("productName"); 
+	                String productPrice = resultSet.getString("productPrice"); 
+	                String ProductType = resultSet.getString("productType");
+	                String ProductAvailable = resultSet.getString("isAvilable");
+	                
+	                logger.log(Level.INFO, "Product id: " + id + "      |      " +
+	                                       "Product name: " + name + "      |      " +
+	                                       "Product price: " + productPrice + "      |      " +
+	                                       "Product type: " + ProductType + "      |      " +
+	                                       "Product available: " + ProductAvailable + "      |      ");
+	                foundResults = true;
+	            }
+	        }
+	        
+	        if (!foundResults) {
+	            logger.info("You searched for something that didn't exist!");
+	        }
+	    }
 	}
+
 
 	public boolean  search_about_some_product(String strangeProduct) throws SQLException
 	{
Index: .idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/performance_schema.kIw0nw.meta
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/performance_schema.kIw0nw.meta b/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/performance_schema.kIw0nw.meta
new file mode 100644
--- /dev/null	(date 1703174050840)
+++ b/.idea/dataSources/1de836f4-b278-4cff-aa95-49d4b2e08e96/storage_v2/_src_/schema/performance_schema.kIw0nw.meta	(date 1703174050840)
@@ -0,0 +1,2 @@
+#n:performance_schema
+!<md> [null, 0, null, null, -2147483648, -2147483648]
Index: src/main/java/CarAccessiores/UserLoginPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\nimport java.sql.SQLException;\r\n\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\n\r\npublic class UserLoginPage {\r\n    \r\n\tprotected boolean Admin_is_login; // declaring the flag to check id the admin id login to the system or not\r\n\tprotected boolean Customer_is_login; \r\n\tprotected boolean Installer_is_login;\r\n\t\r\n\tprotected boolean login_flag;\r\n\t\r\n\tprotected String type_admin=\"admin\";\r\n\tprotected String type_customer=\"customer\";\r\n\tprotected String type_installer=\"installer\";\r\n\t\r\n\tprotected String user_email;\r\n\tprotected String user_password;\r\n\t\r\n\tpublic UserLoginPage() // initilazation for this calss\r\n\t{\r\n\t\tAdmin_is_login=false;\r\n\t\tCustomer_is_login=false;\r\n\t\tInstaller_is_login=false;\r\n\t\t\r\n\t\tlogin_flag=false;\r\n\t\t\r\n\t\tuser_email=null;\r\n\t\tuser_password=null;\r\n\t}\r\n\t\r\n\tpublic UserLoginPage(String user_email, String user_password) { \r\n\t\t// TODO Auto-generated constructor stub\r\n\t\tthis.user_email=user_email;\r\n\t\tthis.user_password=user_password;\r\n\t}\r\n\r\n\tpublic void is_valid_credentials(String user_email, String user_password) throws SQLException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t connectDB conDB = new connectDB();\r\n\t\t conDB.testConn();\r\n\t\t String sql = \"SELECT * FROM systemusers WHERE user_email = ? AND user_password = ?\";\r\n\t\ttry (\r\n                PreparedStatement stmt = conDB.getConnection().prepareStatement(sql)) \r\n\t\t{\r\n\t        stmt.setString(1, user_email);\r\n\t        stmt.setString(2, user_password);\r\n\t        ResultSet resultSet = stmt.executeQuery();\r\n\t\t\tif(resultSet.next())\r\n\t\t\t{\r\n\t\t\t\tString type_of_user =resultSet.getString(\"user_type\");\r\n\t\t\t\t\r\n\t\t\t\tthis.Admin_is_login=false;\r\n\t\t\t\tthis.Customer_is_login=false;\r\n\t\t\t\tthis.Installer_is_login=false;\r\n\t\t\t\tthis.login_flag=false;\r\n\t\t\t\t\r\n\t\t\t\tif(type_of_user.equals(type_admin))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.Admin_is_login=true;\r\n\t\t\t\t\tthis.login_flag=true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(type_of_user.equals(type_customer)) \r\n\t\t\t\t{\r\n\t\t\t\t\tthis.Customer_is_login=true;\r\n\t\t\t\t\tthis.login_flag=true;\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tthis.Installer_is_login=true;\r\n\t\t\t\t\tthis.login_flag=true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(SQLException e)\r\n\t\t{\r\n\t\t\tSystem.out.print(e);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic boolean is_user_logged() \r\n\t{\r\n\t\treturn this.login_flag;\r\n\t}\r\n\t\r\n\tpublic boolean Logout() \r\n\t{\r\n\t\tthis.login_flag=false;\r\n\t\treturn this.login_flag;\r\n\t}\r\n\t\r\n\tpublic boolean is_Admin_logged()\r\n\t{\r\n\t  return this.Admin_is_login;\t\r\n\t}\r\n\t\r\n\tpublic boolean is_Customer_logged()\r\n\t{\r\n\t\treturn this.Customer_is_login;\r\n\t}\r\n\t\r\n\tpublic boolean is_Installer_logged()\r\n\t{\r\n\t\treturn this.Installer_is_login;\r\n\t}\r\n\t\r\n\tpublic boolean Admin_logout()\r\n\t{\r\n\t\tthis.Admin_is_login=false;\r\n\t\treturn this.Admin_is_login;\r\n\t}\r\n\t\r\n\tpublic boolean Customer_logout()\r\n\t{\r\n\t\tthis.Customer_is_login=false;\r\n\t\treturn this.Customer_is_login;\r\n\t}\r\n\t\r\n\tpublic boolean Installer_logout()\r\n\t{\r\n\t\tthis.Installer_is_login=false;\r\n\t\treturn this.Installer_is_login;\r\n\t}\r\n\tpublic String getUser_email(){\r\n\r\n\t\treturn this.user_email;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/CarAccessiores/UserLoginPage.java b/src/main/java/CarAccessiores/UserLoginPage.java
--- a/src/main/java/CarAccessiores/UserLoginPage.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/main/java/CarAccessiores/UserLoginPage.java	(date 1703174189020)
@@ -7,7 +7,7 @@
 
 public class UserLoginPage {
     
-	protected boolean Admin_is_login; // declaring the flag to check id the admin id login to the system or not
+	protected boolean Admin_is_login; // declaring the flag to chekck id the admin id login to the system or not
 	protected boolean Customer_is_login; 
 	protected boolean Installer_is_login;
 	
@@ -43,7 +43,7 @@
 		 connectDB conDB = new connectDB();
 		 conDB.testConn();
 		 String sql = "SELECT * FROM systemusers WHERE user_email = ? AND user_password = ?";
-		try (
+		try ( 
                 PreparedStatement stmt = conDB.getConnection().prepareStatement(sql)) 
 		{
 	        stmt.setString(1, user_email);
@@ -124,9 +124,8 @@
 		this.Installer_is_login=false;
 		return this.Installer_is_login;
 	}
-	public String getUser_email(){
-
-		return this.user_email;
-	}
-
+
+    public String getUser_email() {
+        return this.user_email;
+    }
 }
Index: use_cases/UserProfile.feature
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/use_cases/UserProfile.feature b/use_cases/UserProfile.feature
new file mode 100644
--- /dev/null	(date 1703174050877)
+++ b/use_cases/UserProfile.feature	(date 1703174050877)
@@ -0,0 +1,25 @@
+Feature: User Profile Editing
+
+  Scenario: View User Profile Information
+    Given the user is logged in
+    When the user navigates to their profile
+    Then they should see their personal information
+    And they should see their order history
+    And they should see their installation requests
+
+  Scenario: Edit User Profile Information
+    Given the user is logged in
+    When the user selects the edit profile option
+    And updates their contact information
+    Then the changes should be saved successfully
+    And the updated information should be visible in the profile
+
+  Scenario: View Order History
+    Given the user is logged in
+    When the user accesses their profile's order history
+    Then they should see a list of their past orders in details
+
+  Scenario: View Installation Requests
+    Given the user is logged in
+    When the user checks their profile's installation requests
+    Then they should see a list of their previous installation requests in details
\ No newline at end of file
Index: src/test/java/CarAccessiores/InstallationRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\nimport io.cucumber.java.en.Given;\r\nimport io.cucumber.java.en.Then;\r\nimport io.cucumber.java.en.When;\r\n\r\nimport java.sql.SQLException;\r\n\r\nimport static org.junit.Assert.assertTrue;\r\nimport static org.junit.Assert.fail;\r\n\r\nimport java.text.ParseException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class InstallationRequest {\r\n    private static final Logger logger = Logger.getLogger(ProductCat.class.getName());\r\n    customer Customer;\r\n    CarAccessiores.installer installer;\r\n    boolean Customer_logged;\r\n    boolean installer_logged;\r\n    UserLoginPage loginObj;\r\n    String user_email , user_password;\r\n    int id;\r\n    String carModel;\r\n    String date;\r\n    String time;\r\n    String status;\r\n    String installer_email=\"fathi@gmail.com\";\r\n    String installer_password=\"1234567\";\r\n    @Given(\"a customer is logged in\")\r\n    public void a_customer_is_logged_in() {\r\n        try {\r\n            loginObj.is_valid_credentials(this.user_email,this.user_password);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        Customer_logged =loginObj.is_Customer_logged();\r\n        if(Customer_logged) {\r\n            Customer =new customer(this.user_email,this.user_password);\r\n        }else {\r\n            fail();//the test case will not pass if the customer login failed\r\n\r\n        }\r\n\r\n    }\r\n    @Given(\"there are available installers\")\r\n    public void there_are_available_installers() {\r\n        try {\r\n            loginObj.is_valid_credentials(this.installer_email,this.installer_password);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        installer_logged =loginObj.is_Installer_logged();\r\n        if(installer_logged) {\r\n            installer =new installer(this.user_email,this.user_password);\r\n        }else {\r\n            fail(\"there is no available installer\");//the test case will not pass if the installer login failed\r\n\r\n        }\r\n\r\n\r\n    }\r\n    @When(\"the customer requests installation for a specific product\")\r\n    public void the_customer_requests_installation_for_a_specific_product() {\r\n        id=1;//assume the product the Customer want to install has the id 1\r\n\r\n    }\r\n    @When(\"provides installation details:\")\r\n    public void provides_installation_details() {\r\n        date=\"22-11-2023\";//the date format the user should enter the date in\r\n        carModel=\"skoda octavia 2019\";//the user should enter the car model as a string with no specific format\r\n\r\n    }\r\n    @Then(\"the installation request is submitted successfully\")\r\n    public void the_installation_request_is_submitted_successfully() {\r\n        try {\r\n            Customer.installationRequest(id,carModel,date);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        } catch (ParseException e) {\r\n            logger.log(Level.WARNING,\"Invalid date format. Please enter a date in the format dd-MM-yyyy.\");\r\n            fail();\r\n        }\r\n\r\n    }\r\n    @Given(\"an installation request is pending\")\r\n    public void an_installation_request_is_pending() {\r\n        try {\r\n            installer.showPending();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n\r\n    }\r\n    @When(\"an installer schedules an appointment for the request\")\r\n    public void an_installer_schedules_an_appointment_for_the_request() {\r\n        //assume the request number is 1 and the time the installer want performe his task is 12:31:00\r\n        id =1;\r\n        time=\"12:31:00\";\r\n        try {\r\n            installer.schedule(id,time);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    @Then(\"the appointment is scheduled successfully\")\r\n    public void the_appointment_is_scheduled_successfully() {\r\n        try {\r\n            status=installer.getStatus(id);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n    }\r\n    @Then(\"the request status is Scheduled\")\r\n    public void the_request_status_is_Scheduled() {\r\n        assertTrue(status.equals(\"scheduled\"));\r\n\r\n    }\r\n//    @When(\"the customer checks the status of their installation request\")\r\n//    public void the_customer_checks_the_status_of_their_installation_request() {\r\n//\r\n//\r\n//    }\r\n    @Then(\"the request status is displayed as Scheduled\")\r\n    public void the_request_status_is_displayed_as_Scheduled() {\r\n        // Write code here that turns the phrase above into concrete actions\r\n        try {\r\n            Customer.showScheduled();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n    }\r\n    @Given(\"an appointment is Scheduled\")\r\n    public void an_appointment_is_Scheduled() {\r\n\r\n\r\n    }\r\n    @When(\"the installer completes the installation\")\r\n    public void the_installer_completes_the_installation() {\r\n        try {\r\n            installer.setCompleted(id);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n\r\n    }\r\n    @Then(\"the installation request status is updated to completed\")\r\n    public void the_installation_request_status_is_updated_to_completed() {\r\n        try {\r\n            status=installer.getStatus(id);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n        assertTrue(status.equals(\"completed\"));\r\n    }\r\n//    @When(\"the customer checks the status of their installation request\")\r\n//    public void the_customer_checks_the_status_of_their_installation_request() {\r\n//        // Write code here that turns the phrase above into concrete actions\r\n//        throw new io.cucumber.java.PendingException();\r\n//    }\r\n    @Then(\"the request status is displayed as completed\")\r\n    public void the_request_status_is_displayed_as_completed() {\r\n        try {\r\n            Customer.showCompleted();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n    }\r\n    @Given(\"an appointment is scheduled\")\r\n    public void an_appointment_is_scheduled() {\r\n        status=\"scheduled\";\r\n\r\n    }\r\n    @When(\"the installer cancels the installation\")\r\n    public void the_installer_cancels_the_installation() {\r\n        try {\r\n            installer.setCanceled(id);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n    }\r\n    @Then(\"the installation request status is updated to canceled\")\r\n    public void the_installation_request_status_is_updated_to_canceled() {\r\n        try {\r\n            status=installer.getStatus(id);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n        assertTrue(status.equals(\"canceled\"));\r\n\r\n    }\r\n//    @When(\"the customer checks the status of their installation request\")\r\n//    public void the_customer_checks_the_status_of_their_installation_request() {\r\n//        // Write code here that turns the phrase above into concrete actions\r\n//        throw new io.cucumber.java.PendingException();\r\n//    }\r\n    @Then(\"the request status is displayed as canceled\")\r\n    public void the_request_status_is_displayed_as() {\r\n        try {\r\n            Customer.showCanceled();\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            fail();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/CarAccessiores/InstallationRequest.java b/src/test/java/CarAccessiores/InstallationRequest.java
--- a/src/test/java/CarAccessiores/InstallationRequest.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/test/java/CarAccessiores/InstallationRequest.java	(date 1703174198777)
@@ -124,11 +124,7 @@
         assertTrue(status.equals("scheduled"));
 
     }
-//    @When("the customer checks the status of their installation request")
-//    public void the_customer_checks_the_status_of_their_installation_request() {
-//
-//
-//    }
+
     @Then("the request status is displayed as Scheduled")
     public void the_request_status_is_displayed_as_Scheduled() {
         // Write code here that turns the phrase above into concrete actions
@@ -164,11 +160,7 @@
         }
         assertTrue(status.equals("completed"));
     }
-//    @When("the customer checks the status of their installation request")
-//    public void the_customer_checks_the_status_of_their_installation_request() {
-//        // Write code here that turns the phrase above into concrete actions
-//        throw new io.cucumber.java.PendingException();
-//    }
+
     @Then("the request status is displayed as completed")
     public void the_request_status_is_displayed_as_completed() {
         try {
@@ -203,11 +195,7 @@
         assertTrue(status.equals("canceled"));
 
     }
-//    @When("the customer checks the status of their installation request")
-//    public void the_customer_checks_the_status_of_their_installation_request() {
-//        // Write code here that turns the phrase above into concrete actions
-//        throw new io.cucumber.java.PendingException();
-//    }
+
     @Then("the request status is displayed as canceled")
     public void the_request_status_is_displayed_as() {
         try {
Index: src/test/java/CarAccessiores/AdminDashboard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CarAccessiores;\r\n\r\n\r\nimport static org.junit.Assert.assertEquals;\r\nimport java.sql.SQLException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\nimport io.cucumber.java.en.Given;\r\nimport io.cucumber.java.en.Then;\r\nimport io.cucumber.java.en.When;\r\n\r\npublic class AdminDashboard\r\n{\r\n     private static final Logger logger = Logger.getLogger(AdminDashboard .class.getName());\r\n     UserLoginPage LoginA;\r\n     Dashboard dashboard;\r\n\r\n     public AdminDashboard(Dashboard dashboard)\r\n     {\r\n    \t LoginA = new UserLoginPage(\"jaber@najah.edu\",\"123445\");\r\n    \t this.dashboard= dashboard;\r\n     }\r\n\r\n     @Given(\"Admin is login to the system\")\r\n     public void admin_is_login_to_the_system() {\r\n        try {\r\n        \tLoginA.is_valid_credentials(\"jaber@najah.edu\", \"123445\");\r\n        }\r\n        catch(SQLException ex)\r\n        {\r\n        \tex.printStackTrace();\r\n        }\r\n     }\r\n\r\n     @When(\"the admin want to add  categorie\")\r\n     public void the_admin_want_to_add_categorie()\r\n     {\r\n    \t dashboard.addCat(LoginA);\r\n     }\r\n\r\n     @Then(\"the categorie addedd successfully\")\r\n     public void the_categorie_addedd_successfully()\r\n     {\r\n         assertEquals(true,dashboard.categorieAdded());\r\n     }\r\n\r\n     @When(\"the admin want to edit certaine categorie\")\r\n     public void the_admin_want_to_edit_certaine_categorie()\r\n     {\r\n        dashboard.editCat(LoginA);\r\n     }\r\n\r\n     @Then(\"the categorie edited successfully\")\r\n     public void the_categorie_edited_successfully()\r\n     {\r\n        assertEquals(true,dashboard.categorieEdited());\r\n     }\r\n\r\n     @When(\"the admin want to delete a certaing categorie\")\r\n     public void the_admin_want_to_delete_a_certaing_categorie()\r\n     {\r\n         dashboard.deleteCat(LoginA);\r\n     }\r\n\r\n     @Then(\"the categorie deleted successfully\")\r\n     public void the_categorie_deleted_successfully()\r\n     {\r\n       assertEquals(true,dashboard.categorieDeleted());\r\n     }\r\n\r\n     @Given(\"Admin is not login\")\r\n     public void admin_is_not_login()\r\n     {\r\n        try\r\n        {\r\n        \tLoginA.is_valid_credentials(\"jaber@najah.edu\",\"123445\");\r\n        \tLoginA.Admin_logout();\r\n        }\r\n        catch(SQLException expcetion)\r\n        {\r\n        \texpcetion.printStackTrace();\r\n        }\r\n     }\r\n\r\n     @Then(\"show error message  {string}\")\r\n     public void show_error_message(String errorMsg)\r\n     {\r\n        logger.log(Level.INFO,\"->\"+errorMsg);\r\n     }\r\n\r\n     @When(\"the admin want to edit  categorie\")\r\n     public void the_admin_want_to_edit_categorie()\r\n     {\r\n    \t dashboard.editCat(LoginA);\r\n     }\r\n\r\n     @When(\"the admin want to delete categorie\")\r\n     public void the_admin_want_to_delete_categorie() {\r\n    \t dashboard.deleteCat(LoginA);\r\n     }\r\n\r\n     @When(\"the admin want to add product listing\")\r\n     public void the_admin_want_to_add_product_listing() {\r\n    \tdashboard.addProList(LoginA);\r\n     }\r\n\r\n     @Then(\"the product listing added successfully\")\r\n     public void the_product_listing_added_successfully() {\r\n        assertEquals(true,dashboard.ProListAddes());\r\n     }\r\n\r\n     @When(\"the admin want to edit product listing\")\r\n     public void the_admin_want_to_edit_product_listing() {\r\n         dashboard.editProList(LoginA);\r\n     }\r\n\r\n     @Then(\"the product listing edited successfully\")\r\n     public void the_product_listing_edited_successfully() {\r\n         assertEquals(true,dashboard.ProListEdited());\r\n     }\r\n\r\n     @When(\"the admin want to delete product listing\")\r\n     public void the_admin_want_to_delete_product_listing() {\r\n         dashboard.deleteProList(LoginA);\r\n     }\r\n\r\n     @Then(\"the product listing deleted successfully\")\r\n     public void the_product_listing_deleted_successfully() {\r\n         assertEquals(true,dashboard.ProListDeleted());\r\n     }\r\n\r\n     @When(\"the admin want to view the customer accounts\")\r\n     public void the_admin_want_to_view_the_customer_accounts() {\r\n        dashboard.viewCustomerAccounts(LoginA);\r\n     }\r\n\r\n     @Then(\"showing customer account Done\")\r\n     public void showing_customer_account_done() {\r\n         assertEquals(true,dashboard.showingCustAccDone());\r\n     }\r\n\r\n     @When(\"the admin want to Schedule installation appointments\")\r\n     public void the_admin_want_to_schedule_installation_appointments() {\r\n         dashboard.ScheduleInstallationAppointments(LoginA);\r\n     }\r\n\r\n     @Then(\"Scheduling installation appointments Done\")\r\n     public void scheduling_installation_appointments_done() {\r\n         assertEquals(true,dashboard.showingScheduleInstallationAppointmentsDone());\r\n     }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/CarAccessiores/AdminDashboard.java b/src/test/java/CarAccessiores/AdminDashboard.java
--- a/src/test/java/CarAccessiores/AdminDashboard.java	(revision de81febbaaf37cc8f27ea845a1014e03701d34a0)
+++ b/src/test/java/CarAccessiores/AdminDashboard.java	(date 1703174177847)
@@ -1,154 +1,156 @@
 package CarAccessiores;
 
-
-import static org.junit.Assert.assertEquals;
-import java.sql.SQLException;
-import java.util.logging.Level;
-import java.util.logging.Logger;
-
 import io.cucumber.java.en.Given;
 import io.cucumber.java.en.Then;
 import io.cucumber.java.en.When;
 
-public class AdminDashboard
-{
-     private static final Logger logger = Logger.getLogger(AdminDashboard .class.getName());
-     UserLoginPage LoginA;
-     Dashboard dashboard;
+import java.sql.SQLException;
+
+import static org.junit.Assert.fail;
+
+public class AdminDashboard {
+    String user_email , user_password;
+    int pid,rid;
+    admin admin;
+    //jaberDar@najah.edu
+    //123455
+    @Given("the admin is logged in and on the dashboard")
+    public void the_admin_is_logged_in_and_on_the_dashboard() {
+        user_email="jaberDar@najah.edu";
+        user_password="123455";
+        admin=new admin(user_email,user_password);
+    }
+
+    @When("the admin selects the option to manage product listing")
+    public void the_admin_selects_the_option_to_manage_product_listing() {
+
+    }
+
+    @Then("the admin should see a list of current products")
+    public void the_admin_should_see_a_list_of_current_products() {
+        try {
+            admin.showProductCatalog();
+        } catch (SQLException e) {
+            fail("some thing wrong with showProductCatalog method ");
+        }
+    }
+
+    @Then("should be able to add a new product")
+    public void should_be_able_to_add_a_new_product() {
+        try {
+            admin.addProduct("product name ","product type", 1500);
+        } catch (SQLException e) {
+            fail("some thing wrong with addProduct method ");
+        }
+
+    }
+
+    @Then("should be able to edit details of existing products")
+    public void should_be_able_to_edit_details_of_existing_products() {
+        pid =7;
+        try {
+            admin.isUnavailable(pid);
+        } catch (SQLException e) {
+            fail("some thing wrong with isUnavailable method");
+        }
+        try {
+            admin.changeProductName(pid,"newName");
+        } catch (SQLException e) {
+            fail("some thing wrong with changeProductName method");
+        }
+        try {
+            admin.changeProductType(pid,"newType");
+        } catch (SQLException e) {
+            fail("some thing wrong with changeProductType method");
+        }
+        try {
+            admin.changeProductPrice(pid,1000);
+        } catch (SQLException e) {
+            fail("some thing wrong with changeProductPrice method");
+        }
+    }
+
+    @Then("should be able to delete a product")
+    public void should_be_able_to_delete_a_product() {
+        pid=4;
+        try {
+            admin.deleteProduct(pid);
+        } catch (SQLException e) {
+            fail("some thing wrong with deleteProduct method");
+        }
+    }
+
+    @When("the admin selects the option to manage customer accounts")
+    public void the_admin_selects_the_option_to_manage_customer_accounts() {
+
+    }
 
-     public AdminDashboard(Dashboard dashboard)
-     {
-    	 LoginA = new UserLoginPage("jaber@najah.edu","123445");
-    	 this.dashboard= dashboard;
-     }
+    @Then("the admin should see a list of registered customers with detailes")
+    public void the_admin_should_see_a_list_of_registered_customers() {
+        try {
+            admin.showCustomer();
+        } catch (SQLException e) {
+            fail("some thing wrong with showCustomer method");
+        }
+    }
 
-     @Given("Admin is login to the system")
-     public void admin_is_login_to_the_system() {
+    @Then("should be able to edit customer information")
+    public void should_be_able_to_edit_customer_information() {
+        try {
+            admin.UpdatePass("khalidsameer@gmail.com","00000");
+        } catch (SQLException e) {
+            fail("some thing wrong with UpdatePass method");
+        }
+        try {
+            admin.updateEmail("khalidsameer@gmail.com","newEmail@gmail.com");
+        } catch (SQLException e) {
+            fail("some thing wrong with updateEmail method");
+        }
+    }
+
+    @Then("should be able to delete a customer account")
+    public void should_be_able_to_delete_a_customer_account() {
+        try {
+            admin.DeleteUser("khalidfathi@yahoo.com");
+        } catch (SQLException e) {
+            fail("some thing wrong with DeleteUser method");
+        }
+    }
+
+    @When("the admin accesses the installation management section")
+    public void the_admin_accesses_the_installation_management_section() {
+
+    }
+
+    @Then("the admin should see a list of scheduled installation appointments")
+    public void the_admin_should_see_a_list_of_scheduled_installation_appointments() {
+        try {
+            admin.showScheduledAppointments();
+        } catch (SQLException e) {
+            fail("some thing wrong with showScheduledAppointments method");
+        }
+    }
+
+    @Then("should be able to reschedule appointments")
+    public void should_be_able_to_reschedule_appointments() {
+        try {
+            admin.scheduleNewAppointment(rid,"installer@gmail.com","9:11:30");
+        } catch (SQLException e) {
+            fail("some thing wrong with scheduleNewAppointment method");
+        }
+    }
+
+    @Then("should be able to mark appointments as completed or canceled")
+    public void should_be_able_to_mark_appointments_as_completed_or_canceled() {
         try {
-        	LoginA.is_valid_credentials("jaber@najah.edu", "123445");
+            admin.setStatusToCompleted(rid);
+        } catch (SQLException e) {
+            fail("some thing wrong with setStatusToCompleted method");
         }
-        catch(SQLException ex)
-        {
-        	ex.printStackTrace();
+        try {
+            admin.setStatusToCanceled(rid);
+        } catch (SQLException e) {
+            fail("some thing wrong with setStatusToCanceled method");
         }
-     }
-
-     @When("the admin want to add  categorie")
-     public void the_admin_want_to_add_categorie()
-     {
-    	 dashboard.addCat(LoginA);
-     }
-
-     @Then("the categorie addedd successfully")
-     public void the_categorie_addedd_successfully()
-     {
-         assertEquals(true,dashboard.categorieAdded());
-     }
-
-     @When("the admin want to edit certaine categorie")
-     public void the_admin_want_to_edit_certaine_categorie()
-     {
-        dashboard.editCat(LoginA);
-     }
-
-     @Then("the categorie edited successfully")
-     public void the_categorie_edited_successfully()
-     {
-        assertEquals(true,dashboard.categorieEdited());
-     }
-
-     @When("the admin want to delete a certaing categorie")
-     public void the_admin_want_to_delete_a_certaing_categorie()
-     {
-         dashboard.deleteCat(LoginA);
-     }
-
-     @Then("the categorie deleted successfully")
-     public void the_categorie_deleted_successfully()
-     {
-       assertEquals(true,dashboard.categorieDeleted());
-     }
-
-     @Given("Admin is not login")
-     public void admin_is_not_login()
-     {
-        try
-        {
-        	LoginA.is_valid_credentials("jaber@najah.edu","123445");
-        	LoginA.Admin_logout();
-        }
-        catch(SQLException expcetion)
-        {
-        	expcetion.printStackTrace();
-        }
-     }
-
-     @Then("show error message  {string}")
-     public void show_error_message(String errorMsg)
-     {
-        logger.log(Level.INFO,"->"+errorMsg);
-     }
-
-     @When("the admin want to edit  categorie")
-     public void the_admin_want_to_edit_categorie()
-     {
-    	 dashboard.editCat(LoginA);
-     }
-
-     @When("the admin want to delete categorie")
-     public void the_admin_want_to_delete_categorie() {
-    	 dashboard.deleteCat(LoginA);
-     }
-
-     @When("the admin want to add product listing")
-     public void the_admin_want_to_add_product_listing() {
-    	dashboard.addProList(LoginA);
-     }
-
-     @Then("the product listing added successfully")
-     public void the_product_listing_added_successfully() {
-        assertEquals(true,dashboard.ProListAddes());
-     }
-
-     @When("the admin want to edit product listing")
-     public void the_admin_want_to_edit_product_listing() {
-         dashboard.editProList(LoginA);
-     }
-
-     @Then("the product listing edited successfully")
-     public void the_product_listing_edited_successfully() {
-         assertEquals(true,dashboard.ProListEdited());
-     }
-
-     @When("the admin want to delete product listing")
-     public void the_admin_want_to_delete_product_listing() {
-         dashboard.deleteProList(LoginA);
-     }
-
-     @Then("the product listing deleted successfully")
-     public void the_product_listing_deleted_successfully() {
-         assertEquals(true,dashboard.ProListDeleted());
-     }
-
-     @When("the admin want to view the customer accounts")
-     public void the_admin_want_to_view_the_customer_accounts() {
-        dashboard.viewCustomerAccounts(LoginA);
-     }
-
-     @Then("showing customer account Done")
-     public void showing_customer_account_done() {
-         assertEquals(true,dashboard.showingCustAccDone());
-     }
-
-     @When("the admin want to Schedule installation appointments")
-     public void the_admin_want_to_schedule_installation_appointments() {
-         dashboard.ScheduleInstallationAppointments(LoginA);
-     }
-
-     @Then("Scheduling installation appointments Done")
-     public void scheduling_installation_appointments_done() {
-         assertEquals(true,dashboard.showingScheduleInstallationAppointmentsDone());
-     }
-
-
+    }
 }
